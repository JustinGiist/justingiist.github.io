[{"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\index.tsx":"1","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\reportWebVitals.ts":"2","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\App.tsx":"3","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\ThemeManager.tsx":"4","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\RenderComponent\\RenderComponent.tsx":"5","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\testPage.tsx":"6","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\BezierBackground\\DesignBackground.tsx":"7","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\OverlayControl\\OverlayControl.tsx":"8","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\SpookyTheme.tsx":"9","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\SideBar\\SideBar.tsx":"10","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\ResumePage\\ResumePage.tsx":"11","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\EnterpriseTheme\\EnterpriseTheme.tsx":"12","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\ContactPage\\ContactPage.tsx":"13","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\SidebarV2\\SidebarV2.tsx":"14","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\FragmentsPage\\FragmentsPage.tsx":"15","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\SalesTheme\\SalesTheme.tsx":"16","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\TopbarV2\\TopbarV2.tsx":"17","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\MusicPage\\MusicPage.tsx":"18","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\BlackRed\\BlackRed.tsx":"19","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\NotePage\\NotePage.tsx":"20","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\PageLayout\\SwitchInput.tsx":"21","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\CardCalculator\\CardCalculator.tsx":"22","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Icon\\Icon.tsx":"23","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\BezierBackground\\ParallaxBackground.tsx":"24","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Rainimation\\Rainimation.tsx":"25","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\CartComponent.tsx":"26","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\ResumePage\\ThreeD.tsx":"27","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\FragmentsPage\\FragmentsEnumsAndI.tsx":"28","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\PageLayout\\PageLayout.tsx":"29","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\TabsComponent\\TabsComponent.tsx":"30","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\CloseComponent\\CloseComponent.tsx":"31","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\NotePage\\components\\NotesComponent\\NotesComponent.tsx":"32","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\utils\\objectUtils.js":"33","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\PageLayout\\UndoRedoComponent.tsx":"34","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\PageLayout\\ErrorBoundary.jsx":"35","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\PageLayout\\AnimatedCheckmark\\AnimatedCheckmark.jsx":"36","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\PageLayout\\StopNavigation.tsx":"37","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Modal\\ModalContext.tsx":"38","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Modal\\Modal.tsx":"39","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\EnterpriseTheme\\EnterpriseCharts.tsx":"40","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\YetiPage\\YetiPage.tsx":"41","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Carousel\\Carousel.tsx":"42","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\HeroPageLayout\\HeroPageLayout.tsx":"43","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\HeroPageLayout\\SwitchHeroComponent.tsx":"44","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\DesignerPage.tsx":"45","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Text\\Headline.tsx":"46","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Text\\Body.tsx":"47","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Layouts\\ColumnLayout.tsx":"48","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Loading\\Loading.tsx":"49","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Text\\SubHeadline.tsx":"50","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Layouts\\RowLayout.tsx":"51","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Layouts\\BlockLayout.tsx":"52","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\HeroPage\\HeroPage.tsx":"53","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\MediaTile\\MediaTile.tsx":"54","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\HeroCard\\ImageComponent.tsx":"55","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\HeroCard\\HeroCard.tsx":"56","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Walkthrough\\Walkthrough.tsx":"57","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\ResumePage\\Stars.tsx":"58","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\SpaceNews\\SpaceNews.tsx":"59","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\ImageVideo.tsx":"60","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\BobsBurgers\\BobsBurgers.tsx":"61","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\Spell.tsx":"62","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\utils\\stringUtils.js":"63","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\DnDMain.tsx":"64","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\MagicSchools.tsx":"65","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Pill\\Pill.tsx":"66","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\Monsters.tsx":"67","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\DndInterfaces.tsx":"68","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\DndData.tsx":"69","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\Equipment.tsx":"70","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\Classes.tsx":"71","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\utils\\numberUtils.js":"72","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\Races.tsx":"73","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\Rules.tsx":"74","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\Character.tsx":"75","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Layouts\\FormLayout.tsx":"76","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\FormComponents\\InputFallback.tsx":"77","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\FormComponents\\InputWrapper.tsx":"78","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\ResumePage\\GlobeElement.tsx":"79","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\SocialPage\\SocialPage.tsx":"80","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Layouts\\TileLayout.tsx":"81","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Layouts\\Tile.tsx":"82","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\SocialPage\\SocialData.ts":"83","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\SocialPage\\PagingOverlay.tsx":"84"},{"size":517,"mtime":1659652947481,"results":"85","hashOfConfig":"86"},{"size":440,"mtime":1648860274804,"results":"87","hashOfConfig":"86"},{"size":2874,"mtime":1687811786501,"results":"88","hashOfConfig":"86"},{"size":18006,"mtime":1685756783807,"results":"89","hashOfConfig":"86"},{"size":7481,"mtime":1685915670219,"results":"90","hashOfConfig":"86"},{"size":773,"mtime":1675816371175,"results":"91","hashOfConfig":"86"},{"size":30544,"mtime":1663021630155,"results":"92","hashOfConfig":"86"},{"size":357,"mtime":1663021400153,"results":"93","hashOfConfig":"86"},{"size":21623,"mtime":1680557668118,"results":"94","hashOfConfig":"86"},{"size":9627,"mtime":1663020956598,"results":"95","hashOfConfig":"96"},{"size":9506,"mtime":1688169744760,"results":"97","hashOfConfig":"86"},{"size":12256,"mtime":1680558664820,"results":"98","hashOfConfig":"86"},{"size":1537,"mtime":1680364873148,"results":"99","hashOfConfig":"86"},{"size":2514,"mtime":1686252198235,"results":"100","hashOfConfig":"86"},{"size":5558,"mtime":1688239925143,"results":"101","hashOfConfig":"86"},{"size":18387,"mtime":1668955657308,"results":"102","hashOfConfig":"86"},{"size":904,"mtime":1660223855878,"results":"103","hashOfConfig":"86"},{"size":9183,"mtime":1681069691630,"results":"104","hashOfConfig":"86"},{"size":6135,"mtime":1679954648690,"results":"105","hashOfConfig":"86"},{"size":455,"mtime":1662519780007,"results":"106","hashOfConfig":"86"},{"size":21958,"mtime":1679871012368,"results":"107","hashOfConfig":"86"},{"size":2651,"mtime":1669304557982,"results":"108","hashOfConfig":"96"},{"size":6489,"mtime":1686406179567,"results":"109","hashOfConfig":"86"},{"size":6073,"mtime":1648860274762,"results":"110","hashOfConfig":"96"},{"size":2923,"mtime":1663021200631,"results":"111","hashOfConfig":"86"},{"size":5306,"mtime":1679152406435,"results":"112","hashOfConfig":"86"},{"size":14633,"mtime":1680559387174,"results":"113","hashOfConfig":"96"},{"size":60109,"mtime":1683060165880,"results":"114","hashOfConfig":"86"},{"size":15426,"mtime":1679152446293,"results":"115","hashOfConfig":"86"},{"size":1188,"mtime":1682177112484,"results":"116","hashOfConfig":"86"},{"size":512,"mtime":1654204010520,"results":"117","hashOfConfig":"86"},{"size":7270,"mtime":1666546707418,"results":"118","hashOfConfig":"86"},{"size":773,"mtime":1665852752622,"results":"119","hashOfConfig":"86"},{"size":1800,"mtime":1669673833055,"results":"120","hashOfConfig":"86"},{"size":1342,"mtime":1660960047739,"results":"121","hashOfConfig":"86"},{"size":976,"mtime":1668192245407,"results":"122","hashOfConfig":"86"},{"size":858,"mtime":1668440018726,"results":"123","hashOfConfig":"96"},{"size":194,"mtime":1668950638233,"results":"124","hashOfConfig":"86"},{"size":3936,"mtime":1681070018370,"results":"125","hashOfConfig":"86"},{"size":5788,"mtime":1679238806607,"results":"126","hashOfConfig":"86"},{"size":8929,"mtime":1681069045021,"results":"127","hashOfConfig":"86"},{"size":873,"mtime":1679276583863,"results":"128","hashOfConfig":"86"},{"size":930,"mtime":1675294520795,"results":"129","hashOfConfig":"96"},{"size":5560,"mtime":1681069100812,"results":"130","hashOfConfig":"96"},{"size":4528,"mtime":1678485599239,"results":"131","hashOfConfig":"96"},{"size":1068,"mtime":1680364501613,"results":"132","hashOfConfig":"86"},{"size":897,"mtime":1680976163987,"results":"133","hashOfConfig":"86"},{"size":1434,"mtime":1686241675561,"results":"134","hashOfConfig":"86"},{"size":2718,"mtime":1681498836138,"results":"135","hashOfConfig":"86"},{"size":593,"mtime":1680364517110,"results":"136","hashOfConfig":"86"},{"size":1024,"mtime":1681511525929,"results":"137","hashOfConfig":"86"},{"size":892,"mtime":1680972898769,"results":"138","hashOfConfig":"86"},{"size":3872,"mtime":1681067953908,"results":"139","hashOfConfig":"86"},{"size":971,"mtime":1679435916390,"results":"140","hashOfConfig":"86"},{"size":899,"mtime":1680832695092,"results":"141","hashOfConfig":"86"},{"size":4726,"mtime":1681070025685,"results":"142","hashOfConfig":"86"},{"size":2980,"mtime":1680353627490,"results":"143","hashOfConfig":"86"},{"size":366,"mtime":1680354198187,"results":"144","hashOfConfig":"86"},{"size":1980,"mtime":1682209158369,"results":"145","hashOfConfig":"86"},{"size":1879,"mtime":1680832730928,"results":"146","hashOfConfig":"86"},{"size":4245,"mtime":1682209159582,"results":"147","hashOfConfig":"86"},{"size":3429,"mtime":1681914889456,"results":"148","hashOfConfig":"86"},{"size":4490,"mtime":1688238149098,"results":"149","hashOfConfig":"86"},{"size":5545,"mtime":1682873345772,"results":"150","hashOfConfig":"86"},{"size":6350,"mtime":1688237078100,"results":"151","hashOfConfig":"86"},{"size":2826,"mtime":1681579370481,"results":"152","hashOfConfig":"86"},{"size":6037,"mtime":1688237251422,"results":"153","hashOfConfig":"86"},{"size":4130,"mtime":1688237618039,"results":"154","hashOfConfig":"86"},{"size":8399,"mtime":1688170431857,"results":"155","hashOfConfig":"86"},{"size":7029,"mtime":1688236960119,"results":"156","hashOfConfig":"86"},{"size":3116,"mtime":1688170624786,"results":"157","hashOfConfig":"86"},{"size":1095,"mtime":1681912885718,"results":"158","hashOfConfig":"86"},{"size":5037,"mtime":1688237745025,"results":"159","hashOfConfig":"86"},{"size":2564,"mtime":1682875226191,"results":"160","hashOfConfig":"86"},{"size":6134,"mtime":1682289128876,"results":"161","hashOfConfig":"86"},{"size":2308,"mtime":1682205459466,"results":"162","hashOfConfig":"86"},{"size":160,"mtime":1682203777616,"results":"163","hashOfConfig":"86"},{"size":5018,"mtime":1682209704610,"results":"164","hashOfConfig":"86"},{"size":1104,"mtime":1682548085588,"results":"165","hashOfConfig":"86"},{"size":5227,"mtime":1688238133015,"results":"166","hashOfConfig":"86"},{"size":942,"mtime":1685758003600,"results":"167","hashOfConfig":"86"},{"size":823,"mtime":1685760519593,"results":"168","hashOfConfig":"86"},{"size":44802,"mtime":1686409093538,"results":"169","hashOfConfig":"86"},{"size":1108,"mtime":1686406803853,"results":"170","hashOfConfig":"86"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18kihq5",{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},"10h5kti",{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"203"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340"},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344"},{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348"},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361"},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368"},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372"},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379"},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","suppressedMessages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437"},{"filePath":"438","messages":"439","suppressedMessages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\index.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\reportWebVitals.ts",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\App.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\ThemeManager.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\RenderComponent\\RenderComponent.tsx",["447","448"],[],"import { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { ThemeManagerContext } from \"../../App\";\r\nimport EnterpriseTheme from \"../../pages/ThemeSwitcher/EnterpriseTheme/EnterpriseTheme\";\r\nimport SpookyTheme from \"../../pages/ThemeSwitcher/SpookyTheme\";\r\nimport { GlobalThemes, useWindowDimensions } from \"../../ThemeManager\";\r\nimport \"./RenderComponent.scss\";\r\nimport ResumePage from \"../../pages/ThemeSwitcher/ResumePage/ResumePage\";\r\nimport OverlayControl from \"../OverlayControl/OverlayControl\";\r\nimport ContactPage from \"../../pages/ThemeSwitcher/ContactPage/ContactPage\";\r\nimport SalesTheme from \"../../pages/ThemeSwitcher/SalesTheme/SalesTheme\";\r\nimport DesignBackground from \"../BezierBackground/DesignBackground\";\r\nimport backgroundImage from \"../../assets/Background.jpg\";\r\nimport TestPage from \"../../pages/testPage\";\r\nimport FragmentsPage from \"../../pages/ThemeSwitcher/FragmentsPage/FragmentsPage\";\r\nimport SidebarV2 from \"../SidebarV2/SidebarV2\";\r\nimport TopbarV2 from \"../TopbarV2/TopbarV2\";\r\nimport BlackRed from \"../../pages/ThemeSwitcher/BlackRed/BlackRed\";\r\nimport MusicPage from \"../../pages/ThemeSwitcher/MusicPage/MusicPage\";\r\nimport NotePage from \"../../pages/ThemeSwitcher/NotePage/NotePage\";\r\nimport YetiPage from \"../YetiPage/YetiPage\";\r\nimport DesignerPage from \"../../pages/ThemeSwitcher/DesignerPage\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport HeroPage from \"../../pages/HeroPage/HeroPage\";\r\nimport Walkthrough from \"../Walkthrough/Walkthrough\";\r\nimport Stars from \"../../pages/ThemeSwitcher/ResumePage/Stars\";\r\nimport SpaceNews from \"../../pages/ThemeSwitcher/SpaceNews/SpaceNews\";\r\nimport BobsBurgers from \"../../pages/ThemeSwitcher/BobsBurgers/BobsBurgers\";\r\nimport DndMain from \"../../pages/FifthEdition/DnDMain\";\r\nimport MagicSchools from \"../../pages/FifthEdition/MagicSchools\";\r\nimport SocialPage from \"../../pages/SocialPage/SocialPage\";\r\nconst RenderComponent = () => {\r\n  const navigate = useNavigate();\r\n  let location = useLocation();\r\n  const url = useMemo(() => location?.pathname?.toString().slice(1, location?.pathname?.length), [location.pathname]);\r\n  const { theme, setThemeContext } =\r\n    useContext(ThemeManagerContext);\r\n  const dimensions = useWindowDimensions();\r\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(false);\r\n  const [isMobileOpen, setIsMobileOpen] = useState<boolean>(false);\r\n  let isTopBar = false;\r\n  const routes = useMemo(() => new Map<string, any>([\r\n    [GlobalThemes.Resume, <ResumePage />],\r\n    [GlobalThemes.Contact, <ContactPage />],\r\n    [GlobalThemes.Sales, <SalesTheme />],\r\n    [GlobalThemes.Enterprise, <EnterpriseTheme />],\r\n    [GlobalThemes.Spooky, <SpookyTheme />],\r\n    [GlobalThemes.Test, <TestPage />],\r\n    [GlobalThemes.BlackRed, <BlackRed />],\r\n    [GlobalThemes.Music, <MusicPage />],\r\n    [GlobalThemes.Fragments, <FragmentsPage />],\r\n    [GlobalThemes.List, <NotePage />],\r\n    [GlobalThemes.Yeti, <YetiPage />],\r\n    [GlobalThemes.Heroes, <HeroPage />],\r\n    [GlobalThemes.SpaceNews, <SpaceNews />],\r\n    [GlobalThemes.Burgers, <BobsBurgers />],\r\n    [GlobalThemes.DND, <DndMain />],\r\n    [GlobalThemes.Social, <SocialPage />]\r\n  ]), []);\r\n  const newPage = useMemo(() => routes.get(url), [routes, url]);\r\n  const checkBackground = () => {\r\n    switch (url) {\r\n      case GlobalThemes.Resume:\r\n      case GlobalThemes.Contact:\r\n      case GlobalThemes.Projects:\r\n        return false;\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n  const handleMobileOpen = useCallback(() => {\r\n    setIsMobileOpen(prev => !prev)\r\n  }, [setIsMobileOpen]);\r\n  const showBackground = checkBackground();\r\n  useEffect(() => {\r\n    setThemeContext(url);\r\n  });\r\n  const memoizedTopBar = useMemo(() => <TopbarV2 route={url} handleMobileOpen={handleMobileOpen} isMobileOpen={isMobileOpen}/>, [url, handleMobileOpen, isMobileOpen]);\r\n  \r\n  useEffect(() => {\r\n    if (url === \"\") {\r\n      navigate(\"/\" + GlobalThemes.Resume);\r\n    }\r\n  }, [url, navigate]);\r\n\r\n  const showStars = (url === GlobalThemes.Resume || url === GlobalThemes.Contact || url === GlobalThemes.SpaceNews);\r\n\r\n  const backgroundStyle = !showStars ? {} : ({\r\n    backgroundImage: `url(${backgroundImage})`\r\n  });\r\n  \r\n  return (\r\n    <>\r\n      <Walkthrough>\r\n        {showBackground && <DesignBackground />}\r\n        <div id=\"animationOverlay\" className={`animationOverlay ${theme}`} style={backgroundStyle}>\r\n          {showStars && <Stars />}\r\n        </div>\r\n        <div\r\n          className={`renderContainer ${isTopBar ? \" horizontal \" : \" \"} ${theme}`}\r\n        >\r\n          <div className=\"leftContainer\">\r\n            <SidebarV2 url={url} setIsMobileOpen={setIsMobileOpen} routes={routes} isCollapsed={isCollapsed} setIsCollapsed={setIsCollapsed} isMobileOpen={isMobileOpen}/>\r\n          </div>\r\n          <div className=\"rightContainer\">\r\n            {!dimensions.isMobile && memoizedTopBar}\r\n            <CalculatedScrollComponent className={\"mainContent \" + url} hasButtons={false} refresh={[]} sidebarCollapsed={isCollapsed}>\r\n              {!newPage ? <OverlayControl /> : newPage}\r\n            </CalculatedScrollComponent>\r\n            {dimensions.isMobile && memoizedTopBar}\r\n          </div>\r\n        </div>\r\n      </Walkthrough>\r\n    </>\r\n  );\r\n};\r\nexport default RenderComponent;\r\nexport const CalculatedScrollComponent = (props: {\r\n  children: any;\r\n  hasButtons: boolean;\r\n  refresh: any[];\r\n  overflowHidden?: boolean;\r\n  sidebarCollapsed: boolean;\r\n  className?: string;\r\n}) => {\r\n  const dimensions = useWindowDimensions();\r\n  const resizeRef = useRef<any>(null);\r\n  const buttonSpacing = useRef<number>(0);\r\n  const resizeChildrenContainer = useCallback(() => {\r\n    let vh = window.innerHeight * 0.01;\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n    if (resizeRef && resizeRef.current) {\r\n      resizeRef.current.style.height = window.innerHeight + 'px';\r\n      let width = window.innerWidth;\r\n      if (!dimensions.isMobile) {\r\n        width = width - (props.sidebarCollapsed ? 48 : 200);\r\n      }\r\n      resizeRef.current.style.width = width + 'px';\r\n    }\r\n  }, [\r\n    dimensions.isMobile,\r\n    props.sidebarCollapsed\r\n  ]);\r\n  const initialResize = useCallback((firstCall?: boolean) => {\r\n    if (resizeRef.current) {\r\n      resizeChildrenContainer();\r\n      if (firstCall) {\r\n        setTimeout(() => {\r\n          initialResize();\r\n        }, 500);\r\n      }\r\n    } else {\r\n      setTimeout(() => {\r\n        initialResize();\r\n      }, 500);\r\n    }\r\n  }, [\r\n    resizeChildrenContainer\r\n  ]);\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", resizeChildrenContainer);\r\n    resizeChildrenContainer();\r\n    initialResize(true);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resizeChildrenContainer);\r\n    };\r\n  }, [\r\n    initialResize,\r\n    resizeChildrenContainer\r\n  ]);\r\n  useEffect(() => {\r\n    buttonSpacing.current = props.hasButtons ? 72 : 0;\r\n  }, [props.hasButtons]);\r\n  useEffect(() => {\r\n    resizeChildrenContainer();\r\n  }, [\r\n    resizeRef, \r\n    props.refresh, \r\n    props.sidebarCollapsed, \r\n    dimensions,\r\n    resizeChildrenContainer\r\n  ]);\r\n  \r\n  return (\r\n    <div\r\n      ref={resizeRef}\r\n      id=\"scrollComponent\"\r\n      className={`scrollComponent rounded-scroll ${props.className}`}\r\n      style={{\r\n        overflowY: props.overflowHidden ? \"hidden\" : \"auto\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\testPage.tsx",["449","450","451","452","453","454","455","456","457","458","459","460","461"],[],"import { useMemo } from \"react\";\r\nimport CardCalculator from \"../components/CardCalculator/CardCalculator\";\r\nimport CurveLayout from \"../components/CurveLayout/CurveLayout\";\r\nimport HeroPageLayout, {\r\n  iHeroPageLayout,\r\n} from \"../components/HeroPageLayout/HeroPageLayout\";\r\nimport Visualizer from \"../components/Visualizer/Visualizer\";\r\nimport chocolate2 from \"../assets/chocolate2.jpg\";\r\nimport chocolate3 from \"../assets/chocolate3.jpg\";\r\nimport swoosh1 from \"../assets/Swoosh2.png\";\r\nimport swoosh3 from \"../assets/Swoosh.png\";\r\nimport phone1 from \"../assets/phone-1.jpg\";\r\nimport phone2 from \"../assets/phone-2.jpg\";\r\nimport phone3 from \"../assets/Three-Phones-Mockup.png\";\r\n\r\nconst TestPage = () => {\r\n  return <div>Hello World</div>;\r\n};\r\nexport default TestPage;\r\n","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\BezierBackground\\DesignBackground.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\OverlayControl\\OverlayControl.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\SpookyTheme.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\SideBar\\SideBar.tsx",[],[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\ResumePage\\ResumePage.tsx",["462","463","464","465","466"],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\EnterpriseTheme\\EnterpriseTheme.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\ContactPage\\ContactPage.tsx",["467","468","469","470","471","472","473","474","475","476"],[],"import { useCallback, useEffect, useRef } from \"react\";\r\nimport {\r\n  ParallaxBackgroundCircle,\r\n  ParallaxBackgroundTriangles,\r\n} from \"../../../components/BezierBackground/ParallaxBackground\";\r\nimport Icon from \"../../../components/Icon/Icon\";\r\nimport ColumnLayout from \"../../../components/Layouts/ColumnLayout\";\r\nimport PageLayout, { iPageLayout } from \"../../../components/PageLayout/PageLayout\";\r\nimport { InputTypes } from \"../../../components/PageLayout/SwitchInput\";\r\nimport Body from \"../../../components/Text/Body\";\r\nimport Headline from \"../../../components/Text/Headline\";\r\nimport { useWindowDimensions } from \"../../../ThemeManager\";\r\nimport \"./ContactPage.scss\";\r\n\r\nconst ContactPage = () => {\r\n  const style = ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    gap: 4\r\n  });\r\n  //* Experience */\r\n  return (\r\n    <div className=\"centerContent\" style={{ width: '100vw', height: '100vh', padding: 32 }}>\r\n      <ColumnLayout gap={24} isCard>\r\n        <Icon \r\n            icon={'Contact'} \r\n            className={'float-top-right resume-card-icon'}\r\n        />\r\n        <Headline>Contact</Headline>\r\n        <Headline truncate secondary size={4} style={style}><Icon icon=\"Email\" /> JustinGistDesigner@gmail.com</Headline>\r\n        <Headline truncate secondary size={4} style={style}><Icon icon=\"Linkedin\" /> LinkedIn Profile</Headline>\r\n        <Headline truncate secondary size={4} style={style}><Icon icon=\"Phone\" /> (407)-929-3184</Headline>\r\n      </ColumnLayout>\r\n    </div>\r\n  );\r\n};\r\nexport default ContactPage;","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\SidebarV2\\SidebarV2.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\FragmentsPage\\FragmentsPage.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\SalesTheme\\SalesTheme.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\TopbarV2\\TopbarV2.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\MusicPage\\MusicPage.tsx",["477","478","479","480"],[],"import { useState } from \"react\";\r\nimport { FakeLoader } from \"../../../components/Loading/Loading\";\r\nimport PageLayout, { iPageLayout } from \"../../../components/PageLayout/PageLayout\";\r\nimport { InputTypes } from \"../../../components/PageLayout/SwitchInput\";\r\nimport Body from \"../../../components/Text/Body\";\r\nimport Headline from \"../../../components/Text/Headline\";\r\nimport './MusicPage.scss';\r\nimport BlockLayout from \"../../../components/Layouts/BlockLayout\";\r\nimport ColumnLayout from \"../../../components/Layouts/ColumnLayout\";\r\n\r\nconst MusicPage = () => {\r\n  return (\r\n    <ColumnLayout gap={16} style={{ paddingBottom: '60px' }}>\r\n        <Headline size={2}>Music Page</Headline>\r\n        <Body>This page shows off the playlists that I've made!</Body>\r\n        <BlockLayout>\r\n            <ColumnLayout \r\n                isCard\r\n                id=\"Warp\"\r\n                data-walkthrough-step=\"1\"\r\n                data-walkthrough-label=\"Always Flowing\"\r\n                data-walkthrough-description=\"These tracks are always on the move, keeping your mind flowing through the cosmos.\"\r\n            >\r\n                <Headline size={3}>Warp Drive</Headline>\r\n                <FakeLoader style={{ height: 380 }}>\r\n                    <iframe \r\n                        title=\"warp-drive-playlist\"\r\n                        style={{ borderRadius: 12 }}\r\n                        src=\"https://open.spotify.com/embed/playlist/0I6mUCH0sObLjwl5ZlRtxW?utm_source=generator\" \r\n                        width=\"100%\" \r\n                        height=\"380\" \r\n                        frameBorder=\"0\" \r\n                        allowFullScreen={false}\r\n                        allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" />\r\n                </FakeLoader>  \r\n            </ColumnLayout>\r\n            <ColumnLayout \r\n                isCard\r\n                id=\"Anime\"\r\n                data-walkthrough-step={\"2\"}\r\n                data-walkthrough-label={\"Summer in Japan\"}\r\n                data-walkthrough-description={\"This playlist is trying to capture the fun, sun & amazing sites of japan in the summer.\"}\r\n            >\r\n                <Headline size={3}>Anime Summer</Headline>\r\n                <FakeLoader style={{ height: 380 }}>\r\n                    <iframe \r\n                        title=\"anime-summer-playlist\"\r\n                        style={{ borderRadius: 12 }}\r\n                        src=\"https://open.spotify.com/embed/playlist/7wKWzN98kRLPWEKjIMA8aM?utm_source=generator\" \r\n                        width=\"100%\" \r\n                        height=\"380\" \r\n                        frameBorder=\"0\" \r\n                        allowFullScreen={false}\r\n                        allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" />\r\n                </FakeLoader>  \r\n            </ColumnLayout>\r\n            <ColumnLayout \r\n                isCard\r\n                id=\"Beach\"\r\n                data-walkthrough-step={\"3\"}\r\n                data-walkthrough-label={\"Beachside racing fun!\"}\r\n                data-walkthrough-description={\"CTR, Outrun, Mario-Kart, Jet-Set Radio. If these names mean anything to you, then you will get the genre of this playlist.\"}\r\n            >\r\n                <Headline size={3}>Beach Racer</Headline>\r\n                <FakeLoader style={{ height: 380 }}>\r\n                    <iframe \r\n                        title=\"beach-racer-playlist\"\r\n                        style={{ borderRadius: 12 }}\r\n                        src=\"https://open.spotify.com/embed/playlist/6N5Mzc7TKzyyzADFrQ1BZ9?utm_source=generator\"\r\n                        width=\"100%\" \r\n                        height=\"380\" \r\n                        frameBorder=\"0\" \r\n                        allowFullScreen={false}\r\n                        allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" />\r\n                </FakeLoader>  \r\n            </ColumnLayout>\r\n            <ColumnLayout \r\n                isCard\r\n                id=\"Jam\"\r\n                data-walkthrough-step={\"4\"}\r\n                data-walkthrough-label={\"Pump up the Jam\"}\r\n                data-walkthrough-description={\"Steady, bumping tracks to keep yourself moving to.\"}\r\n            >\r\n                <Headline size={3}>Workout Jams</Headline>\r\n                <FakeLoader style={{ height: 380 }}>\r\n                    <iframe \r\n                        title=\"workout-jams-playlist\"\r\n                        style={{ borderRadius: 12 }}\r\n                        src=\"https://open.spotify.com/embed/playlist/5zyHeELqwJJUjrerdKIgg2?utm_source=generator\"\r\n                        width=\"100%\" \r\n                        height=\"380\" \r\n                        frameBorder=\"0\" \r\n                        allowFullScreen={false}\r\n                        allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" />\r\n                </FakeLoader>  \r\n            </ColumnLayout>\r\n            <ColumnLayout \r\n                isCard\r\n                id=\"Fantasy\"\r\n                data-walkthrough-step={\"5\"}\r\n                data-walkthrough-label={\"A seaside cafe\"}\r\n                data-walkthrough-description={\"Going somewhere new, traveling to an ocean view, we lonely few.\"}\r\n            >\r\n                <Headline size={3}>Unplugged Fantasy</Headline>\r\n                <FakeLoader style={{ height: 380 }}>\r\n                    <iframe \r\n                        title=\"unplugged-fantasy-playlist\"\r\n                        style={{ borderRadius: 12 }}\r\n                        src=\"https://open.spotify.com/embed/playlist/3A6jNln0UuU9nOriQC6WpM?utm_source=generator\"\r\n                        width=\"100%\" \r\n                        height=\"380\" \r\n                        frameBorder=\"0\" \r\n                        allowFullScreen={false}\r\n                        allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" />\r\n                </FakeLoader>  \r\n            </ColumnLayout>\r\n            <ColumnLayout \r\n                isCard\r\n                id=\"Sunrise\"\r\n                data-walkthrough-step={\"6\"}\r\n                data-walkthrough-label={\"Pixel rays shine\"}\r\n                data-walkthrough-description={\"Capturing the peace and tranquility found in the forest and taverns of RPGs.\"}\r\n            >\r\n                <Headline size={3}>Arcade Sunrise</Headline>\r\n                <FakeLoader style={{ height: 380 }}>\r\n                    <iframe \r\n                        title=\"arcade-sunrise-playlist\"\r\n                        style={{ borderRadius: 12 }}\r\n                        src=\"https://open.spotify.com/embed/playlist/3NVLJRsE4QxHPYc4XbMQjx?utm_source=generator\"\r\n                        width=\"100%\" \r\n                        height=\"380\" \r\n                        frameBorder=\"0\" \r\n                        allowFullScreen={false}\r\n                        allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" />\r\n                </FakeLoader>  \r\n            </ColumnLayout>\r\n            <ColumnLayout \r\n                isCard\r\n                id=\"Street\"\r\n                data-walkthrough-step={\"7\"}\r\n                data-walkthrough-label={\"Pedal to the Metal\"}\r\n                data-walkthrough-description={\"This one is my fast pace metal style playlist for driving fast\"}\r\n            >\r\n                <Headline size={3}>The Last Street Racer</Headline>\r\n                <FakeLoader style={{ height: 380 }}>\r\n                    <iframe \r\n                        title=\"last-street-racer-playlist\"\r\n                        style={{ borderRadius: 12 }}\r\n                        src=\"https://open.spotify.com/embed/playlist/6QQSyk1xxUE0QPI6t6uqkl?utm_source=generator\"\r\n                        width=\"100%\" \r\n                        height=\"380\" \r\n                        frameBorder=\"0\" \r\n                        allowFullScreen={false}\r\n                        allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" />\r\n                </FakeLoader>  \r\n            </ColumnLayout>\r\n            <ColumnLayout \r\n                isCard\r\n                id=\"Bard\"\r\n                data-walkthrough-step={\"8\"}\r\n                data-walkthrough-label={\"A local's tale\"}\r\n                data-walkthrough-description={\"The songs to weave stories, dreams and terrifying things to.\"}\r\n            >\r\n                <Headline size={3}>The Badlands</Headline>\r\n                <FakeLoader style={{ height: 380 }}>\r\n                    <iframe \r\n                        title=\"the-badlands-playlist\"\r\n                        style={{ borderRadius: 12 }}\r\n                        src=\"https://open.spotify.com/embed/playlist/5hdkAh4WkJv7gyHt6Adn5U?utm_source=generator\"\r\n                        width=\"100%\" \r\n                        height=\"380\" \r\n                        frameBorder=\"0\" \r\n                        allowFullScreen={false}\r\n                        allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" />\r\n                </FakeLoader>  \r\n            </ColumnLayout>\r\n        </BlockLayout>\r\n    </ColumnLayout>\r\n  );\r\n};\r\nexport default MusicPage;","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\BlackRed\\BlackRed.tsx",["481","482","483"],[],"import { useCallback, useContext, useMemo, useState } from \"react\";\r\nimport ModalContext from \"../../../components/Modal/ModalContext\";\r\nimport PageLayout, { iPageLayout, mapInitialFormData } from \"../../../components/PageLayout/PageLayout\";\r\nimport { InputTypes } from \"../../../components/PageLayout/SwitchInput\";\r\nimport './BlackRed.scss';\r\nconst tempOptions = [\r\n  {\r\n    value: \"0\",\r\n    label: 'Zero'\r\n  },\r\n  {\r\n    value: \"1\",\r\n    label: 'One'\r\n  },\r\n  {\r\n    value: \"2\",\r\n    label: 'Two'\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: 'Three'\r\n  }\r\n];\r\nconst pageLayout = (openTestModal: () => void) => ({\r\n    id: 'test-0',\r\n    labelProps: {\r\n      label: 'Page Label',\r\n      subLabel: 'This is a page description that will describe what to do on this page, or what this page is about',\r\n    },\r\n    contentProps: {\r\n      layoutClassName: 'flex-block',\r\n    },\r\n    animationClass: 'Down',\r\n    inputs: [\r\n      {\r\n        id: 'test-1',\r\n        type: InputTypes.card,\r\n        \"data-walkthrough-step\": \"1\",\r\n        \"data-walkthrough-label\": \"Test section 1\",\r\n        \"data-walkthrough-description\": \"This is a test of form component functionality.\" ,\r\n        label: 'Card 1',\r\n        inputProps: {\r\n          className: 'flexColumn'\r\n        },\r\n        inputs: [\r\n          {\r\n            id: 'button-modal-test',\r\n            field: 'button-modal-test',\r\n            type: InputTypes.button,\r\n            label: 'button Modal Test',\r\n            onClick: openTestModal\r\n          },\r\n          {\r\n            id: 'text',\r\n            field: 'text',\r\n            type: InputTypes.text,\r\n            label: 'text'\r\n          },\r\n          {\r\n            id: 'toggleGroup',\r\n            field: 'toggleGroup',\r\n            type: InputTypes.toggleButtonGroup,\r\n            label: 'toggleGroup',\r\n            options: tempOptions\r\n          },\r\n          {\r\n            id: 'switch',\r\n            field: 'switch',\r\n            type: InputTypes.switch,\r\n            label: 'switch'\r\n          },\r\n          {\r\n            id: 'checkbox',\r\n            field: 'checkbox',\r\n            type: InputTypes.checkbox,\r\n            label: 'checkbox'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'test-2',\r\n        type: InputTypes.card,\r\n        \"data-walkthrough-step\": \"2\",\r\n        \"data-walkthrough-label\": \"Test section 2\",\r\n        \"data-walkthrough-description\": \"This is a test of form component functionality.\" ,\r\n        label: 'Card 2',\r\n        inputProps: {\r\n          className: 'flexColumn'\r\n        },\r\n        inputs: [\r\n          {\r\n            id: 'textarea input',\r\n            field: 'textarea',\r\n            type: InputTypes.textarea,\r\n            label: 'textarea input'\r\n          },\r\n          {\r\n            id: 'number input',\r\n            field: 'number',\r\n            type: InputTypes.number,\r\n            label: 'number input'\r\n          },\r\n          {\r\n            id: 'currency input',\r\n            field: 'currency',\r\n            type: InputTypes.currency,\r\n            label: 'currency input'\r\n          },\r\n          {\r\n            id: 'select input',\r\n            field: 'select',\r\n            type: InputTypes.select,\r\n            label: 'select input',\r\n            options: tempOptions\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'test',\r\n        type: InputTypes.card,\r\n        \"data-walkthrough-step\": \"3\",\r\n        \"data-walkthrough-label\": \"Test section 3\",\r\n        \"data-walkthrough-description\": \"This is a test of form component functionality.\" ,\r\n        label: 'Card 3',\r\n        inputProps: {\r\n          className: 'flexColumn'\r\n        },\r\n        inputs: [\r\n          {\r\n            id: 'rating input',\r\n            field: 'rating',\r\n            type: InputTypes.rating,\r\n            label: 'rating input'\r\n          },\r\n          {\r\n            id: 'slider input',\r\n            field: 'slider',\r\n            type: InputTypes.slider,\r\n            label: 'slider input'\r\n          },\r\n          {\r\n            id: 'radio input',\r\n            field: 'radio',\r\n            type: InputTypes.radio,\r\n            label: 'radio input',\r\n            options: tempOptions\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'card-4',\r\n        type: InputTypes.card,\r\n        \"data-walkthrough-step\": \"4\",\r\n        \"data-walkthrough-label\": \"Test section 4\",\r\n        \"data-walkthrough-description\": \"This is a test of form component functionality.\" ,\r\n        label: 'Card 4',\r\n        inputs: [\r\n          {\r\n            id: 'text2',\r\n            field: 'text2',\r\n            type: InputTypes.text,\r\n            label: 'text2'\r\n          },\r\n          {\r\n            id: 'toggleGroup-2',\r\n            field: 'toggleGroup-2',\r\n            type: InputTypes.toggleButtonGroup,\r\n            label: 'toggleGroup-2',\r\n            options: tempOptions\r\n          },\r\n          {\r\n            id: 'switch-2',\r\n            field: 'switch-2',\r\n            type: InputTypes.switch,\r\n            label: 'switch-2'\r\n          },\r\n          {\r\n            id: 'checkbox-2',\r\n            field: 'checkbox-2',\r\n            type: InputTypes.checkbox,\r\n            label: 'checkbox-2'\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n});\r\n\r\nconst BlackRed = () => {\r\n  const { openModal, closeModal } = useContext(ModalContext);\r\n  const openTestModal = useCallback(async () => {\r\n      const result = await openModal(<div>Hello World</div>);\r\n  }, [openModal]);\r\n  const memoizedPageLayout = useMemo(() => {\r\n    return pageLayout(openTestModal);\r\n  }, [openTestModal]);\r\n  const [formData, setFormData] = useState<any>(mapInitialFormData(memoizedPageLayout, {}));\r\n  const [undoState] = useState<any>({});\r\n  const [disabledFields, setDisabledFields] = useState<any>({});\r\n  const [errorFields, setErrorFields] = useState<any>({});\r\n\r\n  return (\r\n    <PageLayout \r\n      pageLayout={memoizedPageLayout}\r\n      formData={formData}\r\n      handleFormData={setFormData}\r\n      disabledFields={disabledFields}\r\n      handleDisabled={setDisabledFields}\r\n      errorFields={errorFields}\r\n      handleError={setErrorFields}\r\n      undoState={undoState}\r\n    />\r\n  );\r\n};\r\nexport default BlackRed;","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\NotePage\\NotePage.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\PageLayout\\SwitchInput.tsx",["484","485","486","487","488","489"],[],"import { Checkbox, FormControlLabel, InputAdornment, MenuItem, Radio, RadioGroup, Rating, Slider, Switch, TextField, ToggleButton, ToggleButtonGroup } from \"@mui/material\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport { useWindowDimensions } from \"../../ThemeManager\";\r\nimport CarouselComponent from \"../Carousel/Carousel\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport AnimatedCheckmark from \"./AnimatedCheckmark/AnimatedCheckmark\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport { ChangeType, fallbackComponent } from \"./PageLayout\";\r\nimport \"./SwitchInput.scss\";\r\n\r\nexport enum InputTypes {\r\n    text,\r\n    textOnly,\r\n    textarea,\r\n    number,\r\n    currency,\r\n    select,\r\n    multiSelect,\r\n    map,\r\n    button,\r\n    link,\r\n    checkbox,\r\n    autoComplete,\r\n    grid,\r\n    calendar,\r\n    view,\r\n    section,\r\n    switch,\r\n    toggleButtonGroup,\r\n    rating,\r\n    slider,\r\n    radio,\r\n    card,\r\n    element,\r\n    carousel\r\n}\r\nexport interface InputProps {\r\n    id: string;\r\n    type: InputTypes;\r\n    label?: string;\r\n    valueTo?: (item: any) => any; // A conversion function, that will take the inputted value and convert it to store into formData.\r\n    valueFrom?: (item: any) => any; // A conversion function, that takes the value from formData[input.field] and converts it to be useable in the component.\r\n    valueComparisonFunction?: (item: any) => string | number; // This is for validating objects, gives the validator something to validate against. Must be something that changes.\r\n    defaultValue?: any; // When data gets initially mapped, sets an initial value. Ignored if formData already has data.\r\n}\r\n\r\n// InputTypes.view, InputTypes.section\r\nexport interface InputPropsView extends InputProps {\r\n    icon?: string;\r\n    isTitle?: boolean; // Uses titleElement, which adds classes 'partner-color section-title'\r\n    subLabel?: string;\r\n    inputs?: InputProps[]; // Almost Required\r\n    className?: string;\r\n    groupClassName?: string;\r\n    layoutClassName?: string; // Class defines how container formats it's inputs.\r\n    // Default 'flexColumn'. Options ['flex', 'flexColumn', 'flexFull', 'flexBlock']\r\n}\r\n\r\n// InputType.text,\r\n// InputType.textArea,\r\n// InputType.date,\r\n// InputType.time,\r\n// InputType.datetime\r\nexport interface InputPropsCommon extends InputProps {\r\n    field?: string; // Required. This is used to track validationModel, errorFields, disabledFields, noPermissionFields and formData.\r\n    placeholder?: string;\r\n    tooltip?: string;\r\n    isRequired?: boolean; // Adds Red '*' to the label. You should still validate for required in Joi validationModel.\r\n    groupClassName?: string; // Applied to outer\r\n    className?: string;\r\n}\r\n\r\n// InputType.bool\r\nexport interface InputPropsBool extends InputProps {\r\n    field?: string; // Required. This is used to track validationModel, errorFields, disabledFields, noPermissionFields and formData.\r\n    tooltip?: string;\r\n    groupClassName?: string; // Applied to outer\r\n    className?: string;\r\n}\r\n\r\n// InputType.number\r\nexport interface InputPropsNumber extends InputPropsCommon {\r\n    min?: number;\r\n    max?: number;\r\n}\r\n\r\n// InputType.numberRange\r\nexport interface InputPropsNumberRange extends InputPropsCommon {\r\n    secondaryField: string; // Required. Same as above. Controls second field value and other triggers.\r\n    min?: number;\r\n    max?: number;\r\n    secondaryMin?: number;\r\n    secondaryMax?: number;\r\n}\r\n\r\n// InputType.richSelect,\r\n// InputType.select,\r\n// InputType.multiSelect,\r\n// InputType.groupedMultiSelect\r\nexport interface InputPropsSelect extends InputPropsCommon {\r\n    options: { id: string; label: string; }[]; // Required. ***RichSelect Does not use.\r\n    optionsSource: (searchText: string) => Promise<{ id: string; label: string; }[]>; // Async. Required. ***Select does not use.\r\n    renderOption?: (item: any) => string | JSX.Element;\r\n    renderDisplay?: (item: any) => string | JSX.Element;\r\n    getOptionValue?: (item: any) => any;\r\n    allowEmpty?: boolean;\r\n}\r\n\r\n// InputType.mapSelect\r\nexport interface InputPropsMapSelect extends InputPropsCommon {\r\n    options?: any[];\r\n    optionsSource: (searchText: string) => Promise<any>;\r\n}\r\n// If inputs, should ONLY include buttons.\r\n// If it does, it creates a buttonDropdown instead.\r\n// InputType.button\r\nexport interface InputPropsButton extends InputPropsCommon {\r\n    onClick?: (e: any) => void; // This is passed into the input on formLayout creation.\r\n    inputs?: (InputPropsButton | InputPropsLink)[]; // For button dropdown\r\n}\r\n// InputType.link\r\nexport interface InputPropsLink extends InputPropsCommon {\r\n    href?: string; // Required\r\n}\r\n\r\nexport interface SwitchInputProps {\r\n    index: number;\r\n    input: any;\r\n    formData: any;\r\n    handleChangeReducer: any;\r\n    errorFields: any;\r\n    disabledFields: any;\r\n    noPermissionFields: any;\r\n    animate: boolean;\r\n    validationSchema?: any;\r\n    undoState?: any;\r\n    handleValidation?: () => void;\r\n    animationClass?: string;\r\n}\r\n\r\nconst SwitchInput = ({\r\n    input,\r\n    index,\r\n    handleChangeReducer,\r\n    formData,\r\n    noPermissionFields,\r\n    errorFields,\r\n    validationSchema,\r\n    disabledFields,\r\n    animate,\r\n    undoState,\r\n    handleValidation,\r\n    animationClass\r\n}: SwitchInputProps) => {\r\n    // Throw on required fields. Id not required on view and section inputTypes.\r\n    if (!input.id && input.type !== InputTypes.view && input.type !== InputTypes.section) throw new Error(`Missing id for SwitchInput input ${input.field} - ${input.label}. Inputs that are NOT inputTypes.view or inputTypes.section, must have an ID property`);\r\n\r\n    // Switch Inputs are going to be used a lot, and maybe more later. This will reduce amount of code. Look at other <SwitchInputs> to see how this is used.\r\n    const switchInputProps = useMemo(() => ({\r\n        handleChangeReducer,\r\n        formData,\r\n        disabledFields,\r\n        errorFields,\r\n        validationSchema,\r\n        noPermissionFields,\r\n        handleValidation,\r\n        animate,\r\n        undoState\r\n    }), [\r\n        handleChangeReducer,\r\n        formData,\r\n        disabledFields,\r\n        errorFields,\r\n        validationSchema,\r\n        noPermissionFields,\r\n        handleValidation,\r\n        animate,\r\n        undoState\r\n    ]);\r\n    const dimensions = useWindowDimensions();\r\n    const inputKey = `editor-type-input-${input.id}`;\r\n    const inputTypeValueConversion = useCallback((e: any) => {\r\n        switch(input.type) {\r\n            case InputTypes.checkbox:\r\n            case InputTypes.switch:\r\n                return e.target.checked;\r\n            default:\r\n                return e.target.value;\r\n        }\r\n    }, [\r\n        input\r\n    ]);\r\n    const onChange = useCallback((e: any, useSecondaryField?: boolean) => {\r\n        let value = inputTypeValueConversion(e);\r\n        value = input.valueTo ? input.valueTo(value) : value;\r\n        if (input.min !== undefined) value = value < input.min ? input.min : value;\r\n        if (input.max !== undefined) value = value > input.max ? input.max : value;\r\n        const resultField = useSecondaryField && input.secondaryField ? input.secondaryField : input.field; // This is if we have a input that can handle two values, we can give it a secondaryField to input into. See inputTypes.numberRange\r\n        handleChangeReducer(ChangeType.formChange, resultField, value);\r\n    }, [\r\n        input, \r\n        handleChangeReducer,\r\n        inputTypeValueConversion\r\n    ]);\r\n\r\n    const label = useMemo(() => (\r\n        <div className={`switch-input-label flex noWrap ${input.labelProps?.className ?? 'text-sub-headline'}`} style={input.labelProps?.style}>\r\n            {input.icon && <Icon icon={input.icon} />}\r\n            {input.label && <h3>{input.label}</h3>}\r\n        </div>\r\n    ), [input]);\r\n    \r\n    // Memoized value. Uses formData and input.field to retrieve.\r\n    const value = useMemo(() => {\r\n        let newValue = formData[input.field];\r\n        if (input.valueFrom) newValue = input.valueFrom(newValue); // valueFrom is a conversion property used to convert what formData sends the input, and converts it so the input can handle it correctly.\r\n        return newValue;\r\n    }, [\r\n        formData,\r\n        input\r\n    ]);\r\n\r\n    // Checks if the input itself has changes.\r\n    const hasChanges = useMemo(() => {\r\n        if (undoState && input && input.field) {\r\n            let originalValue = undoState[input.field];\r\n            let newValue = value;\r\n            if (input.valueFrom) {\r\n                originalValue = input.valueFrom(originalValue); // Must keep conversions consistent.\r\n            }\r\n            if (input.valueComparisonFunction) {\r\n                // valueComparisonFunction is a helper property, used to allow validation to compare object values. Otherwise they won't show changes.\r\n                // if you have a value that is an object like { value: 'textValue' }, then your valueComparisonFunction would be (item) => item.value\r\n                originalValue = input.valueComparisonFunction(originalValue);\r\n                newValue = input.valueComparisonFunction(newValue);\r\n            }\r\n            return originalValue !== newValue;\r\n        }\r\n        return false;\r\n    }, [\r\n        undoState,\r\n        input,\r\n        value\r\n    ]);\r\n\r\n    // Any commmon classes that belong to all inputs will be put here. This is typical css hooks that you want to affect multiple layers down.\r\n    const additionalClasses = useMemo(() => `${input.groupClassName} ${(hasChanges) ? 'has-new-value' : ''} ${input.isRequired ? 'required' : ''}`, [\r\n        hasChanges,\r\n        input.isRequired,\r\n        input.groupClassName\r\n    ]);\r\n\r\n    // Memoized messages and booleans. This controls how the user sees the input and what messages appear on the tooltips.\r\n    const disabledMessage = useMemo(() => (!disabledFields ? undefined : disabledFields[input.field]), [input, disabledFields]); // string value, changes the tooltip and disabled the field.\r\n    const errorMessage = useMemo(() => (!errorFields ? undefined : errorFields[input.field]), [input, errorFields]); // string value, changes the tooltip and errors the field.\r\n    const noPermission = useMemo(() => (!noPermissionFields ? undefined : noPermissionFields[input.field]), [input, noPermissionFields]); // boolean value, if true, field will not even render. (Never let css control visibility, only jsx)\r\n    const memoizedTooltip= useMemo(() => dimensions.isMobile ? '' : errorMessage ?? disabledMessage ?? input.tooltip, [errorMessage, disabledMessage, input.tooltip]);\r\n\r\n    const inputElement = useMemo(() => {\r\n        // Sets defaults, we should change this later to be on the inputs themselves. Waste of code.\r\n        const renderOption = input.renderOption ?? ((item: any) => item && item.label);\r\n        const renderInputValue = input.renderOption ?? ((item: any) => item && item.label);\r\n        const getOptionValue = input.getOptionValue ?? ((item: any) => item && (item.id ?? item.value ?? item));\r\n        const renderDisplay = input.renderDisplay ?? ((item: any) => item && item.label);\r\n\r\n        switch (input.type) {\r\n            case InputTypes.carousel:\r\n                return (\r\n                    <CarouselComponent id={input.id} items={input.items} />\r\n                )\r\n            case InputTypes.textOnly:\r\n                return (\r\n                    <div\r\n                    style={input.style}\r\n                    className={`${additionalClasses}`}\r\n                    >\r\n                        {label}\r\n                    </div>\r\n                );\r\n            case InputTypes.link:\r\n                return (\r\n                    <a\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                    href={input.href}\r\n                    style={input.style}\r\n                    className={`link ${additionalClasses}`}\r\n                    >\r\n                        {label}\r\n                    </a>\r\n                );\r\n            case InputTypes.button:\r\n                return (\r\n                    <button \r\n                        type=\"button\" \r\n                        className={`button ${input.className} ${additionalClasses}`} \r\n                        onClick={input.onClick}\r\n                        data-tip={memoizedTooltip}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                );\r\n            case InputTypes.radio:\r\n                return (\r\n                    <>\r\n                        {input.label && <div className=\"text-input-label\">{input.label}</div>}\r\n                        <RadioGroup\r\n                            defaultValue={input.options && input.options[0].value}\r\n                            name={input.id}\r\n                        >\r\n                            {input.options && input.options.map((item: any) => (\r\n                                <FormControlLabel value={item.value} control={<Radio />} label={item.label} />\r\n                            ))}\r\n                        </RadioGroup>\r\n                    </>\r\n                );\r\n            case InputTypes.slider:\r\n                return (\r\n                    <>\r\n                        {input.label && <div className=\"text-input-label\">{input.label}</div>}\r\n                        <Slider\r\n                            size=\"small\"\r\n                            defaultValue={70}\r\n                            aria-label=\"Small\"\r\n                            valueLabelDisplay=\"auto\"\r\n                            value={value}\r\n                            onChange={(e) => onChange(e)}\r\n                        />\r\n                    </>\r\n                );\r\n            case InputTypes.rating:\r\n                return (\r\n                    <>\r\n                        {input.label && <div className=\"text-input-label\">{input.label}</div>}\r\n                        <Rating\r\n                            name={input.id}\r\n                            value={value}\r\n                            onChange={(e) => onChange(e)}\r\n                        />\r\n                    </>\r\n                );\r\n            case InputTypes.toggleButtonGroup:\r\n                return (\r\n                    <ToggleButtonGroup\r\n                        value={value}\r\n                        exclusive\r\n                        onChange={onChange}\r\n                        aria-label=\"text alignment\"\r\n                        >\r\n                            {input.options && input.options.map((button: InputPropsButton | InputPropsLink) => {\r\n                                if (!button.label) throw new Error('Button had no label');\r\n                                return (\r\n                                    <ToggleButton key={button.label} value={button.label}>\r\n                                        {button.label}\r\n                                    </ToggleButton>\r\n                                )\r\n                            })}\r\n                    </ToggleButtonGroup>\r\n                )\r\n            case InputTypes.select: \r\n                return (\r\n                    <TextField\r\n                        select\r\n                        onChange={onChange}\r\n                        label={input.label}\r\n                        value={value}\r\n                        type={'number'}\r\n                        variant=\"filled\"\r\n                        disabled={!!disabledMessage}\r\n                        helperText={memoizedTooltip}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                        }}\r\n                        { ...input.inputProps }\r\n                        error={!!!!errorMessage}\r\n                    >\r\n                        {input.options && input.options.map((option: any) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                )\r\n            case InputTypes.currency:\r\n                return (\r\n                    <TextField\r\n                        onChange={onChange}\r\n                        label={input.label}\r\n                        value={value}\r\n                        type={'number'}\r\n                        variant=\"filled\"\r\n                        disabled={!!disabledMessage}\r\n                        helperText={memoizedTooltip}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                        }}\r\n                        error={!!errorMessage}\r\n                        { ...input.inputProps }\r\n                    />\r\n                );\r\n            case InputTypes.number:\r\n                return (\r\n                    <TextField\r\n                        onChange={onChange}\r\n                        label={input.label}\r\n                        InputProps={{ inputProps: { min: input.min, max: input.max } }}\r\n                        value={value}\r\n                        type={'number'}\r\n                        variant=\"filled\"\r\n                        disabled={!!disabledMessage}\r\n                        helperText={memoizedTooltip}\r\n                        error={!!errorMessage}\r\n                        { ...input.inputProps }\r\n                    />\r\n                );\r\n            case InputTypes.switch:\r\n            case InputTypes.checkbox:\r\n                const boolProps = {\r\n                    checked: value,\r\n                    onChange: onChange,\r\n                    disabled: !!disabledMessage\r\n                };\r\n                const boolElement = input.type === InputTypes.switch ? (\r\n                    <Switch\r\n                        { ...boolProps }\r\n                    />\r\n                ) : (\r\n                    <Checkbox\r\n                        { ...boolProps }\r\n                    />\r\n                );\r\n                return (\r\n                    <FormControlLabel \r\n                        disabled={!!disabledMessage} \r\n                        control={boolElement} \r\n                        label={input.label} \r\n                    />\r\n                );\r\n            case InputTypes.textarea:\r\n            case InputTypes.text:\r\n                const isTextArea = input.type === InputTypes.textarea;\r\n                return (\r\n                    <TextField\r\n                        onChange={onChange}\r\n                        label={input.label}\r\n                        value={value}\r\n                        error={!!errorMessage}\r\n                        variant=\"filled\"\r\n                        { ...input.inputProps }\r\n                        disabled={!!disabledMessage}\r\n                        multiline={isTextArea}\r\n                        minRows={isTextArea ? 2 : 1}\r\n                        maxRows={4}\r\n                        style={input.style}\r\n                        helperText={memoizedTooltip}\r\n                    />\r\n                );\r\n            default:\r\n                return input.label;\r\n                \r\n        }\r\n    }, [\r\n        disabledMessage, \r\n        input, \r\n        onChange, \r\n        value,\r\n        dimensions.isMobile,\r\n        errorMessage,\r\n        memoizedTooltip,\r\n        additionalClasses,\r\n        label\r\n    ]);\r\n\r\n    // Creates and animated checkmark or X depending on various properties.\r\n    const floatingElement = useMemo(() => hasChanges && (\r\n        <div className=\"float-right-top\"><AnimatedCheckmark tooltip={errorMessage ? 'Has an error!' : 'Has new changes!'} useCancel={errorMessage} /></div>\r\n    ), [\r\n        hasChanges,\r\n        errorMessage\r\n    ]);\r\n    if (noPermission) return null;\r\n    const animatedStyle = {\r\n        animationDelay: `${index * 0.1}s`,\r\n        ...input.style\r\n    };\r\n    switch (input.type) {\r\n        case InputTypes.view:\r\n        case InputTypes.card:\r\n        case InputTypes.element:\r\n            return (\r\n                <div \r\n                    id={input.id} \r\n                    className={`flexColumn ${input.className} ${InputTypes[input.type].toString()} ${animationClass}`} \r\n                    style={animatedStyle}\r\n                    data-walkthrough-step={input[\"data-walkthrough-step\"]}\r\n                    data-walkthrough-label={input[\"data-walkthrough-label\"]}\r\n                    data-walkthrough-description={input[\"data-walkthrough-description\"]}\r\n        \r\n                >\r\n                    {label}\r\n                    {input.subLabel && <div className=\"text-body\">{input.subLabel}</div>}\r\n                    <div className={input.layoutClassName ?? 'flexColumn'}>\r\n                        {input.type === InputTypes.element && input.element}\r\n                        {input.type !== InputTypes.element && input.inputs && input.inputs.map((child: any, i: number) => (\r\n                            <SwitchInput\r\n                                key={`child-switch-input-${child.id}`}\r\n                                index={i}\r\n                                input={child}\r\n                                { ...switchInputProps }\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            );\r\n        default:\r\n            return (\r\n                <ErrorBoundary\r\n                    key={inputKey}\r\n                    fallback={fallbackComponent(input)}\r\n                >\r\n                    <div \r\n                        id={input.id}\r\n                        className={`switch-input ${!!disabledMessage ? 'Mui-disabled' : ''} ${!!errorMessage ? 'Mui-error' : ''}`} data-tip={memoizedTooltip}>\r\n                        {floatingElement}\r\n                        {inputElement}\r\n                    </div>\r\n                </ErrorBoundary>\r\n            );                \r\n    }\r\n}\r\nexport default SwitchInput;","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\CardCalculator\\CardCalculator.tsx",["490","491","492"],[],"import { useCallback, useMemo, useState } from \"react\";\r\nimport PageLayout, { iPageLayout, mapInitialFormData } from \"../PageLayout/PageLayout\";\r\nimport { InputTypes } from \"../PageLayout/SwitchInput\";\r\nimport './CardCalculator.scss';\r\n\r\nenum CardValues {\r\n    zero = 32,\r\n    one = 11,\r\n    two = 12,\r\n    three = 13,\r\n    four = 14,\r\n    five = 15,\r\n    six = 16,\r\n    seven = 18,\r\n    eight = 24,\r\n    nine = 32,\r\n    healthPotion = 14,\r\n    catSwiftPotion = 16\r\n}\r\nconst initialCardValues = {\r\n    zero: 0,\r\n    one: 0,\r\n    two: 0,\r\n    three: 0,\r\n    four: 0,\r\n    five: 0,\r\n    six: 0,\r\n    seven: 0,\r\n    eight: 0,\r\n    nine: 0,\r\n    healthPotion: 0,\r\n    catSwiftPotion: 0\r\n};\r\nconst getValueFromKey = (key: string) => Object.keys(CardValues).filter(x => x === key)[0];\r\nconst formInputs = (cardData: any) => Object.keys(initialCardValues).map((key: string) => ({\r\n    id: key,\r\n    field: key,\r\n    type: InputTypes.number,\r\n    min: 0,\r\n    max: 4,\r\n    label: (\r\n        <div className=\"flex noWrap\">\r\n            <h5 style={{ textTransform: 'capitalize', minWidth: 60 }}>{CardValues[key as any]} = {cardData[key as any] * parseInt(CardValues[key as any])}</h5>\r\n            <h4 style={{ textTransform: 'capitalize', minWidth: 160 }}>{key}</h4>\r\n        </div>\r\n    )\r\n}));\r\n\r\nconst cardPageLayout = (cardData: any) => ({\r\n    id: 'card-calculator',\r\n    labelProps: {\r\n        label: 'Card Calculator',\r\n    },\r\n    containerProps: {\r\n        className: 'background-transparent',\r\n    },\r\n    inputs: formInputs(cardData),\r\n    layoutClassName: 'flexFull'\r\n});\r\nconst CardCalculator = () => {\r\n    const [cardData, setCardData] = useState<any>(mapInitialFormData(cardPageLayout(initialCardValues), initialCardValues));\r\n\r\n    const memoizedPageLayout = useMemo(() => cardPageLayout(cardData), [cardData]);\r\n    const total = useMemo(() => {\r\n        let resultTotal = 0;\r\n        let deckCount = 0;\r\n        Object.keys(cardData).forEach((key: string) => {\r\n            const value = parseInt(CardValues[key as any]);\r\n            resultTotal += cardData[key] * value;\r\n            deckCount += parseInt(cardData[key]);\r\n        });\r\n        return (\r\n            <div className=\"flex noWrap\">\r\n                <h2>{resultTotal} / {500 - resultTotal} remaining</h2>\r\n                <h5>Card Count: {deckCount}</h5>\r\n            </div>\r\n        );\r\n    },[cardData]);\r\n\r\n    return (\r\n        <div className=\"card-calculator-container flexColumn\">\r\n            {<PageLayout pageLayout={memoizedPageLayout} formData={cardData} handleFormData={setCardData} />}\r\n            {total}\r\n        </div>\r\n    );\r\n}\r\nexport default CardCalculator;","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Icon\\Icon.tsx",["493","494"],[],"import SvgIcon from \"@material-ui/icons/Print\";\r\nimport { ReactComponent as Skull } from \"./skull.svg\";\r\nimport { ReactComponent as Bat } from \"./bat.svg\";\r\nimport { ReactComponent as Pumpkin } from \"./pumpkin.svg\";\r\nimport { ReactComponent as Atari } from \"./atari.svg\";\r\nimport { ReactComponent as Amazon } from \"./Amazon_logo.svg\";\r\nimport { ReactComponent as Tesla } from \"./Tesla_Motors.svg\";\r\nimport { ReactComponent as Tama } from \"./tama.svg\";\r\nimport { ReactComponent as Invader } from \"./invader.svg\";\r\nimport { ReactComponent as Coin } from \"./coin.svg\";\r\nimport { ReactComponent as ArcadeButton } from \"./arcadeButton.svg\";\r\nimport { ReactComponent as Textbox } from \"./textbox.svg\";\r\nimport { ReactComponent as Pacman } from \"./pacman.svg\";\r\nimport { ReactComponent as JoyStick } from \"./arcadeJoyStick.svg\";\r\nimport { ReactComponent as HHouse } from \"./HHouse.svg\";\r\nimport { ReactComponent as LeftTopWindow } from \"./LeftTopWindow.svg\";\r\nimport { ReactComponent as RightTopWindow } from \"./RightTopWindow.svg\";\r\nimport { ReactComponent as BottomLeftWindow } from \"./BottomLeftWindow.svg\";\r\nimport { ReactComponent as CircleWindow } from \"./CircleWindow.svg\";\r\nimport { ReactComponent as Clouds } from \"./Clouds.svg\";\r\nimport { ReactComponent as SalesLeftBackground } from \"./SalesLeftBackground.svg\";\r\nimport { ReactComponent as SalesRightBackground } from \"./SalesRightBackground.svg\";\r\nimport { ReactComponent as Squiggly } from \"./Squiggly.svg\";\r\nimport { ReactComponent as Sony } from \"./sony-logo.svg\";\r\nimport { ReactComponent as MSFT } from \"./microsoft-windows-22.svg\";\r\nimport { ReactComponent as AAPL } from \"./apple.svg\";\r\nimport { ReactComponent as JGLogo } from \"./favicon.svg\";\r\nimport DiamondIcon from \"@mui/icons-material/Diamond\";\r\nimport QuestionMarkIcon from \"@mui/icons-material/QuestionMark\";\r\nimport {\r\n  Folder,\r\n  Home,\r\n  ColorLens,\r\n  Pets,\r\n  BugReport,\r\n  WbSunny,\r\n  SportsEsports,\r\n  ArrowDropDown,\r\n  ContactPhone,\r\n  AcUnit,\r\n  Close,\r\n  PriorityHigh\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  HomeOutline,\r\n  AccountCircleOutline,\r\n  WalletOutline,\r\n  CalculatorVariantOutline,\r\n  ToolboxOutline,\r\n  CheckboxBlankCircle,\r\n  Plus,\r\n  CartOutline,\r\n  BasketOffOutline,\r\n  Delete,\r\n  DotsVertical,\r\n  Facebook,\r\n  Linkedin,\r\n  Email,\r\n  Phone,\r\n  InformationOutline,\r\n  ChevronRight,\r\n  ChevronLeft,\r\n  Account,\r\n  LockOpen,\r\n  Lock,\r\n  Check,\r\n  WeatherNight,\r\n  FileTableBoxMultipleOutline,\r\n  FileChart,\r\n  ShieldCrownOutline,\r\n  ChartTree,\r\n  ChevronDoubleLeft,\r\n  ChevronDoubleRight,\r\n  Eye,\r\n  EyeOff,\r\n  CameraOutline,\r\n  FolderUploadOutline,\r\n  FileAccount,\r\n  Candycane,\r\n  Domain,\r\n  NotebookEditOutline,\r\n  Sword,\r\n  Hamburger,\r\n  TestTube,\r\n  Play,\r\n  Pause,\r\n  MusicCircleOutline,\r\n  Note,\r\n  NoteEdit,\r\n  StarOutline,\r\n  ContentSave,\r\n  UndoVariant,\r\n  RedoVariant,\r\n  Snowflake,\r\n  SnowflakeOff,\r\n  CalendarStar,\r\n  Newspaper,\r\n  AccountMultiple,\r\n  StarShootingOutline,\r\n  Web,\r\n  DesktopClassic,\r\n  CardAccountMail,\r\n  RocketLaunchOutline,\r\n  Cog,\r\n  AutoFix,\r\n  ImageOffOutline,\r\n  DramaMasks,\r\n  Pencil,\r\n  EmoticonHappyOutline,\r\n  EmoticonSadOutline,\r\n  EmoticonFrownOutline,\r\n  EmoticonLolOutline,\r\n  ArrowLeft,\r\n  ArrowRight\r\n} from \"mdi-material-ui\";\r\n\r\nimport { GlobalThemes } from \"../../ThemeManager\";\r\nconst GetIcon: any = {\r\n  Skull: Skull,\r\n  Bat: Bat,\r\n  Pumpkin: Pumpkin,\r\n  Home: Home,\r\n  Themes: ColorLens,\r\n  Projects: Folder,\r\n  Bug: BugReport,\r\n  Paw: Pets,\r\n  Sun: WbSunny,\r\n  Atari: Atari,\r\n  SportsEsports: SportsEsports,\r\n  Tama: Tama,\r\n  ArrowDropDown: ArrowDropDown,\r\n  Invader: Invader,\r\n  Contact: CardAccountMail,\r\n  AcUnit,\r\n  HomeOutline,\r\n  AccountCircleOutline,\r\n  WalletOutline,\r\n  CalculatorVariantOutline,\r\n  ToolboxOutline,\r\n  Coin,\r\n  ArcadeButton,\r\n  Textbox,\r\n  Pacman,\r\n  PacmanCircle: CheckboxBlankCircle,\r\n  JoyStick,\r\n  HHouse,\r\n  LeftTopWindow,\r\n  RightTopWindow,\r\n  BottomLeftWindow,\r\n  CircleWindow,\r\n  Clouds,\r\n  Close,\r\n  QuestionMark: QuestionMarkIcon,\r\n  SalesLeftBackground,\r\n  SalesRightBackground,\r\n  Diamond: DiamondIcon,\r\n  Plus,\r\n  Cart: CartOutline,\r\n  Squiggly,\r\n  NoItems: BasketOffOutline,\r\n  Delete,\r\n  Context: DotsVertical,\r\n  FB: Facebook,\r\n  AMZN: Amazon,\r\n  TSLA: Tesla,\r\n  Email,\r\n  Linkedin,\r\n  Phone,\r\n  Sony,\r\n  MSFT,\r\n  AAPL,\r\n  JGLogo,\r\n  Info: InformationOutline,\r\n  ChevronRight,\r\n  ChevronLeft,\r\n  Account,\r\n  LockOpen,\r\n  Lock,\r\n  Warning: PriorityHigh,\r\n  Check,\r\n  Moon: WeatherNight,\r\n  Customers: HomeOutline,\r\n  Templates: FileTableBoxMultipleOutline,\r\n  Campaigns: ChartTree,\r\n  Reports: FileChart,\r\n  Admin: ShieldCrownOutline,\r\n  X: Close,\r\n  SidebarClose: ChevronDoubleLeft,\r\n  SidebarOpen: ChevronDoubleRight,\r\n  Eye,\r\n  EyeOff,\r\n  Upload: FolderUploadOutline,\r\n  Camera: CameraOutline,\r\n  Resume: FileAccount,\r\n  Sales: Candycane,\r\n  Enterprise: Domain,\r\n  Spooky: Skull,\r\n  Editor: NotebookEditOutline,\r\n  Fragments: Sword,\r\n  Hamburger,\r\n  Test: TestTube,\r\n  BlackRed: TestTube,\r\n  Music: MusicCircleOutline,\r\n  Play,\r\n  Pause,\r\n  List: Note,\r\n  Edit: Pencil,\r\n  Star: StarOutline,\r\n  Cancel: Close,\r\n  Save: ContentSave,\r\n  Undo: UndoVariant,\r\n  Redo: RedoVariant,\r\n  Yeti: Snowflake,\r\n  YetiOff: SnowflakeOff,\r\n  Events: CalendarStar,\r\n  Partners: AccountMultiple,\r\n  News: Newspaper,\r\n  Designer: Eye,\r\n  ShootingStar: StarShootingOutline,\r\n  Languages: Web,\r\n  Tech: DesktopClassic,\r\n  SpaceNews: RocketLaunchOutline,\r\n  Heroes: Newspaper,\r\n  Settings: Cog,\r\n  Burgers: Hamburger,\r\n  DnD: AutoFix,\r\n  Empty: ImageOffOutline,\r\n  Social: DramaMasks,\r\n  Happy: EmoticonHappyOutline,\r\n  Sad: EmoticonSadOutline,\r\n  Scared: EmoticonFrownOutline,\r\n  Funny: EmoticonLolOutline,\r\n  ArrowLeft,\r\n  ArrowRight\r\n};\r\nconst Icon = ({\r\n  icon,\r\n  onclick,\r\n  fontSize,\r\n  color,\r\n  viewBox,\r\n  width,\r\n  height,\r\n  className,\r\n}: {\r\n  icon?: string;\r\n  onclick?: (e: any) => void;\r\n  fontSize?: number;\r\n  color?: GlobalThemes;\r\n  viewBox?: string;\r\n  width?: string;\r\n  height?: string;\r\n  className?: string;\r\n}) => {\r\n  const myIcon = GetIcon[icon as string];\r\n  if (!myIcon) return <div></div>;\r\n  return (\r\n    <SvgIcon\r\n      onClick={(e: any) => {\r\n        return onclick ? onclick(e) : null;\r\n      }}\r\n      width={width ?? \"100%\"}\r\n      height={height ?? \"100%\"}\r\n      viewBox={viewBox ?? \"0 0 24 24\"}\r\n      fontSize={fontSize ? \"inherit\" : \"small\"}\r\n      style={{\r\n        fontSize: fontSize ?? 24,\r\n        color: color ?? \"\",\r\n      }}\r\n      className={className}\r\n      component={myIcon}\r\n    />\r\n  );\r\n};\r\nexport default Icon;\r\n","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\BezierBackground\\ParallaxBackground.tsx",[],[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Rainimation\\Rainimation.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\CartComponent.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\ResumePage\\ThreeD.tsx",[],[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\FragmentsPage\\FragmentsEnumsAndI.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\PageLayout\\PageLayout.tsx",["495","496"],[],"import { CircularProgress } from \"@material-ui/core\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { quickHash } from \"../../utils/objectUtils\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport StopNavigation from \"./StopNavigation\";\r\nimport SwitchInput, { InputPropsButton, InputPropsLink, InputTypes } from \"./SwitchInput\";\r\nimport UndoRedoComponent from \"./UndoRedoComponent\";\r\nexport interface iCommonProps {\r\n    className?: string;\r\n    layoutClassName?: string;\r\n    style?: any;\r\n}\r\nexport interface iLabelProps extends iCommonProps {\r\n    label?: string | Element | Element[] | JSX.Element[] | JSX.Element;\r\n    subLabel?: string;\r\n    icon?: string;\r\n}\r\nexport interface iPageLayout {\r\n    id: string;\r\n    labelProps?: iLabelProps;\r\n    containerProps?: iCommonProps;\r\n    contentProps?: iCommonProps;\r\n    animationClass?: string;\r\n    inputs: any[];\r\n    actions?: InputPropsButton[] | InputPropsLink[];\r\n    disableHeaderFeature?: boolean;\r\n    disableCancelFeature?: boolean;\r\n    disableSaveFeature?: boolean;\r\n    enableUndoRedoFeature?: boolean;\r\n}\r\nexport interface PageLayoutProps {\r\n    pageLayout: iPageLayout;\r\n    formData?: any;\r\n    handleFormData?: any;\r\n    errorFields?: any;\r\n    noPermissionFields?: any;\r\n    disabledFields?: any;\r\n    handleError?: any;\r\n    handleDisabled?: any;\r\n    handleNoPermission?: any;\r\n    undoState?: any;\r\n    validationSchema?: any;\r\n    handleSubmit?: (evt: any) => void;\r\n    handleCancel?: () => void;\r\n}\r\n\r\nexport enum ChangeType {\r\n    formChange,\r\n    errorChange,\r\n    disabledChange,\r\n    noPermissionChange,\r\n    undo,\r\n    redo\r\n}\r\n\r\nexport const objectChange = (prev: any, field: string, newValue: any) => {\r\n    return {\r\n        ...prev,\r\n        [field]: newValue\r\n    };\r\n};\r\n\r\n// This is a recursive function that searches through the formLayout model that you provide and pulls out all the fields into a single layer object. Sets initial State or ''\r\nconst checkThroughInputsForFieldsRecursive = (inputs: any[], formData: any) => {\r\n    let result: any = {};\r\n    inputs.forEach((input) => {\r\n        if (input.field) {\r\n            let defaultValue = input.defaultValue ?? '';\r\n            if (input.type === InputTypes.checkbox) { // Make sure bools come in as the correct value type.\r\n                defaultValue = input.defaultValue ?? false;\r\n            }\r\n            result[input.field] = formData[input.field] ?? defaultValue;\r\n        }\r\n        if (input.inputs) {\r\n            result = {\r\n                ...result,\r\n                ...checkThroughInputsForFieldsRecursive(input.inputs, formData)\r\n            };\r\n        }\r\n    });\r\n    return result;\r\n};\r\n\r\n// This takes in the formLayout model and maps everything with a 'field' to a single layer object. Also maps any data passed in, but only goes 1 layer deep right now.\r\nexport const mapInitialFormData = (formLayout: iPageLayout, formData: any) => checkThroughInputsForFieldsRecursive(formLayout.inputs ?? [], formData);\r\n\r\nconst PageLayout = ({\r\n    pageLayout, // Required.\r\n    formData = {}, // Required. A populated object using the mapInitialFormData function, should be passed in already mapped with the formLayout and any initial Data. This fixes the uncontrolled-controlled component bug for react.\r\n    handleFormData, // Required.\r\n    handleSubmit,\r\n    noPermissionFields,\r\n    disabledFields = {},\r\n    handleDisabled,\r\n    handleCancel,\r\n    validationSchema\r\n}: PageLayoutProps) => {\r\n    const [animate, setAnimate] = useState<boolean>(true);\r\n    const [undoState] = useState(formData); // FormData should already be mapped using mapInitialFormData function, there for this is the initial state.\r\n    const [redoState, setRedoState] = useState(null);\r\n    const [errorFields, setErrorFields] = useState({}); // The fields that are in error. Populated by the input.field and a string message. See handleValidation() for an example.\r\n\r\n    useEffect(() => { // Fires the animation only once\r\n        if (animate) {\r\n            setTimeout(() => {\r\n                setAnimate(false);\r\n            }, 2000);\r\n        }\r\n    }, [animate]);\r\n\r\n    // Handles validation for the FormLayout, also sets errorFields to display Joi error Messages.\r\n    const handleValidation = useCallback(() => {\r\n        if (!validationSchema) return false; // If no validationSchema is given, return false (NO ERRORS)\r\n        const errors = {} // validationUtils.validate(validationSchema, formData, false); // Checks validation schema\r\n        setErrorFields(errors || {}); // applies any errors found, or empty {} if errors is false.\r\n        return !!errors; // Returns if errors exist or not.\r\n    }, [\r\n        formData,\r\n        setErrorFields,\r\n        validationSchema\r\n    ]);\r\n\r\n    // This handles the initial submitting functionality, before calling the handleSubmit function that was passed in. This is to validate before calling submit function.\r\n    // If handleSubmit is null. Save button does not appear, this will never be called.\r\n    const innerHandleSubmit = useCallback((evt) => {\r\n        let hasErrors = false;\r\n        if (validationSchema) hasErrors = handleValidation();\r\n        if (hasErrors) return;\r\n        if (handleSubmit) handleSubmit(evt); // Fires handleSubmit, no need to null check this.\r\n    }, [\r\n        validationSchema,\r\n        handleSubmit,\r\n        handleValidation\r\n    ]);\r\n\r\n    // This is a reducer to handle various input types the user, or the formLayout component itself, can make. If you need different funcitionality, add a new ChangeType enum.\r\n    const handleChangeReducer = useCallback((changeType, field, newValue) => {\r\n        switch (changeType) {\r\n            case ChangeType.undo:\r\n                setRedoState(formData); // Sets current state, as Redo State, so that user can re-apply changes they made.\r\n                handleFormData(undoState); // Sets Undo State, as current state, undoing recent changes.\r\n                break;\r\n            case ChangeType.redo:\r\n                handleFormData(redoState); // Sets Redo State, as current state, re-applying recent changes.\r\n                setRedoState(null); // Nulls redo state, to keep state consistent. Disable Redo Button.\r\n                break;\r\n            case ChangeType.formChange:\r\n                handleFormData((prev: any) => objectChange(prev, field, newValue));\r\n                break;\r\n            case ChangeType.disabledChange:\r\n                handleDisabled((prev: any) => objectChange(prev, field, newValue));\r\n                break;\r\n            case ChangeType.errorChange:\r\n                setErrorFields(prev => objectChange(prev, field, newValue));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [\r\n        handleDisabled,\r\n        setErrorFields,\r\n        handleFormData,\r\n        formData,\r\n        redoState,\r\n        undoState\r\n    ]);\r\n\r\n    const hasError = useMemo(() => Object.keys(errorFields).length > 0, [errorFields]);\r\n\r\n    // Checks to see if there are changes between the initial State (undoState) and formData.\r\n    const hasChanges = useMemo(() => {\r\n        const oldHash = quickHash(undoState); // Original State of the data, hashed.\r\n        const currentHash = quickHash(formData); // Current State of the data, hashed.\r\n        const hashesAreNotEqual = oldHash !== currentHash;\r\n        if (hashesAreNotEqual) {\r\n            setRedoState(null); // Nulls the redo state when changes have been applied. This is to keep state consistent.\r\n        }\r\n        if (hashesAreNotEqual || hasError) {\r\n            handleValidation();\r\n        }\r\n        return hashesAreNotEqual;\r\n    }, [\r\n        formData,\r\n        undoState,\r\n        handleValidation,\r\n        hasError\r\n    ]);\r\n\r\n    // Switch Inputs are going to be used a lot, and maybe more later. This will reduce amount of code. Look at other <SwitchInputs> to see how this is used.\r\n    const switchInputProps = useMemo(() => ({\r\n        handleChangeReducer,\r\n        formData,\r\n        disabledFields,\r\n        errorFields,\r\n        validationSchema,\r\n        noPermissionFields,\r\n        handleValidation,\r\n        animate,\r\n        undoState,\r\n        animationClass: pageLayout.animationClass\r\n    }), [\r\n        handleChangeReducer,\r\n        formData,\r\n        disabledFields,\r\n        errorFields,\r\n        validationSchema,\r\n        noPermissionFields,\r\n        handleValidation,\r\n        animate,\r\n        undoState,\r\n        pageLayout.animationClass\r\n    ]);\r\n\r\n    const header = useMemo(() => {\r\n        if (!pageLayout) return null;\r\n        if (pageLayout.disableHeaderFeature) return null;\r\n        // If all header properties are 'undefined' and disableHeaderFeature is not set, then it doesn't render either.\r\n        if (\r\n            (pageLayout.disableCancelFeature || !handleCancel) && \r\n            (pageLayout.disableSaveFeature || !handleSubmit) && \r\n            !pageLayout.enableUndoRedoFeature && \r\n            !pageLayout.labelProps && \r\n            !pageLayout.actions\r\n        ) return null;\r\n        // A Iconized title component that follows our typical styling and partner-coloring. Icon cannot be shown without label.\r\n        const labelClasses = `flex noWrap ${pageLayout.labelProps?.className ?? 'headlineTwo'}`;\r\n        const labelElement = pageLayout.labelProps?.label && (\r\n            <div className={labelClasses}>\r\n                {pageLayout.labelProps?.icon && <i className={`fa fa-${pageLayout.labelProps?.icon} iconBoxed`} />}\r\n                {pageLayout.labelProps?.label}\r\n            </div>\r\n        );\r\n\r\n        // A small section for body text, that can describe a page. Following text-body coloring\r\n        const subLabelElement = pageLayout.labelProps?.subLabel && (\r\n            <div className=\"text-body no-select\">\r\n                {pageLayout.labelProps?.subLabel}\r\n            </div>\r\n        );\r\n\r\n        // This consolidates the actions provided in formLayout, into a single button, unless there is only 1 action.\r\n        const actionsButtonOptions = {\r\n            id: 'actions-button',\r\n            type: InputTypes.button,\r\n            label: 'Actions',\r\n            inputs: pageLayout.actions\r\n        };\r\n        const turnActionButtonsAreaOff = !pageLayout.enableUndoRedoFeature && !handleCancel && !handleSubmit && !pageLayout.actions;\r\n        const classes = `${pageLayout.labelProps?.layoutClassName ?? 'flexColumn'} ${animate ? 'animate' : 'noAnimate'} ${pageLayout.labelProps?.className} ${pageLayout.animationClass}`;\r\n        return (\r\n            <div className={`page-layout-header ${classes}`} style={pageLayout.labelProps?.style}>\r\n                <div className=\"flexSB\">\r\n                    {labelElement}\r\n                    {!turnActionButtonsAreaOff && (\r\n                        <div className=\"flex noWrap\">\r\n                            {undoState && pageLayout.enableUndoRedoFeature && (\r\n                                <UndoRedoComponent\r\n                                    undoState={undoState}\r\n                                    formData={formData}\r\n                                    redoState={redoState}\r\n                                    hasChanges={hasChanges}\r\n                                    handleChangeReducer={handleChangeReducer}\r\n                                />\r\n                            )}\r\n                            {handleCancel && !pageLayout.disableCancelFeature && (\r\n                                <button\r\n                                    className=\"cancel icon-button\"\r\n                                    data-tip=\"Close and revert changes\"\r\n                                    onClick={handleCancel}\r\n                                >\r\n                                    <Icon icon=\"Cancel\" />\r\n                                </button>\r\n                            )}\r\n                            {handleSubmit && !pageLayout.disableSaveFeature && (\r\n                                <button\r\n                                    className=\"submit icon-button\"\r\n                                    onClick={innerHandleSubmit}\r\n                                    data-tip={!hasChanges ? 'Nothing has changed' : 'Save new changes'}\r\n                                    disabled={!hasChanges}\r\n                                    type=\"submit\"\r\n                                >\r\n                                    <Icon icon=\"Save\" />\r\n                                </button>\r\n                            )}\r\n                            {pageLayout.actions && pageLayout.actions.length > 1 ? (\r\n                                <SwitchInput\r\n                                    index={0}\r\n                                    input={actionsButtonOptions}\r\n                                    {...switchInputProps}\r\n                                />\r\n                            ) : pageLayout.actions && pageLayout.actions.map((input: any, i: number) => (\r\n                                <SwitchInput\r\n                                    key={input.id}\r\n                                    index={i}\r\n                                    input={input}\r\n                                    {...switchInputProps}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {subLabelElement}\r\n            </div>\r\n        );\r\n    }, [\r\n        formData,\r\n        pageLayout,\r\n        handleChangeReducer,\r\n        animate,\r\n        handleCancel,\r\n        handleSubmit,\r\n        undoState,\r\n        hasChanges,\r\n        redoState,\r\n        innerHandleSubmit,\r\n        switchInputProps\r\n    ]);\r\n\r\n    // A memoized Input element that maps all inputs from formLayout.\r\n    const mappedInputs = useMemo(() => pageLayout.inputs && pageLayout.inputs.map((input, i) => (\r\n        <SwitchInput\r\n            key={`input-${input.id}`}\r\n            index={i}\r\n            input={input}\r\n            {...switchInputProps}\r\n        />\r\n    )), [\r\n        pageLayout,\r\n        switchInputProps\r\n    ]);\r\n    const containerClasses = useMemo(() => `page-layout ${pageLayout.containerProps?.className}`, [pageLayout.containerProps?.className]);\r\n    const contentClasses = useMemo(() => `page-layout-input-container ${pageLayout.contentProps?.className} ${pageLayout.contentProps?.layoutClassName ?? 'flexColumn'}`, [\r\n        pageLayout.contentProps?.className,\r\n        pageLayout.contentProps?.layoutClassName\r\n    ]);\r\n    // This is extra redundancy. You should have your own loading before this component is even loaded.\r\n    if (!pageLayout) return <CircularProgress />;\r\n\r\n    const key = `form-layout-${pageLayout.id}`; // Use id because it is required.\r\n    // This is basically a flex direction column form to start. You must define how the inputs and other inputs are layed out below the header. Using View/Section Elements on SwitchInput.jsx\r\n    return (\r\n        <form id={pageLayout.id} key={key} className={containerClasses}>\r\n            {header}\r\n            <div className={contentClasses} style={pageLayout.contentProps?.style}>\r\n                {mappedInputs}\r\n            </div>\r\n        </form>\r\n            \r\n    );\r\n};\r\nexport default PageLayout;\r\n\r\nexport const fallbackComponent = (input: any) => (\r\n    <div className=\"fallback\">\r\n        {input.label && <div className=\"text-sub-headline\">{input.label}</div>}\r\n    </div>\r\n);","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\TabsComponent\\TabsComponent.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\CloseComponent\\CloseComponent.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\NotePage\\components\\NotesComponent\\NotesComponent.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\utils\\objectUtils.js",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\PageLayout\\UndoRedoComponent.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\PageLayout\\ErrorBoundary.jsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\PageLayout\\AnimatedCheckmark\\AnimatedCheckmark.jsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\PageLayout\\StopNavigation.tsx",["497","498"],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Modal\\ModalContext.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Modal\\Modal.tsx",["499","500","501","502"],[],"import { ThemeContext } from '@emotion/react';\r\nimport React, { useState, useCallback, useMemo, useContext } from 'react';\r\nimport { ThemeManagerContext } from '../../App';\r\nimport CloseComponent from '../CloseComponent/CloseComponent';\r\nimport Icon from '../Icon/Icon';\r\nimport ErrorBoundary from '../PageLayout/ErrorBoundary';\r\nimport './Modal.scss';\r\n\r\ninterface iModalOptions {\r\n\r\n}\r\n\r\ninterface iModal {\r\n    children: any;\r\n    handleClose: (result: any) => void;\r\n    childProps?: any;\r\n    props?: any;\r\n    modalOptions?: iModalOptions;\r\n}\r\n\r\ninterface iModalRoot {\r\n    isOpen: boolean;\r\n    activeModal: iModal;\r\n}\r\n\r\nconst modalFallbackComponent = (closeModal: () => void) => (\r\n    <div className=\"flexColumn\">\r\n        <h3>Sorry this modal is not working right now. An error report was already sent to engineering.</h3>\r\n        <button onClick={closeModal}>Close</button>\r\n    </div>\r\n)\r\n\r\nfunction ModalRoot({ isOpen, activeModal }: iModalRoot) {\r\n    const {\r\n        children,\r\n        handleClose,\r\n        childProps,\r\n        props,\r\n        modalOptions\r\n    } = activeModal;\r\n    const { theme } = useContext(ThemeManagerContext);\r\n    const handleModalClose = useCallback(async (result) => {\r\n        handleClose(result);\r\n    }, [handleClose]);\r\n    const genericClasses = `modal-container ${theme}`;\r\n    const memoizedClasses = `${genericClasses} ${props?.className}`;\r\n    const memoizedContentClasses = `modal-content rounded-scroll ${props?.contentClassName || ''}`;\r\n    const memoizedStyle = !props ? {} : props.style;\r\n    const childrenWithProps = React.Children.map(children, child => {\r\n        // Checking isValidElement is the safe way and avoids a\r\n        // typescript error too.\r\n        if (React.isValidElement(child)) {\r\n        return React.cloneElement(child, { ...childProps, onClose: handleModalClose });\r\n        }\r\n        return child;\r\n    });\r\n    if (!children) return null;\r\n    return !isOpen ? null : (\r\n        <div className={memoizedClasses} style={memoizedStyle}>\r\n            <ErrorBoundary fallbackComponent={modalFallbackComponent}>\r\n                <div id=\"modal-content\" className={memoizedContentClasses}>\r\n                    {<CloseComponent action={() => handleModalClose(null)} />}\r\n                    {childrenWithProps}\r\n                </div>\r\n            </ErrorBoundary>\r\n        </div>\r\n    );\r\n}\r\ninterface iUseModal {\r\n    ModalRoot: React.ElementType,\r\n    openModal: (children: any, childProps: any, modalOptions: any) => Promise<any>,\r\n    closeModal: (result: any) => void\r\n}\r\nconst useModal = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [activeModal, setActiveModal] = useState<iModal | undefined>(undefined);\r\n\r\n    const modalRoot = useMemo(() => !activeModal ? null : (\r\n        <ModalRoot\r\n            isOpen={isOpen}\r\n            activeModal={activeModal}\r\n        />\r\n    ), [isOpen, activeModal]);\r\n\r\n    const openModal = useCallback((\r\n        children, \r\n        childProps, \r\n        modalOptions\r\n    ) => new Promise((resolve) => {\r\n        if (!modalRoot) {\r\n            // enqueueSnackbar('There is no modal root configured for this modal. Please add it to your react render');\r\n        }\r\n\r\n        const modal = {\r\n            children,\r\n            childProps: childProps,\r\n            modalOptions,\r\n            handleClose: async (result: any) => {\r\n                setIsOpen(false);\r\n                setTimeout(() => {\r\n                    setActiveModal(undefined);\r\n                    resolve(result);\r\n                }, 100);\r\n            }\r\n        };\r\n\r\n        setActiveModal(modal);\r\n        setTimeout(() => setIsOpen(true), 100);\r\n    }), [modalRoot]);\r\n\r\n    const closeModal = useCallback(() => {\r\n        setIsOpen(false);\r\n        setActiveModal(undefined);\r\n    }, []);\r\n\r\n    return {\r\n        modalRoot,\r\n        openModal,\r\n        closeModal\r\n    };\r\n};\r\n\r\nexport default useModal;\r\n","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\EnterpriseTheme\\EnterpriseCharts.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\YetiPage\\YetiPage.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Carousel\\Carousel.tsx",["503"],[],"import React from 'react';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\ninterface iCarouselItem {\r\n  label: string;\r\n  render: string | React.ReactElement;\r\n}\r\ninterface CarouselProps {\r\n  id: string;\r\n  items: iCarouselItem[]; // elements can be either image URLs or React Elements\r\n}\r\n\r\nconst CarouselComponent = ({\r\n    id,\r\n    items\r\n}: CarouselProps) => {\r\n  return (\r\n    <div id={id} className='carousel-component'>\r\n      <Carousel>\r\n        {items.map((item, index) => (\r\n            <div key={index}>\r\n                {item.label && <div className='carousel-label'>{item.label}</div>}\r\n                {typeof item.render === 'string' ? <img src={item.render} /> : item.render}\r\n            </div>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n};\r\nexport default CarouselComponent;","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\HeroPageLayout\\HeroPageLayout.tsx",[],[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\HeroPageLayout\\SwitchHeroComponent.tsx",["504"],[],"import { Button } from '@material-ui/core';\r\nimport React, { useMemo } from 'react';\r\nimport Icon from '../Icon/Icon';\r\nexport interface CommonProps {\r\n    className?: string;\r\n    style?: any;\r\n    layoutClassName?: string;\r\n}\r\nexport interface IconProps extends CommonProps {\r\n    icon?: string;\r\n}\r\nexport interface iHeroComponent {\r\n    id: string;\r\n    type?: string;\r\n    commonProps?: CommonProps;\r\n    iconProps?: IconProps;\r\n    label?: string;\r\n    subLabel?: string;\r\n    body?: string;\r\n    onClick?: () => void;\r\n    components?: iHeroComponent[];\r\n}\r\ninterface SwitchHeroComponentProps {\r\n    heroComponent: iHeroComponent;\r\n}\r\nconst SwitchHeroComponent = ({\r\n    heroComponent\r\n}: SwitchHeroComponentProps) => {\r\n    const styles = useMemo(() => ({\r\n        ...heroComponent.commonProps?.style\r\n    }), [\r\n        heroComponent.commonProps?.style\r\n    ]);\r\n    const containerClasses = useMemo(() => `${heroComponent.type ?? 'text'} ${heroComponent.commonProps?.className} flexColumn`, [heroComponent]);\r\n    const switchComponent = useMemo(() => {\r\n        switch(heroComponent.type) {\r\n            case 'button':\r\n                return (\r\n                    <button \r\n                        type=\"button\" \r\n                        className={`button`} \r\n                        onClick={heroComponent.onClick}\r\n                    >\r\n                        {heroComponent.label}\r\n                    </button>\r\n                );\r\n            case 'four-square':\r\n                return heroComponent.components?.map(component => {\r\n                    const classes = `square ${component.commonProps?.className}`;\r\n                    return (\r\n                        <div key={component.id} className={classes}>\r\n                            <h2>{component.label}</h2>\r\n                            <p className=\"text-body bodyBold\">{component.subLabel}</p>\r\n                        </div>\r\n                    )\r\n                });\r\n            case 'slide-row-component':\r\n                if (!heroComponent.components) return null;\r\n                return (\r\n                    <>\r\n                        <div className=\"slide-row flexSB\">\r\n                            <div />\r\n                            <SwitchHeroComponent heroComponent={heroComponent.components[0]}/>\r\n                        </div>  \r\n                        <div className=\"slide-row flexSB\">\r\n                            <SwitchHeroComponent heroComponent={heroComponent.components[1]}/>\r\n                            <div />\r\n                        </div>  \r\n                    </>\r\n                );\r\n            case 'left-text-right-image-component':\r\n                if (!heroComponent.components || heroComponent.components.length !== 4) return null;\r\n                return (\r\n                    <div className={heroComponent?.commonProps?.layoutClassName ?? 'flex noWrap'}>\r\n                        <div className=\"left-text\">\r\n                            <SwitchHeroComponent heroComponent={heroComponent.components[0]}/>\r\n                        </div>\r\n                        <div className=\"right-image\">\r\n                            <SwitchHeroComponent heroComponent={heroComponent.components[1]}/>\r\n                            <SwitchHeroComponent heroComponent={heroComponent.components[2]}/>\r\n                            <SwitchHeroComponent heroComponent={heroComponent.components[3]}/>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'text':\r\n                return (\r\n                    <>\r\n                        {heroComponent.subLabel && <h5>{heroComponent.subLabel}</h5>}\r\n                        {heroComponent.label && <h2>{heroComponent.label}</h2>}\r\n                        {heroComponent.body && <div className=\"text-body bodyMedium\">{heroComponent.body}</div>}\r\n                        {heroComponent.components && heroComponent.components.length > 0 && <SwitchHeroComponent heroComponent={heroComponent.components[0]}/>}\r\n                    </>\r\n                );\r\n            case 'container':\r\n            default:\r\n                return (\r\n                    <>\r\n                        {heroComponent.iconProps && heroComponent.iconProps.icon && (\r\n                            <Icon \r\n                                icon={heroComponent.iconProps.icon} \r\n                                className={heroComponent.iconProps.className}\r\n                            />\r\n                        )}\r\n                        {heroComponent.subLabel && <h5>{heroComponent.subLabel}</h5>}\r\n                        {heroComponent.label && <h2>{heroComponent.label}</h2>}\r\n                        {heroComponent.body && <div className=\"text-body\">{heroComponent.body}</div>}\r\n                        <div className={heroComponent?.commonProps?.layoutClassName ?? 'flexColumn'}>\r\n                            {heroComponent.components && heroComponent.components.length > 0 && heroComponent.components.map(component => (\r\n                                <SwitchHeroComponent key={component.id} heroComponent={component}/>\r\n                            ))} \r\n                        </div>\r\n                    </>\r\n                );\r\n        }\r\n    }, [\r\n        heroComponent\r\n    ]);\r\n    return (\r\n        <div \r\n            id={heroComponent.id} \r\n            className={containerClasses} \r\n            style={styles}\r\n            onClick={heroComponent.onClick}\r\n        >\r\n            {switchComponent}\r\n        </div>\r\n    );\r\n};\r\nexport default SwitchHeroComponent;\r\n","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\DesignerPage.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Text\\Headline.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Text\\Body.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Layouts\\ColumnLayout.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Loading\\Loading.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Text\\SubHeadline.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Layouts\\RowLayout.tsx",["505","506","507"],[],"import React, { ForwardedRef, forwardRef, Ref, useMemo } from 'react';\r\n\r\ninterface InputGroupProps extends React.ComponentPropsWithoutRef<\"input\"> {\r\n    layoutClass?: string;\r\n    noWrapping?: boolean;\r\n    isCard?: boolean;\r\n    gap?: number;\r\n    children: any;\r\n}\r\nconst RowLayout = forwardRef<any, InputGroupProps>((props, ref) => {\r\n    const {\r\n        layoutClass,\r\n        noWrapping,\r\n        isCard,\r\n        gap,\r\n        children,\r\n        ...rest // This includes things like id, style, className, everything a regular component can use.\r\n    } = props;\r\n    const memoParams = useMemo(() => ({\r\n        ...rest,\r\n        style: {\r\n            ...rest?.style,\r\n            gap: gap\r\n        },\r\n        className: `${layoutClass ?? 'flex'} ${!noWrapping ? '' : 'noWrap'} ${rest?.className ?? ''} ${isCard ? 'card' : ''}`\r\n    }), [\r\n        rest,\r\n        layoutClass,\r\n        noWrapping,\r\n        isCard\r\n    ]);\r\n    return <div ref={ref} {...memoParams}>{children}</div>;\r\n});\r\nexport default RowLayout;\r\n","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Layouts\\BlockLayout.tsx",["508"],[],"import React, { useMemo } from 'react';\r\n\r\ninterface InputGroupProps extends React.ComponentPropsWithoutRef<\"input\"> {\r\n    layoutClass?: string;\r\n    isCard?: boolean;\r\n    noMobile?: boolean;\r\n    gap?: number;\r\n    children: any;\r\n}\r\nconst BlockLayout = ({\r\n    layoutClass,\r\n    isCard,\r\n    noMobile,\r\n    gap,\r\n    children,\r\n    ...rest // This includes things like id, style, className, everything a regular component can use.\r\n} : InputGroupProps) => {\r\n    const memoParams = useMemo(() => ({\r\n        ...rest,\r\n        style: {\r\n            ...rest?.style,\r\n            gap: gap\r\n        },\r\n        className: `${layoutClass ?? 'flex-block'} ${rest?.className ?? ''} ${isCard ? 'card' : ''} ${noMobile ? 'noMobile' : ''}`\r\n    }), [\r\n        rest,\r\n        layoutClass,\r\n        isCard\r\n    ]);\r\n    return <div {...memoParams}>{children}</div>;\r\n};\r\nexport default BlockLayout;\r\n","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\HeroPage\\HeroPage.tsx",["509","510","511"],[],"import { TextField } from '@mui/material';\r\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\r\nimport HeroCard, { iHero } from '../../components/HeroCard/HeroCard';\r\nimport ImageComponent from '../../components/HeroCard/ImageComponent';\r\nimport ColumnLayout from '../../components/Layouts/ColumnLayout';\r\nimport RowLayout from '../../components/Layouts/RowLayout';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport MediaTile from '../../components/MediaTile/MediaTile';\r\nimport ModalContext from '../../components/Modal/ModalContext';\r\nimport TabsComponent from '../../components/TabsComponent/TabsComponent';\r\nimport Headline from '../../components/Text/Headline';\r\nimport SubHeadline from '../../components/Text/SubHeadline';\r\nimport './HeroPage.scss';\r\nimport stringUtils from '../../utils/stringUtils';\r\n\r\nconst HeroPage = () => {\r\n    const { openModal, closeModal } = useContext(ModalContext);\r\n    const [search, setSearch] = useState<string>(\"\");\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [activeHero, innerSetActiveHero] = useState<iHero | undefined>(\r\n      undefined\r\n    );\r\n    const [data, setData] = useState<any>();\r\n    const scrollRef = useRef<any>(undefined);\r\n\r\n    const openHeroModal = useCallback(async (hero?: iHero) => {\r\n        if (!hero) return;\r\n        openModal(<HeroCard closeFunction={closeModal} hero={hero} />);\r\n    }, [\r\n        openModal,\r\n        activeHero,\r\n        closeModal\r\n    ]);\r\n    const getData = useCallback(async () => {\r\n        try {\r\n            await setLoading(true);\r\n            const response = await fetch(\"https://tppublic.blob.core.windows.net/test-data/super-heroes.json\")\r\n            const data = await response?.json();\r\n            if (data) {\r\n                setData(data);\r\n            }\r\n\r\n        } catch (e: any) {\r\n            console.log(e?.message);\r\n        }\r\n        setLoading(false);\r\n    }, []);\r\n    const onChange = useCallback((e) => {\r\n        setSearch(e.target.value);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      getData();\r\n    }, [getData]);\r\n\r\n    const setActiveHero = useCallback(async (hero?: iHero) => {\r\n      if (!hero) {\r\n        innerSetActiveHero(undefined);\r\n      } else {\r\n        innerSetActiveHero(hero);\r\n        openHeroModal(hero);\r\n      }\r\n    }, [\r\n        openHeroModal\r\n    ]);\r\n    const imageLibraryCards = useMemo(() => loading ? <Loading /> : data.filter((hero: any) => {\r\n        if (search === \"\") return true;\r\n        if (!hero) return false;\r\n        const regex = new RegExp(`${search}`, 'gmi');\r\n        const match = regex.test(hero.name);\r\n        return match;\r\n    }).map((hero : iHero) => {\r\n        const middleSection = (\r\n            <ImageComponent hero={hero} onClick={() => setActiveHero(hero)}/>\r\n        );\r\n        const label = search ? stringUtils.highlight(hero.name, search) : hero.name;\r\n        const bottomSection = (\r\n            <Headline size={3}>{label ?? \"No Hero Name\"}</Headline>\r\n        );\r\n        return (\r\n            <MediaTile\r\n                key={hero.id}\r\n                middleSection={middleSection}\r\n                bottomSection={bottomSection}\r\n            />\r\n        );\r\n    }), [\r\n        search,\r\n        data,\r\n        loading,\r\n        setActiveHero\r\n    ]);\r\n    return (\r\n        <ColumnLayout id=\"HeroPage\">\r\n            <Headline size={1}>\r\n                Hall of Heroes\r\n            </Headline>\r\n            <TextField\r\n                onChange={onChange}\r\n                label=\"Search\"\r\n                value={search}\r\n                variant=\"filled\"\r\n                className=\"jdgd-input\"\r\n            />\r\n            <RowLayout ref={scrollRef} className=\"image-library\">\r\n                {imageLibraryCards}\r\n            </RowLayout>\r\n        </ColumnLayout>\r\n    );\r\n};\r\nexport default HeroPage;","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\MediaTile\\MediaTile.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\HeroCard\\ImageComponent.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\HeroCard\\HeroCard.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Walkthrough\\Walkthrough.tsx",["512","513","514"],[],"import { Button } from \"@material-ui/core\";\r\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport ReactJoyride, { BeaconRenderProps } from \"react-joyride\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport Body from \"../Text/Body\";\r\nimport Headline from \"../Text/Headline\";\r\nimport SubHeadline from \"../Text/SubHeadline\";\r\nimport './Walkthrough.scss';\r\n\r\nconst Walkthrough: React.FC<any> = ({ children }) => {\r\n    const [steps, setSteps] = useState<any[]>([]);\r\n    const [stepIndex, setStepIndex] = useState<number>(0);\r\n    const [runWalkthrough, setRunWalkthrough] = useState<boolean>(false);\r\n\r\n    const updateSteps = useCallback(() => {\r\n        const newSteps: any[] = [];\r\n        const walkthroughNodes = document.querySelectorAll(\"[data-walkthrough-step]\");\r\n\r\n        walkthroughNodes.forEach((node) => {\r\n            const target = node.getAttribute(\"id\") || \"\";\r\n            if (!target) return;\r\n            const step = node.getAttribute(\"data-walkthrough-step\") || \"\";\r\n            const label = node.getAttribute(\"data-walkthrough-label\") || \"\";\r\n            const description = node.getAttribute(\"data-walkthrough-description\") || \"\";\r\n            const content = (\r\n                <>\r\n                    <Headline size={4}>{label}</Headline>\r\n                    <SubHeadline>Step: {step}</SubHeadline>\r\n                    <Body>{description}</Body>\r\n                </>\r\n            );\r\n            newSteps.push({ target: `#${target}`, content });\r\n        });\r\n        setSteps(newSteps);\r\n        setStepIndex(0);\r\n        setRunWalkthrough(true);\r\n    }, []);\r\n\r\n    const updateStepIndex = useCallback((props) => {\r\n        if (props.action === 'next' && props.type === 'step:after') {\r\n            setStepIndex(prev => prev + 1);\r\n        } else if (props.action === 'prev' && props.type === 'step:after') {\r\n            setStepIndex(prev => prev - 1);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setRunWalkthrough(false);\r\n        const timeout = setTimeout(() => {\r\n            updateSteps();\r\n        }, 5000);\r\n        return () => clearTimeout(timeout);\r\n    }, [children]);\r\n\r\n    const Beacon = useCallback((props: any) => {\r\n        return (\r\n            <Button\r\n                className=\"ball\"\r\n                aria-label={props['aria-label']}\r\n                onClick={props.onClick}\r\n                data-tip={'Start Tour'}\r\n            >\r\n                <Icon icon=\"QuestionMark\" />\r\n            </Button>\r\n        );\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n            {steps && steps.length > 0 && (\r\n                <ReactJoyride\r\n                    steps={steps}\r\n                    stepIndex={stepIndex}\r\n                    run={runWalkthrough}\r\n                    continuous\r\n                    callback={updateStepIndex}\r\n                    beaconComponent={Beacon}\r\n                />\r\n            )}\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Walkthrough;","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\ResumePage\\Stars.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\SpaceNews\\SpaceNews.tsx",["515"],[],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport ColumnLayout from '../../../components/Layouts/ColumnLayout';\r\nimport BlockLayout from '../../../components/Layouts/BlockLayout';\r\nimport Headline from '../../../components/Text/Headline';\r\nimport Body from '../../../components/Text/Body';\r\nimport { Link } from '@mui/material';\r\nimport ImageVideo from '../../../components/ImageVideo';\r\nimport RowLayout from '../../../components/Layouts/RowLayout';\r\n\r\nconst SpaceNews = () => {\r\n  const [data, setData] = useState<null | any[]>(null);\r\n  const getData = useCallback(async () => {\r\n    try {\r\n      const response = await fetch('https://api.spaceflightnewsapi.net/v4/articles/');\r\n      const data = await response.json();\r\n      setData(data.results);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      console.log(\"Fetch request completed.\");\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n     getData();\r\n  }, [getData]);\r\n  return (\r\n    <ColumnLayout addSectionPadding>\r\n        <Headline>Space News</Headline>\r\n        <BlockLayout>\r\n            {data && data.map((article) => (\r\n                <ColumnLayout isCard key={article.id}>\r\n                    {article.title && <Headline size={3}>{article.title}</Headline>}\r\n                    {article.summary && <Body>{article.summary}</Body>}\r\n                    <Link\r\n                        href={article.url}\r\n                        data-tip={'Read More'}\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\"\r\n                        className='link'\r\n                    >\r\n                        Read More\r\n                    </Link>\r\n                    {article.image_url && (\r\n                        <ImageVideo src={article.image_url} maxHeight=\"280px\" height=\"280px\" />\r\n                    )}\r\n                </ColumnLayout>\r\n            ))}\r\n        </BlockLayout>\r\n    </ColumnLayout>\r\n  );\r\n};\r\nexport default SpaceNews;","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\ImageVideo.tsx",["516"],[],"import React, { CSSProperties } from 'react';\r\n\r\ninterface Props {\r\n  src: string;\r\n  alt?: string;\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  video?: boolean;\r\n  width?: string;\r\n  height?: string;\r\n  maxWidth?: string;\r\n  maxHeight?: string;\r\n  loading?: 'lazy' | 'eager';\r\n  poster?: string;\r\n  autoplay?: boolean;\r\n  controls?: boolean;\r\n  loop?: boolean;\r\n  muted?: boolean;\r\n  playsInline?: boolean;\r\n  onClick?: () => void;\r\n  onLoad?: () => void;\r\n  onError?: () => void;\r\n}\r\n\r\nconst ImageVideo: React.FC<Props> = ({\r\n  src,\r\n  alt = '',\r\n  className = '',\r\n  style = {},\r\n  video = false,\r\n  width,\r\n  height,\r\n  maxWidth,\r\n  maxHeight,\r\n  loading,\r\n  poster,\r\n  autoplay,\r\n  controls,\r\n  loop,\r\n  muted,\r\n  playsInline,\r\n  onClick,\r\n  onLoad,\r\n  onError,\r\n}) => {\r\n  const dimensionsStyle: CSSProperties = {\r\n    width: width || '100%',\r\n    height: height || '100%',\r\n    maxWidth: maxWidth || 'none',\r\n    maxHeight: maxHeight || 'none',\r\n  };\r\n\r\n  const commonProps: any = {\r\n    alt,\r\n    style: { objectFit: 'cover', width: '100%', height: '100%' },\r\n    loading,\r\n    onLoad,\r\n    onError,\r\n  };\r\n\r\n  if (video) {\r\n    return (\r\n      <div className={className} style={{ ...style, ...dimensionsStyle }} role=\"img\" aria-label={alt}>\r\n        <video\r\n          {...commonProps}\r\n          src={src}\r\n          poster={poster}\r\n          autoPlay={autoplay}\r\n          controls={controls}\r\n          loop={loop}\r\n          muted={muted}\r\n          playsInline={playsInline}\r\n        >\r\n          <track kind=\"description\" label=\"Video Description\" srcLang=\"en\" src={`${src}.vtt`} />\r\n        </video>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div onClick={onClick} className={className} style={{ ...style, ...dimensionsStyle }} role=\"img\" aria-label={alt}>\r\n      <img {...commonProps} src={src} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageVideo;\r\n","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\BobsBurgers\\BobsBurgers.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\Spell.tsx",["517"],[],"import React, { useState } from 'react';\r\nimport ColumnLayout from '../../components/Layouts/ColumnLayout';\r\nimport Headline from '../../components/Text/Headline';\r\nimport Body from '../../components/Text/Body';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport RowLayout from '../../components/Layouts/RowLayout';\r\nimport { Button } from '@material-ui/core';\r\nimport BlockLayout from '../../components/Layouts/BlockLayout';\r\nimport stringUtils from '../../utils/stringUtils';\r\nimport Pill from '../../components/Pill/Pill';\r\nimport { getSchoolColor } from './MagicSchools';\r\nimport { ValueLabel } from './DnDMain';\r\nimport { SpellProps } from './DndInterfaces';\r\nimport SubHeadline from '../../components/Text/SubHeadline';\r\n\r\nconst Spell: React.FC<SpellProps> = ({ spellInfo, search, selectedSchool, selectedLevel, selectedDuration, ...rest }) => {\r\n    const [showMore, setShowMore] = useState(false);\r\n\r\n    if (!spellInfo) {\r\n        return <Loading />;\r\n    }\r\n    const buttonLabel = showMore ? 'Show Less' : 'Show More';\r\n    const label = search ? stringUtils.highlight(spellInfo.name, search) : spellInfo.name;\r\n\r\n    const schoolSelected = selectedSchool === spellInfo?.school.index;\r\n    const levelSelected = selectedLevel === spellInfo.level;\r\n    const durationSelected = selectedDuration === spellInfo.duration;\r\n\r\n    return (\r\n        <ColumnLayout isCard style={rest?.style} gap={4}>\r\n            <RowLayout className=\"flexSB\" noWrapping>\r\n                <Headline secondary size={3}>{label}</Headline>\r\n                <Button\r\n                    aria-label={buttonLabel}\r\n                    onClick={() => setShowMore(!showMore)}\r\n                >\r\n                    {buttonLabel}\r\n                </Button>\r\n            </RowLayout>\r\n            <RowLayout>\r\n                <Pill className={`${schoolSelected ? `pill-${getSchoolColor(spellInfo.school.name)}` : 'None'} slender`}>{spellInfo.school.name}</Pill>\r\n                <Pill className={`${levelSelected ? 'pill-8' : 'None'} slender`}>Level: {spellInfo.level}</Pill>\r\n                <Pill className={`${durationSelected ? 'pill-9' : 'None'} slender`}>{spellInfo.duration}</Pill>\r\n            </RowLayout>\r\n            {spellInfo.desc && <Body truncateNumber={showMore ? undefined : 124}>{spellInfo.desc[0]}</Body>}\r\n            {!showMore ? null : (\r\n                <>\r\n                    <BlockLayout noMobile gap={16}>\r\n                        <ValueLabel label=\"Casting Time: \" value={spellInfo.casting_time} />\r\n                        <ValueLabel label=\"Range: \" value={spellInfo.range} />\r\n                        <ValueLabel label=\"Material: \" value={spellInfo.material} />\r\n                        <ValueLabel label=\"Components: \" value={spellInfo.components} />\r\n                        <ValueLabel label=\"Duration: \" value={spellInfo.duration} />\r\n                        <ValueLabel label=\"Concentration: \" value={spellInfo.concentration} />\r\n                        <ValueLabel label=\"Ritual: \" value={spellInfo.ritual} />\r\n                    </BlockLayout>\r\n                    {spellInfo.higher_level && spellInfo.higher_level.length > 0 && (\r\n                        <ValueLabel label=\"At Higher Levels: \" value={spellInfo.higher_level.map(level => <Body key={level}>{level}</Body>)} />\r\n                    )}\r\n                </>\r\n            )}\r\n        </ColumnLayout>\r\n    );\r\n};\r\n\r\nexport default Spell;","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\utils\\stringUtils.js",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\DnDMain.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\MagicSchools.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Pill\\Pill.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\Monsters.tsx",["518","519","520","521"],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\DndInterfaces.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\DndData.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\Equipment.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\Classes.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\utils\\numberUtils.js",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\Races.tsx",["522","523"],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\Rules.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\FifthEdition\\Character.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Layouts\\FormLayout.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\FormComponents\\InputFallback.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\FormComponents\\InputWrapper.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\ResumePage\\GlobeElement.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\SocialPage\\SocialPage.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Layouts\\TileLayout.tsx",["524"],[],"import React, { useMemo } from 'react';\r\n\r\ninterface InputGroupProps extends React.ComponentPropsWithoutRef<\"input\"> {\r\n    layoutClass?: string;\r\n    isCard?: boolean;\r\n    gap?: number;\r\n    addSectionPadding?: boolean;\r\n    children: any;\r\n}\r\nconst TileLayout = ({\r\n    layoutClass,\r\n    isCard,\r\n    gap,\r\n    addSectionPadding,\r\n    children,\r\n    ...rest // This includes things like id, style, className, everything a regular component can use.\r\n} : InputGroupProps) => {\r\n    const memoParams = useMemo(() => ({\r\n        ...rest,\r\n        style: {\r\n            ...rest?.style,\r\n            padding: addSectionPadding ? '12px 16px 60px' : '',\r\n            gap: gap\r\n        },\r\n        className: `${layoutClass ?? 'flex-tile'} ${rest?.className ?? ''} ${isCard ? 'card' : ''}`\r\n    }), [\r\n        rest,\r\n        layoutClass,\r\n        isCard\r\n    ]);\r\n    return <div {...memoParams}>{children}</div>;\r\n};\r\nexport default TileLayout;\r\n","C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Layouts\\Tile.tsx",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\SocialPage\\SocialData.ts",[],[],"C:\\Users\\Justin Gist\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\SocialPage\\PagingOverlay.tsx",[],[],{"ruleId":"525","severity":1,"message":"526","line":22,"column":8,"nodeType":"527","messageId":"528","endLine":22,"endColumn":20},{"ruleId":"525","severity":1,"message":"529","line":30,"column":8,"nodeType":"527","messageId":"528","endLine":30,"endColumn":20},{"ruleId":"525","severity":1,"message":"530","line":1,"column":10,"nodeType":"527","messageId":"528","endLine":1,"endColumn":17},{"ruleId":"525","severity":1,"message":"531","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":22},{"ruleId":"525","severity":1,"message":"532","line":3,"column":8,"nodeType":"527","messageId":"528","endLine":3,"endColumn":19},{"ruleId":"525","severity":1,"message":"533","line":4,"column":8,"nodeType":"527","messageId":"528","endLine":4,"endColumn":22},{"ruleId":"525","severity":1,"message":"534","line":5,"column":3,"nodeType":"527","messageId":"528","endLine":5,"endColumn":18},{"ruleId":"525","severity":1,"message":"535","line":7,"column":8,"nodeType":"527","messageId":"528","endLine":7,"endColumn":18},{"ruleId":"525","severity":1,"message":"536","line":8,"column":8,"nodeType":"527","messageId":"528","endLine":8,"endColumn":18},{"ruleId":"525","severity":1,"message":"537","line":9,"column":8,"nodeType":"527","messageId":"528","endLine":9,"endColumn":18},{"ruleId":"525","severity":1,"message":"538","line":10,"column":8,"nodeType":"527","messageId":"528","endLine":10,"endColumn":15},{"ruleId":"525","severity":1,"message":"539","line":11,"column":8,"nodeType":"527","messageId":"528","endLine":11,"endColumn":15},{"ruleId":"525","severity":1,"message":"540","line":12,"column":8,"nodeType":"527","messageId":"528","endLine":12,"endColumn":14},{"ruleId":"525","severity":1,"message":"541","line":13,"column":8,"nodeType":"527","messageId":"528","endLine":13,"endColumn":14},{"ruleId":"525","severity":1,"message":"542","line":14,"column":8,"nodeType":"527","messageId":"528","endLine":14,"endColumn":14},{"ruleId":"543","severity":1,"message":"544","line":163,"column":7,"nodeType":"545","endLine":165,"endColumn":12},{"ruleId":"543","severity":1,"message":"544","line":166,"column":7,"nodeType":"545","endLine":168,"endColumn":12},{"ruleId":"543","severity":1,"message":"544","line":169,"column":7,"nodeType":"545","endLine":171,"endColumn":12},{"ruleId":"543","severity":1,"message":"544","line":191,"column":9,"nodeType":"545","endLine":194,"endColumn":14},{"ruleId":"543","severity":1,"message":"544","line":206,"column":9,"nodeType":"545","endLine":209,"endColumn":14},{"ruleId":"525","severity":1,"message":"546","line":1,"column":10,"nodeType":"527","messageId":"528","endLine":1,"endColumn":21},{"ruleId":"525","severity":1,"message":"547","line":1,"column":23,"nodeType":"527","messageId":"528","endLine":1,"endColumn":32},{"ruleId":"525","severity":1,"message":"548","line":1,"column":34,"nodeType":"527","messageId":"528","endLine":1,"endColumn":40},{"ruleId":"525","severity":1,"message":"549","line":3,"column":3,"nodeType":"527","messageId":"528","endLine":3,"endColumn":27},{"ruleId":"525","severity":1,"message":"550","line":4,"column":3,"nodeType":"527","messageId":"528","endLine":4,"endColumn":30},{"ruleId":"525","severity":1,"message":"551","line":8,"column":8,"nodeType":"527","messageId":"528","endLine":8,"endColumn":18},{"ruleId":"525","severity":1,"message":"552","line":8,"column":22,"nodeType":"527","messageId":"528","endLine":8,"endColumn":33},{"ruleId":"525","severity":1,"message":"553","line":9,"column":10,"nodeType":"527","messageId":"528","endLine":9,"endColumn":20},{"ruleId":"525","severity":1,"message":"554","line":10,"column":8,"nodeType":"527","messageId":"528","endLine":10,"endColumn":12},{"ruleId":"525","severity":1,"message":"555","line":12,"column":10,"nodeType":"527","messageId":"528","endLine":12,"endColumn":29},{"ruleId":"525","severity":1,"message":"556","line":1,"column":10,"nodeType":"527","messageId":"528","endLine":1,"endColumn":18},{"ruleId":"525","severity":1,"message":"551","line":3,"column":8,"nodeType":"527","messageId":"528","endLine":3,"endColumn":18},{"ruleId":"525","severity":1,"message":"552","line":3,"column":22,"nodeType":"527","messageId":"528","endLine":3,"endColumn":33},{"ruleId":"525","severity":1,"message":"553","line":4,"column":10,"nodeType":"527","messageId":"528","endLine":4,"endColumn":20},{"ruleId":"525","severity":1,"message":"552","line":3,"column":22,"nodeType":"527","messageId":"528","endLine":3,"endColumn":33},{"ruleId":"525","severity":1,"message":"557","line":189,"column":22,"nodeType":"527","messageId":"528","endLine":189,"endColumn":32},{"ruleId":"525","severity":1,"message":"558","line":191,"column":13,"nodeType":"527","messageId":"528","endLine":191,"endColumn":19},{"ruleId":"559","severity":1,"message":"560","line":257,"column":119,"nodeType":"561","endLine":257,"endColumn":165,"suggestions":"562"},{"ruleId":"525","severity":1,"message":"563","line":261,"column":15,"nodeType":"527","messageId":"528","endLine":261,"endColumn":27},{"ruleId":"525","severity":1,"message":"564","line":262,"column":15,"nodeType":"527","messageId":"528","endLine":262,"endColumn":31},{"ruleId":"525","severity":1,"message":"565","line":263,"column":15,"nodeType":"527","messageId":"528","endLine":263,"endColumn":29},{"ruleId":"525","severity":1,"message":"566","line":264,"column":15,"nodeType":"527","messageId":"528","endLine":264,"endColumn":28},{"ruleId":"559","severity":1,"message":"567","line":462,"column":8,"nodeType":"561","endLine":472,"endColumn":6,"suggestions":"568"},{"ruleId":"525","severity":1,"message":"546","line":1,"column":10,"nodeType":"527","messageId":"528","endLine":1,"endColumn":21},{"ruleId":"525","severity":1,"message":"552","line":2,"column":22,"nodeType":"527","messageId":"528","endLine":2,"endColumn":33},{"ruleId":"525","severity":1,"message":"569","line":34,"column":7,"nodeType":"527","messageId":"528","endLine":34,"endColumn":22},{"ruleId":"525","severity":1,"message":"570","line":39,"column":3,"nodeType":"527","messageId":"528","endLine":39,"endColumn":15},{"ruleId":"525","severity":1,"message":"571","line":89,"column":3,"nodeType":"527","messageId":"528","endLine":89,"endColumn":11},{"ruleId":"525","severity":1,"message":"572","line":5,"column":8,"nodeType":"527","messageId":"528","endLine":5,"endColumn":22},{"ruleId":"559","severity":1,"message":"573","line":117,"column":8,"nodeType":"561","endLine":121,"endColumn":6,"suggestions":"574"},{"ruleId":"575","severity":1,"message":"576","line":14,"column":5,"nodeType":"577","messageId":"578","endLine":16,"endColumn":6},{"ruleId":"525","severity":1,"message":"579","line":21,"column":23,"nodeType":"527","messageId":"528","endLine":21,"endColumn":34},{"ruleId":"525","severity":1,"message":"580","line":1,"column":10,"nodeType":"527","messageId":"528","endLine":1,"endColumn":22},{"ruleId":"525","severity":1,"message":"581","line":5,"column":8,"nodeType":"527","messageId":"528","endLine":5,"endColumn":12},{"ruleId":"525","severity":1,"message":"582","line":39,"column":9,"nodeType":"527","messageId":"528","endLine":39,"endColumn":21},{"ruleId":"525","severity":1,"message":"583","line":69,"column":11,"nodeType":"527","messageId":"528","endLine":69,"endColumn":20},{"ruleId":"543","severity":1,"message":"544","line":23,"column":52,"nodeType":"545","endLine":23,"endColumn":77},{"ruleId":"525","severity":1,"message":"584","line":1,"column":10,"nodeType":"527","messageId":"528","endLine":1,"endColumn":16},{"ruleId":"525","severity":1,"message":"585","line":1,"column":17,"nodeType":"527","messageId":"528","endLine":1,"endColumn":29},{"ruleId":"525","severity":1,"message":"586","line":1,"column":43,"nodeType":"527","messageId":"528","endLine":1,"endColumn":46},{"ruleId":"559","severity":1,"message":"587","line":26,"column":9,"nodeType":"561","endLine":31,"endColumn":6,"suggestions":"588"},{"ruleId":"559","severity":1,"message":"589","line":25,"column":9,"nodeType":"561","endLine":29,"endColumn":6,"suggestions":"590"},{"ruleId":"525","severity":1,"message":"591","line":10,"column":8,"nodeType":"527","messageId":"528","endLine":10,"endColumn":21},{"ruleId":"525","severity":1,"message":"592","line":12,"column":8,"nodeType":"527","messageId":"528","endLine":12,"endColumn":19},{"ruleId":"559","severity":1,"message":"593","line":29,"column":8,"nodeType":"561","endLine":33,"endColumn":6,"suggestions":"594"},{"ruleId":"525","severity":1,"message":"530","line":2,"column":41,"nodeType":"527","messageId":"528","endLine":2,"endColumn":48},{"ruleId":"525","severity":1,"message":"595","line":3,"column":24,"nodeType":"527","messageId":"528","endLine":3,"endColumn":41},{"ruleId":"559","severity":1,"message":"596","line":53,"column":8,"nodeType":"561","endLine":53,"endColumn":18,"suggestions":"597"},{"ruleId":"525","severity":1,"message":"598","line":8,"column":8,"nodeType":"527","messageId":"528","endLine":8,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":82,"column":7,"nodeType":"545","endLine":82,"endColumn":41},{"ruleId":"525","severity":1,"message":"592","line":14,"column":8,"nodeType":"527","messageId":"528","endLine":14,"endColumn":19},{"ruleId":"525","severity":1,"message":"547","line":1,"column":27,"nodeType":"527","messageId":"528","endLine":1,"endColumn":36},{"ruleId":"525","severity":1,"message":"599","line":9,"column":8,"nodeType":"527","messageId":"528","endLine":9,"endColumn":18},{"ruleId":"525","severity":1,"message":"592","line":12,"column":8,"nodeType":"527","messageId":"528","endLine":12,"endColumn":19},{"ruleId":"525","severity":1,"message":"600","line":94,"column":31,"nodeType":"527","messageId":"528","endLine":94,"endColumn":34},{"ruleId":"525","severity":1,"message":"601","line":3,"column":8,"nodeType":"527","messageId":"528","endLine":3,"endColumn":19},{"ruleId":"525","severity":1,"message":"602","line":5,"column":8,"nodeType":"527","messageId":"528","endLine":5,"endColumn":15},{"ruleId":"559","severity":1,"message":"603","line":26,"column":9,"nodeType":"561","endLine":30,"endColumn":6,"suggestions":"604"},"@typescript-eslint/no-unused-vars","'DesignerPage' is defined but never used.","Identifier","unusedVar","'MagicSchools' is defined but never used.","'useMemo' is defined but never used.","'CardCalculator' is defined but never used.","'CurveLayout' is defined but never used.","'HeroPageLayout' is defined but never used.","'iHeroPageLayout' is defined but never used.","'Visualizer' is defined but never used.","'chocolate2' is defined but never used.","'chocolate3' is defined but never used.","'swoosh1' is defined but never used.","'swoosh3' is defined but never used.","'phone1' is defined but never used.","'phone2' is defined but never used.","'phone3' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'ParallaxBackgroundCircle' is defined but never used.","'ParallaxBackgroundTriangles' is defined but never used.","'PageLayout' is defined but never used.","'iPageLayout' is defined but never used.","'InputTypes' is defined but never used.","'Body' is defined but never used.","'useWindowDimensions' is defined but never used.","'useState' is defined but never used.","'closeModal' is assigned a value but never used.","'result' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'dimensions.isMobile'. Either include it or remove the dependency array.","ArrayExpression",["605"],"'renderOption' is assigned a value but never used.","'renderInputValue' is assigned a value but never used.","'getOptionValue' is assigned a value but never used.","'renderDisplay' is assigned a value but never used.","React Hook useMemo has an unnecessary dependency: 'dimensions.isMobile'. Either exclude it or remove the dependency array.",["606"],"'getValueFromKey' is assigned a value but never used.","'ContactPhone' is defined but never used.","'NoteEdit' is defined but never used.","'StopNavigation' is defined but never used.","React Hook useCallback has an unnecessary dependency: 'formData'. Either exclude it or remove the dependency array.",["607"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'alertResult' is assigned a value but never used.","'ThemeContext' is defined but never used.","'Icon' is defined but never used.","'modalOptions' is assigned a value but never used.","'iUseModal' is defined but never used.","'Button' is defined but never used.","'ForwardedRef' is defined but never used.","'Ref' is defined but never used.","React Hook useMemo has a missing dependency: 'gap'. Either include it or remove the dependency array.",["608"],"React Hook useMemo has missing dependencies: 'gap' and 'noMobile'. Either include them or remove the dependency array.",["609"],"'TabsComponent' is defined but never used.","'SubHeadline' is defined but never used.","React Hook useCallback has an unnecessary dependency: 'activeHero'. Either exclude it or remove the dependency array.",["610"],"'BeaconRenderProps' is defined but never used.","React Hook useEffect has a missing dependency: 'updateSteps'. Either include it or remove the dependency array.",["611"],"'RowLayout' is defined but never used.","'ImageVideo' is defined but never used.","'url' is assigned a value but never used.","'BlockLayout' is defined but never used.","'Loading' is defined but never used.","React Hook useMemo has missing dependencies: 'addSectionPadding' and 'gap'. Either include them or remove the dependency array.",["612"],{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"621","fix":"622"},{"desc":"623","fix":"624"},{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},"Update the dependencies array to be: [dimensions.isMobile, errorMessage, disabledMessage, input.tooltip]",{"range":"629","text":"630"},"Update the dependencies array to be: [disabledMessage, input, onChange, value, errorMessage, memoizedTooltip, additionalClasses, label]",{"range":"631","text":"632"},"Update the dependencies array to be: [setErrorFields, validationSchema]",{"range":"633","text":"634"},"Update the dependencies array to be: [rest, gap, layoutClass, noWrapping, isCard]",{"range":"635","text":"636"},"Update the dependencies array to be: [rest, gap, layoutClass, isCard, noMobile]",{"range":"637","text":"638"},"Update the dependencies array to be: [openModal, closeModal]",{"range":"639","text":"640"},"Update the dependencies array to be: [children, updateSteps]",{"range":"641","text":"642"},"Update the dependencies array to be: [rest, addSectionPadding, gap, layoutClass, isCard]",{"range":"643","text":"644"},[10522,10568],"[dimensions.isMobile, errorMessage, disabledMessage, input.tooltip]",[19191,19401],"[disabledMessage, input, onChange, value, errorMessage, memoizedTooltip, additionalClasses, label]",[4675,4753],"[setErrorFields, validationSchema]",[845,927],"[rest, gap, layoutClass, noWrapping, isCard]",[743,804],"[rest, gap, layoutClass, isCard, noMobile]",[1443,1512],"[openModal, closeModal]",[2132,2142],"[children, updateSteps]",[794,855],"[rest, addSectionPadding, gap, layoutClass, isCard]"]