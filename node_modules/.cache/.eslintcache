[{"C:\\Users\\Justin\\my-app\\src\\index.tsx":"1","C:\\Users\\Justin\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Justin\\my-app\\src\\App.tsx":"3","C:\\Users\\Justin\\my-app\\src\\pages\\HomePage\\HomePage.tsx":"4","C:\\Users\\Justin\\my-app\\src\\components\\RenderComponent\\RenderComponent.tsx":"5","C:\\Users\\Justin\\my-app\\src\\components\\NavBar\\NavBar.tsx":"6","C:\\Users\\Justin\\my-app\\src\\components\\NavButton\\NavButton.tsx":"7","C:\\Users\\Justin\\my-app\\src\\components\\Icon\\Icon.tsx":"8","C:\\Users\\Justin\\my-app\\src\\pages\\ThemeSwitcher\\Themeswitcher.tsx":"9","C:\\Users\\Justin\\my-app\\src\\pages\\ThemeSwitcher\\DefaultTheme.tsx":"10","C:\\Users\\Justin\\my-app\\src\\pages\\ThemeSwitcher\\DystopiaTheme.tsx":"11","C:\\Users\\Justin\\my-app\\src\\pages\\ThemeSwitcher\\EightiesTheme.tsx":"12","C:\\Users\\Justin\\my-app\\src\\pages\\ThemeSwitcher\\SafariTheme.tsx":"13","C:\\Users\\Justin\\my-app\\src\\pages\\ThemeSwitcher\\SpookyTheme.tsx":"14","C:\\Users\\Justin\\my-app\\src\\ThemeManager.tsx":"15","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\index.tsx":"16","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\reportWebVitals.ts":"17","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\App.tsx":"18","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\ThemeManager.tsx":"19","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\RenderComponent\\RenderComponent.tsx":"20","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\OverlayControl\\OverlayControl.tsx":"21","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\testPage.tsx":"22","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\NavBar\\NavBar.tsx":"23","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\SideBar\\SideBar.tsx":"24","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\BezierBackground\\DesignBackground.tsx":"25","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\SalesTheme\\SalesTheme.tsx":"26","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\ResumePage\\ResumePage.tsx":"27","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\EnterpriseTheme\\EnterpriseTheme.tsx":"28","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\SpookyTheme.tsx":"29","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\ContactPage\\ContactPage.tsx":"30","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\CartComponent.tsx":"31","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\BezierBackground\\ParallaxBackground.tsx":"32","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\NavButton\\NavButton.tsx":"33","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Icon\\Icon.tsx":"34","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\TutorialComponent\\TutorialControl.tsx":"35"},{"size":500,"mtime":499162500000,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":1958,"mtime":1637529292626,"results":"39","hashOfConfig":"37"},{"size":168,"mtime":1629685432221,"results":"40","hashOfConfig":"37"},{"size":1531,"mtime":1637529049589,"results":"41","hashOfConfig":"37"},{"size":2963,"mtime":1637542616564,"results":"42","hashOfConfig":"37"},{"size":2896,"mtime":1637723452237,"results":"43","hashOfConfig":"37"},{"size":1672,"mtime":1637542552200,"results":"44","hashOfConfig":"37"},{"size":1592,"mtime":1637471326095,"results":"45","hashOfConfig":"37"},{"size":276,"mtime":1637474671620,"results":"46","hashOfConfig":"37"},{"size":283,"mtime":1637474640298,"results":"47","hashOfConfig":"37"},{"size":275,"mtime":1637474696380,"results":"48","hashOfConfig":"37"},{"size":269,"mtime":1637474717352,"results":"49","hashOfConfig":"37"},{"size":269,"mtime":1637474736970,"results":"50","hashOfConfig":"37"},{"size":15551,"mtime":1637714656414,"results":"51","hashOfConfig":"37"},{"size":536,"mtime":1645540511874,"results":"52","hashOfConfig":"53"},{"size":440,"mtime":1645540511910,"results":"54","hashOfConfig":"53"},{"size":3450,"mtime":1645542668859,"results":"55","hashOfConfig":"53"},{"size":29527,"mtime":1645666005456,"results":"56","hashOfConfig":"53"},{"size":6043,"mtime":1645985243482,"results":"57","hashOfConfig":"53"},{"size":684,"mtime":1645540511858,"results":"58","hashOfConfig":"53"},{"size":151,"mtime":1645540511908,"results":"59","hashOfConfig":"53"},{"size":3983,"mtime":1645540511851,"results":"60","hashOfConfig":"53"},{"size":9983,"mtime":1645540511866,"results":"61","hashOfConfig":"53"},{"size":31825,"mtime":1645540511803,"results":"62","hashOfConfig":"53"},{"size":19763,"mtime":1645886478974,"results":"63","hashOfConfig":"53"},{"size":10305,"mtime":1645540511897,"results":"64","hashOfConfig":"53"},{"size":9784,"mtime":1645578718719,"results":"65","hashOfConfig":"53"},{"size":23115,"mtime":1645669550780,"results":"66","hashOfConfig":"53"},{"size":4466,"mtime":1645540511881,"results":"67","hashOfConfig":"53"},{"size":5385,"mtime":1645888763062,"results":"68","hashOfConfig":"53"},{"size":6073,"mtime":1645540511805,"results":"69","hashOfConfig":"53"},{"size":3450,"mtime":1645540511856,"results":"70","hashOfConfig":"53"},{"size":3925,"mtime":1645540511818,"results":"71","hashOfConfig":"53"},{"size":601,"mtime":1645540511870,"results":"72","hashOfConfig":"53"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"1pdrlmw",{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"75"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"75"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"75"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"75"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"75"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"qnb3mx",{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"118"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"118"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"118"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"118"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"118"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"118"},"C:\\Users\\Justin\\my-app\\src\\index.tsx",[],["174","175"],"C:\\Users\\Justin\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Justin\\my-app\\src\\App.tsx",["176","177","178","179"],"import \"./App.css\";\nimport \"./styles.scss\";\nimport { Route, Redirect, Switch, BrowserRouter } from \"react-router-dom\";\nimport RenderComponent from \"./components/RenderComponent/RenderComponent\";\nimport { useState } from \"react\";\nimport ThemeManager, { GlobalThemes } from \"./ThemeManager\";\nimport React from \"react\";\nexport const ThemeManagerContext = React.createContext<any>(undefined);\nconst themeManagerApp = new ThemeManager();\nconst App = () => {\n  const findMedianSortedArrays = (nums1: number[], nums2: number[]): number => {\n    let mergeArray = [...nums1, ...nums2];\n    let sortedArray = mergeArray.sort();\n    let length = mergeArray.length;\n    if (length === 1) {\n      return mergeArray[0];\n    } else if (length % 2 === 0) {\n      console.log((mergeArray[length / 2 - 1] + mergeArray[length / 2]) / 2);\n      return (mergeArray[length / 2] + mergeArray[length / 2 + 1]) / 2;\n    } else {\n      console.log(mergeArray[length / 2 - 0.5]);\n      return mergeArray[length / 2 - 0.5];\n    }\n  };\n  //findMedianSortedArrays([2, 3], [1, 4, 10]);\n\n  const [themeManager, setThemeManager] =\n    useState<ThemeManager>(themeManagerApp);\n  const [theme, setTheme] = useState(GlobalThemes.Enterprise);\n  const setThemeContext = (incomingTheme: GlobalThemes) => {\n    themeManager.setTheme(incomingTheme);\n    setTheme(incomingTheme);\n  };\n\n  return (\n    <>\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"></link>\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"></link>\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Rampart+One&display=swap\"\n        rel=\"stylesheet\"\n      ></link>\n      <ThemeManagerContext.Provider\n        value={{ themeManager, theme, setThemeContext }}\n      >\n        <BrowserRouter>\n          <Switch>\n            <Route component={RenderComponent}></Route>\n          </Switch>\n        </BrowserRouter>\n      </ThemeManagerContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","C:\\Users\\Justin\\my-app\\src\\pages\\HomePage\\HomePage.tsx",[],"C:\\Users\\Justin\\my-app\\src\\components\\RenderComponent\\RenderComponent.tsx",["180","181","182","183","184","185"],"import React, { useMemo } from \"react\";\r\nimport { useContext, useState } from \"react\";\r\nimport { ThemeManagerContext } from \"../../App\";\r\nimport HomePage from \"../../pages/HomePage/HomePage\";\r\nimport DefaultTheme from \"../../pages/ThemeSwitcher/DefaultTheme\";\r\nimport DystopiaTheme from \"../../pages/ThemeSwitcher/DystopiaTheme\";\r\nimport EightiesTheme from \"../../pages/ThemeSwitcher/EightiesTheme\";\r\nimport SafariTheme from \"../../pages/ThemeSwitcher/SafariTheme\";\r\nimport SpookyTheme from \"../../pages/ThemeSwitcher/SpookyTheme\";\r\nimport ThemeSwitcher from \"../../pages/ThemeSwitcher/Themeswitcher\";\r\nimport ThemeManager, { GlobalThemes } from \"../../ThemeManager\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport \"./RenderComponent.scss\";\r\n\r\nconst RenderComponent = () => {\r\n  const { themeManager, theme, setThemeContext } =\r\n    useContext(ThemeManagerContext);\r\n  const getPage = useMemo(() => {\r\n    switch (theme) {\r\n      case GlobalThemes.Spooky:\r\n        return <SpookyTheme />;\r\n      case GlobalThemes.Safari:\r\n        return <SafariTheme />;\r\n      case GlobalThemes.Arcade:\r\n        return <EightiesTheme />;\r\n      case GlobalThemes.Dystopia:\r\n        return <DystopiaTheme />;\r\n      default:\r\n        return <DefaultTheme />;\r\n    }\r\n  }, [theme]);\r\n  return (\r\n    <div className={\"renderContainer \" + theme}>\r\n      <div className=\"leftContainer\">\r\n        <NavBar isVertical={true} />\r\n      </div>\r\n      <div className=\"rightContainer\">{getPage}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default RenderComponent;\r\n","C:\\Users\\Justin\\my-app\\src\\components\\NavBar\\NavBar.tsx",["186","187","188"],"import { useContext, useMemo, useState } from \"react\";\r\nimport { ThemeManagerContext } from \"../../App\";\r\nimport { GlobalThemes } from \"../../ThemeManager\";\r\nimport NavButton, { NavButtonOptions } from \"../NavButton/NavButton\";\r\nimport \"./NavBar.scss\";\r\nconst NavBar = ({ isVertical }: { isVertical?: boolean }) => {\r\n  const { themeManager, theme, setThemeContext } =\r\n    useContext(ThemeManagerContext);\r\n  const spookyNavButtons: string[] = [\"Skull\", \"Bat\", \"Pumpkin\"];\r\n  const safariNavButtons: string[] = [\"Sun\", \"Bug\", \"Paw\"];\r\n  const eightiesNavButtons: string[] = [\"Atari\", \"Invader\", \"Tama\"];\r\n  const dystopiaNavButtons: string[] = [\"Atari\", \"SportsEsports\", \"Tama\"];\r\n  const defaultNavButtons: string[] = [\"Home\", \"Themes\", \"Projects\"];\r\n  const [label, setLabel] = useState(\"Webpage\");\r\n  const [navButtons, setNavButtons] = useState<NavButtonOptions[]>([\r\n    { icon: \"Home\", label: \"Home\" },\r\n    {\r\n      icon: \"Themes\",\r\n      label: \"Themes Page\",\r\n      contextItems: [\r\n        {\r\n          icon: \"Projects\",\r\n          label: \"Enterprise\",\r\n          themeChanger: GlobalThemes.Enterprise,\r\n        },\r\n        {\r\n          icon: \"Bat\",\r\n          label: \"Haunted House\",\r\n          themeChanger: GlobalThemes.Spooky,\r\n        },\r\n        {\r\n          icon: \"Paw\",\r\n          label: \"Safari Learning\",\r\n          themeChanger: GlobalThemes.Safari,\r\n        },\r\n        {\r\n          icon: \"SportsEsports\",\r\n          label: \"80s Arcade\",\r\n          themeChanger: GlobalThemes.Arcade,\r\n        },\r\n        {\r\n          icon: \"Skull\",\r\n          label: \"Dystopia\",\r\n          themeChanger: GlobalThemes.Dystopia,\r\n        },\r\n      ],\r\n    },\r\n    { icon: \"Projects\", label: \"Projects\" },\r\n  ]);\r\n  const setIcons = (icons: string[]) => {\r\n    let tempButtons = navButtons;\r\n    icons.forEach((icon, i) => {\r\n      tempButtons[i][\"icon\"] = icon;\r\n    });\r\n    setNavButtons(tempButtons);\r\n  };\r\n  const getTheme = useMemo(() => {\r\n    switch (theme) {\r\n      case GlobalThemes.Spooky:\r\n        setLabel(\"Haunted House Tours\");\r\n        setIcons(spookyNavButtons);\r\n        break;\r\n      case GlobalThemes.Safari:\r\n        setLabel(\"Safari Learning Center\");\r\n        setIcons(safariNavButtons);\r\n        break;\r\n      case GlobalThemes.Arcade:\r\n        setLabel(\"80s Arcade\");\r\n        setIcons(eightiesNavButtons);\r\n        break;\r\n      case GlobalThemes.Dystopia:\r\n        setLabel(\"Dystopia\");\r\n        setIcons(dystopiaNavButtons);\r\n        break;\r\n      default:\r\n        setLabel(\"Enterprise\");\r\n        setIcons(defaultNavButtons);\r\n        break;\r\n    }\r\n    return theme;\r\n  }, [theme]);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"navBarContainer \" +\r\n        (isVertical ? \"vertical \" : \"horizontal \") +\r\n        getTheme\r\n      }\r\n    >\r\n      <div className=\"navBarLabel\">{label}</div>\r\n      {navButtons.map((y) => {\r\n        return <NavButton options={y} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default NavBar;\r\n","C:\\Users\\Justin\\my-app\\src\\components\\NavButton\\NavButton.tsx",[],"C:\\Users\\Justin\\my-app\\src\\components\\Icon\\Icon.tsx",["189","190","191","192"],"import SvgIcon from \"@material-ui/icons/Print\";\r\nimport { ReactComponent as Skull } from \"./skull.svg\";\r\nimport { ReactComponent as Bat } from \"./bat.svg\";\r\nimport { ReactComponent as Pumpkin } from \"./pumpkin.svg\";\r\nimport { ReactComponent as Atari } from \"./atari.svg\";\r\nimport { ReactComponent as Maze } from \"./maze.svg\";\r\nimport { ReactComponent as Tama } from \"./tama.svg\";\r\nimport { ReactComponent as Invader } from \"./invader.svg\";\r\nimport {\r\n  Folder,\r\n  Home,\r\n  ColorLens,\r\n  Pets,\r\n  BugReport,\r\n  WbSunny,\r\n  SportsEsports,\r\n  ArrowDropDown,\r\n} from \"@material-ui/icons\";\r\nimport { GlobalThemes } from \"../../ThemeManager\";\r\nimport { useContext } from \"react\";\r\nimport { ThemeManagerContext } from \"../../App\";\r\nconst GetIcon: any = {\r\n  Skull: Skull,\r\n  Bat: Bat,\r\n  Pumpkin: Pumpkin,\r\n  Home: Home,\r\n  Themes: ColorLens,\r\n  Projects: Folder,\r\n  Bug: BugReport,\r\n  Paw: Pets,\r\n  Sun: WbSunny,\r\n  Atari: Atari,\r\n  SportsEsports: SportsEsports,\r\n  Tama: Tama,\r\n  ArrowDropDown: ArrowDropDown,\r\n  Invader: Invader,\r\n};\r\nconst Icon = ({\r\n  icon,\r\n  onclick,\r\n  fontSize,\r\n  color,\r\n}: {\r\n  icon?: string;\r\n  onclick?: (e: any) => void;\r\n  fontSize?: number;\r\n  color?: GlobalThemes;\r\n}) => {\r\n  const { themeManager, theme, setThemeContext } =\r\n    useContext(ThemeManagerContext);\r\n  const myIcon = GetIcon[icon as string];\r\n  if (!myIcon) return <div></div>;\r\n  return (\r\n    <SvgIcon\r\n      onClick={(e: any) => {\r\n        return onclick ? onclick(e) : null;\r\n      }}\r\n      style={{\r\n        fontSize: fontSize === undefined ? 30 : fontSize,\r\n        color: color ?? \"\",\r\n      }}\r\n      component={myIcon}\r\n    ></SvgIcon>\r\n  );\r\n};\r\nexport default Icon;\r\n","C:\\Users\\Justin\\my-app\\src\\pages\\ThemeSwitcher\\Themeswitcher.tsx",["193"],"import { Select } from \"@material-ui/core\";\r\nimport { useMemo } from \"react\";\r\nimport { GlobalThemes } from \"../../ThemeManager\";\r\nimport DefaultTheme from \"./DefaultTheme\";\r\nimport DystopiaTheme from \"./DystopiaTheme\";\r\nimport EightiesTheme from \"./EightiesTheme\";\r\nimport SafariTheme from \"./SafariTheme\";\r\nimport SpookyTheme from \"./SpookyTheme\";\r\nimport \"./ThemeSwitcher.scss\";\r\nconst ThemeSwitcher = ({\r\n  theme,\r\n  setTheme,\r\n}: {\r\n  theme: GlobalThemes;\r\n  setTheme: any;\r\n}) => {\r\n  const handleTheme = (event: any) => {\r\n    setTheme(event.target.value);\r\n  };\r\n  const getPage = useMemo(() => {\r\n    switch (theme) {\r\n      case GlobalThemes.Spooky:\r\n        return <SpookyTheme setTheme={setTheme} />;\r\n      case GlobalThemes.Safari:\r\n        return <SafariTheme setTheme={setTheme} />;\r\n      case GlobalThemes.Arcade:\r\n        return <EightiesTheme setTheme={setTheme} />;\r\n      case GlobalThemes.Dystopia:\r\n        return <DystopiaTheme setTheme={setTheme} />;\r\n      default:\r\n        return <DefaultTheme setTheme={setTheme} />;\r\n    }\r\n  }, [theme]);\r\n  return (\r\n    <div className=\"themeSwitcherContainer\">\r\n      <Select native value={theme} onChange={handleTheme}>\r\n        <option value={GlobalThemes.Enterprise}>Default</option>\r\n        <option value={GlobalThemes.Spooky}>Spooky</option>\r\n        <option value={GlobalThemes.Safari}>Safari</option>\r\n        <option value={GlobalThemes.Arcade}>Eighties</option>\r\n        <option value={GlobalThemes.Dystopia}>Dystopia</option>\r\n      </Select>\r\n      {getPage}\r\n    </div>\r\n  );\r\n};\r\nexport default ThemeSwitcher;\r\n",["194","195"],"C:\\Users\\Justin\\my-app\\src\\pages\\ThemeSwitcher\\DefaultTheme.tsx",["196"],"import { GlobalThemes } from \"../../ThemeManager\";\r\n\r\nconst DefaultTheme = ({}: {}) => {\r\n  return (\r\n    <div className={\"contentContainer \" + GlobalThemes.Enterprise}>\r\n      <div className=\"pageLabel\">Default Page</div>\r\n    </div>\r\n  );\r\n};\r\nexport default DefaultTheme;\r\n","C:\\Users\\Justin\\my-app\\src\\pages\\ThemeSwitcher\\DystopiaTheme.tsx",["197"],"import { GlobalThemes } from \"../../ThemeManager\";\r\n\r\nconst DystopiaTheme = ({}: {}) => {\r\n  return (\r\n    <div className={\"contentContainer \" + GlobalThemes.Dystopia}>\r\n      <div className=\"pageLabelGlitch\">Dystopia Page</div>\r\n    </div>\r\n  );\r\n};\r\nexport default DystopiaTheme;\r\n","C:\\Users\\Justin\\my-app\\src\\pages\\ThemeSwitcher\\EightiesTheme.tsx",["198"],"import { GlobalThemes } from \"../../ThemeManager\";\r\n\r\nconst EightiesTheme = ({}: {}) => {\r\n  return (\r\n    <div className={\"contentContainer \" + GlobalThemes.Arcade}>\r\n      <div className=\"pageLabel\">Eighties Page</div>\r\n    </div>\r\n  );\r\n};\r\nexport default EightiesTheme;\r\n","C:\\Users\\Justin\\my-app\\src\\pages\\ThemeSwitcher\\SafariTheme.tsx",["199"],"import { GlobalThemes } from \"../../ThemeManager\";\r\n\r\nconst SafariTheme = ({}: {}) => {\r\n  return (\r\n    <div className={\"contentContainer \" + GlobalThemes.Safari}>\r\n      <div className=\"pageLabel\">Safari Page</div>\r\n    </div>\r\n  );\r\n};\r\nexport default SafariTheme;\r\n","C:\\Users\\Justin\\my-app\\src\\pages\\ThemeSwitcher\\SpookyTheme.tsx",["200"],"import { GlobalThemes } from \"../../ThemeManager\";\r\n\r\nconst SpookyTheme = ({}: {}) => {\r\n  return (\r\n    <div className={\"contentContainer \" + GlobalThemes.Spooky}>\r\n      <div className=\"pageLabel\">Spooky Page</div>\r\n    </div>\r\n  );\r\n};\r\nexport default SpookyTheme;\r\n","C:\\Users\\Justin\\my-app\\src\\ThemeManager.tsx",["201"],"import { useEffect, useState } from \"react\";\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  return windowDimensions;\r\n}\r\nexport interface componentSchema {\r\n  primaryColor: string;\r\n  secondaryColor: string;\r\n  teritaryColor: string;\r\n  borderColor: string;\r\n  titleText: string;\r\n  primaryText: string;\r\n  secondaryText: string;\r\n  placeholderText: string;\r\n  error: string;\r\n  primaryBackground: string;\r\n  secondaryBackground: string;\r\n  primaryTransparentBackground: string;\r\n  secondaryTransparentBackground: string;\r\n  successButton: string;\r\n  backButton: string;\r\n  optionButton: string;\r\n  switchOn: string;\r\n  switchOff: string;\r\n  fontXSmall: number;\r\n  fontSmall: number;\r\n  fontMedium: number;\r\n  fontLarge: number;\r\n  fontXLarge: number;\r\n  radiusSmall: number;\r\n  radiusMedium: number;\r\n  radiusLarge: number;\r\n  whiteBackground: string;\r\n  shadow: string;\r\n}\r\nexport interface colorSchema {\r\n  blueDark: string;\r\n  blueNormal: string;\r\n  blueLight: string;\r\n  redDarker: string;\r\n  redDark: string;\r\n  redNormal: string;\r\n  redLight: string;\r\n  redLighter: string;\r\n  yellowDark: string;\r\n  yellowNormal: string;\r\n  yellowLight: string;\r\n  orangeDark: string;\r\n  orangeMedium: string;\r\n  orangeLight: string;\r\n  greenDark: string;\r\n  greenNormal: string;\r\n  greenLight: string;\r\n  greenLighter: string;\r\n  darkDark: string;\r\n  darkNormal: string;\r\n  darkLight: string;\r\n  lightDark: string;\r\n  lightNormal: string;\r\n  lightLight: string;\r\n  purpleDarker: string;\r\n  purpleDark: string;\r\n  purpleNormal: string;\r\n  purpleLight: string;\r\n  purpleLighter: string;\r\n  background: string;\r\n  logoLight: string;\r\n  logoDark: string;\r\n  backgroundTransparent: string;\r\n  secondaryBackgroundTransparent: string;\r\n  fontXSmall: number;\r\n  fontSmall: number;\r\n  fontMedium: number;\r\n  fontLarge: number;\r\n  fontXLarge: number;\r\n  radiusSmall: number;\r\n  radiusMedium: number;\r\n  radiusLarge: number;\r\n  greenShadow: string;\r\n  shadow: string;\r\n  borderLight: string;\r\n}\r\nexport enum GlobalThemes {\r\n  Light = \"Light\",\r\n  Dark = \"Dark\",\r\n  Safari = \"Safari\",\r\n  Spooky = \"Spooky\",\r\n  Dystopia = \"Dystopia\",\r\n  Enterprise = \"Enterprise\",\r\n  Arcade = \"Arcade\",\r\n}\r\nclass ThemeManager {\r\n  isMobile: boolean;\r\n  phoneHeight: number;\r\n  phoneWidth: number;\r\n  currentTheme: componentSchema;\r\n  globalComponentThemes: Map<string, componentSchema>;\r\n  globalStyles: any;\r\n  themeName: GlobalThemes;\r\n  globalColors: colorSchema = {\r\n    blueDark: \"#3568d4\",\r\n    blueNormal: \"#3e7bfa\",\r\n    blueLight: \"#6698fa\",\r\n    redDarker: \"#4f0c0f\",\r\n    redDark: \"#81151a\",\r\n    redNormal: \"#cc1b24\",\r\n    redLight: \"#e8666d\",\r\n    redLighter: \"#edbbbe\",\r\n    yellowDark: \"#ffcc00\",\r\n    yellowNormal: \"#fddd48\",\r\n    yellowLight: \"#fded72\",\r\n    greenDark: \"#06c270\",\r\n    greenNormal: \"#39d98a\",\r\n    greenLight: \"#57eba1\",\r\n    greenLighter: \"#b5fbd8\",\r\n    orangeDark: \"#bf7008\",\r\n    orangeMedium: \"#fc9003\",\r\n    orangeLight: \"#f7ae4d\",\r\n    darkDark: \"#1C1C26\",\r\n    darkNormal: \"#262637\",\r\n    darkLight: \"#8f90a6\",\r\n    borderLight: \"#cccccc\",\r\n    lightDark: \"#ebebf0\",\r\n    lightNormal: \"#f2f2f5\",\r\n    logoDark: \"#05A660\",\r\n    logoLight: \"#3CE792\",\r\n    lightLight: \"#fafafc\",\r\n    purpleDarker: \"#371e3b\",\r\n    purpleDark: \"#613269\",\r\n    purpleNormal: \"#9d59a8\",\r\n    purpleLight: \"#de91eb\",\r\n    purpleLighter: \"#eec9f5\",\r\n    background: \"#FFFFFF\",\r\n    backgroundTransparent: \"rgba(255, 255, 255, 0.7)\",\r\n    secondaryBackgroundTransparent: \"rgba(222, 222, 255, 0.7)\",\r\n    fontXSmall: 10,\r\n    fontSmall: 15,\r\n    fontMedium: 20,\r\n    fontLarge: 25,\r\n    fontXLarge: 30,\r\n    radiusSmall: 5,\r\n    radiusMedium: 10,\r\n    radiusLarge: 15,\r\n    greenShadow:\r\n      \"0px 0px 2px rgba(87, 235, 161, 0.4), 0px 4px 8px rgba(87, 235, 161, 0.5);\",\r\n    shadow:\r\n      \"0px 0px 2px rgba(40, 41, 61, 0.04), 0px 4px 8px rgba(96, 97, 112, 0.16);\",\r\n  };\r\n  dystopiaComponentTheme: componentSchema = {\r\n    borderColor: this.globalColors.darkNormal,\r\n    primaryBackground: this.globalColors.redDark,\r\n    secondaryBackground: this.globalColors.redDarker,\r\n    primaryTransparentBackground: this.globalColors.backgroundTransparent,\r\n    secondaryTransparentBackground:\r\n      this.globalColors.secondaryBackgroundTransparent,\r\n    primaryColor: this.globalColors.redNormal,\r\n    secondaryColor: this.globalColors.redDark,\r\n    teritaryColor: this.globalColors.redLight,\r\n    titleText: this.globalColors.redLight,\r\n    primaryText: this.globalColors.lightNormal,\r\n    secondaryText: this.globalColors.lightDark,\r\n    placeholderText: this.globalColors.lightLight,\r\n\r\n    error: this.globalColors.yellowNormal,\r\n    successButton: this.globalColors.redLight,\r\n    backButton: this.globalColors.redLight,\r\n    optionButton: this.globalColors.orangeMedium,\r\n    switchOn: this.globalColors.orangeLight,\r\n    switchOff: this.globalColors.redDark,\r\n    whiteBackground: \"#ffffff\",\r\n    shadow: this.globalColors.shadow,\r\n\r\n    fontSmall: this.globalColors.fontSmall,\r\n    fontMedium: this.globalColors.fontMedium,\r\n    fontLarge: this.globalColors.fontLarge,\r\n    fontXSmall: this.globalColors.fontXSmall,\r\n    fontXLarge: this.globalColors.fontXLarge,\r\n    radiusLarge: this.globalColors.radiusLarge,\r\n    radiusMedium: this.globalColors.radiusMedium,\r\n    radiusSmall: this.globalColors.radiusSmall,\r\n  };\r\n  spookyComponentTheme: componentSchema = {\r\n    borderColor: this.globalColors.darkNormal,\r\n    primaryBackground: this.globalColors.purpleLighter,\r\n    secondaryBackground: this.globalColors.purpleDarker,\r\n    primaryTransparentBackground: this.globalColors.backgroundTransparent,\r\n    secondaryTransparentBackground:\r\n      this.globalColors.secondaryBackgroundTransparent,\r\n    primaryColor: this.globalColors.purpleNormal,\r\n    secondaryColor: this.globalColors.purpleDark,\r\n    teritaryColor: this.globalColors.purpleLight,\r\n    titleText: this.globalColors.purpleLighter,\r\n    primaryText: this.globalColors.lightNormal,\r\n    secondaryText: this.globalColors.lightDark,\r\n    placeholderText: this.globalColors.lightLight,\r\n\r\n    error: this.globalColors.yellowNormal,\r\n    successButton: this.globalColors.redLight,\r\n    backButton: this.globalColors.redLight,\r\n    optionButton: this.globalColors.orangeMedium,\r\n    switchOn: this.globalColors.orangeLight,\r\n    switchOff: this.globalColors.redDark,\r\n    whiteBackground: \"#ffffff\",\r\n    shadow: this.globalColors.shadow,\r\n\r\n    fontSmall: this.globalColors.fontSmall,\r\n    fontMedium: this.globalColors.fontMedium,\r\n    fontLarge: this.globalColors.fontLarge,\r\n    fontXSmall: this.globalColors.fontXSmall,\r\n    fontXLarge: this.globalColors.fontXLarge,\r\n    radiusLarge: this.globalColors.radiusLarge,\r\n    radiusMedium: this.globalColors.radiusMedium,\r\n    radiusSmall: this.globalColors.radiusSmall,\r\n  };\r\n  enterpriseComponentTheme: componentSchema = {\r\n    borderColor: this.globalColors.darkNormal,\r\n    primaryBackground: this.globalColors.lightLight,\r\n    secondaryBackground: this.globalColors.blueLight,\r\n    primaryTransparentBackground: this.globalColors.backgroundTransparent,\r\n    secondaryTransparentBackground:\r\n      this.globalColors.secondaryBackgroundTransparent,\r\n    primaryColor: this.globalColors.blueNormal,\r\n    secondaryColor: this.globalColors.blueDark,\r\n    teritaryColor: this.globalColors.lightLight,\r\n    titleText: this.globalColors.blueLight,\r\n    primaryText: this.globalColors.darkDark,\r\n    secondaryText: this.globalColors.darkNormal,\r\n    placeholderText: this.globalColors.darkLight,\r\n\r\n    error: this.globalColors.redNormal,\r\n    successButton: this.globalColors.greenNormal,\r\n    backButton: this.globalColors.redDark,\r\n    optionButton: this.globalColors.blueLight,\r\n    switchOn: this.globalColors.greenLight,\r\n    switchOff: this.globalColors.blueDark,\r\n    whiteBackground: \"#ffffff\",\r\n    shadow: this.globalColors.shadow,\r\n\r\n    fontSmall: this.globalColors.fontSmall,\r\n    fontMedium: this.globalColors.fontMedium,\r\n    fontLarge: this.globalColors.fontLarge,\r\n    fontXSmall: this.globalColors.fontXSmall,\r\n    fontXLarge: this.globalColors.fontXLarge,\r\n    radiusLarge: this.globalColors.radiusLarge,\r\n    radiusMedium: this.globalColors.radiusMedium,\r\n    radiusSmall: this.globalColors.radiusSmall,\r\n  };\r\n  arcadeComponentTheme: componentSchema = {\r\n    borderColor: this.globalColors.lightLight,\r\n    primaryBackground: this.globalColors.darkDark,\r\n    secondaryBackground: this.globalColors.purpleDarker,\r\n    primaryTransparentBackground: this.globalColors.backgroundTransparent,\r\n    secondaryTransparentBackground:\r\n      this.globalColors.secondaryBackgroundTransparent,\r\n    primaryColor: this.globalColors.purpleLight,\r\n    secondaryColor: this.globalColors.darkDark,\r\n    teritaryColor: this.globalColors.greenLight,\r\n    titleText: this.globalColors.purpleLight,\r\n    primaryText: this.globalColors.lightNormal,\r\n    secondaryText: this.globalColors.lightDark,\r\n    placeholderText: this.globalColors.lightLight,\r\n\r\n    error: this.globalColors.redNormal,\r\n    successButton: this.globalColors.greenNormal,\r\n    backButton: this.globalColors.redDark,\r\n    optionButton: this.globalColors.blueLight,\r\n    switchOn: this.globalColors.greenLight,\r\n    switchOff: this.globalColors.blueDark,\r\n    whiteBackground: \"#ffffff\",\r\n    shadow: this.globalColors.greenShadow,\r\n\r\n    fontSmall: this.globalColors.fontSmall,\r\n    fontMedium: this.globalColors.fontMedium,\r\n    fontLarge: this.globalColors.fontLarge,\r\n    fontXSmall: this.globalColors.fontXSmall,\r\n    fontXLarge: this.globalColors.fontXLarge,\r\n    radiusLarge: this.globalColors.radiusLarge,\r\n    radiusMedium: this.globalColors.radiusMedium,\r\n    radiusSmall: this.globalColors.radiusSmall,\r\n  };\r\n  safariComponentTheme: componentSchema = {\r\n    borderColor: this.globalColors.lightLight,\r\n    primaryBackground: this.globalColors.orangeLight,\r\n    secondaryBackground: this.globalColors.orangeDark,\r\n    primaryTransparentBackground: this.globalColors.backgroundTransparent,\r\n    secondaryTransparentBackground:\r\n      this.globalColors.secondaryBackgroundTransparent,\r\n    primaryColor: this.globalColors.yellowNormal,\r\n    secondaryColor: this.globalColors.orangeMedium,\r\n    teritaryColor: this.globalColors.yellowLight,\r\n    titleText: this.globalColors.yellowDark,\r\n    primaryText: this.globalColors.darkNormal,\r\n    secondaryText: this.globalColors.darkDark,\r\n    placeholderText: this.globalColors.darkLight,\r\n\r\n    error: this.globalColors.redNormal,\r\n    successButton: this.globalColors.greenNormal,\r\n    backButton: this.globalColors.redDark,\r\n    optionButton: this.globalColors.blueLight,\r\n    switchOn: this.globalColors.greenLight,\r\n    switchOff: this.globalColors.blueDark,\r\n    whiteBackground: \"#ffffff\",\r\n    shadow: this.globalColors.shadow,\r\n\r\n    fontSmall: this.globalColors.fontSmall,\r\n    fontMedium: this.globalColors.fontMedium,\r\n    fontLarge: this.globalColors.fontLarge,\r\n    fontXSmall: this.globalColors.fontXSmall,\r\n    fontXLarge: this.globalColors.fontXLarge,\r\n    radiusLarge: this.globalColors.radiusLarge,\r\n    radiusMedium: this.globalColors.radiusMedium,\r\n    radiusSmall: this.globalColors.radiusSmall,\r\n  };\r\n  constructor() {\r\n    this.globalComponentThemes = new Map<string, componentSchema>()\r\n      .set(GlobalThemes.Dystopia, this.dystopiaComponentTheme)\r\n      .set(GlobalThemes.Spooky, this.spookyComponentTheme)\r\n      .set(GlobalThemes.Enterprise, this.enterpriseComponentTheme)\r\n      .set(GlobalThemes.Arcade, this.arcadeComponentTheme)\r\n      .set(GlobalThemes.Safari, this.safariComponentTheme);\r\n    this.phoneHeight = window.innerHeight;\r\n    this.phoneWidth = window.innerWidth;\r\n    this.isMobile = this.checkMobile();\r\n    this.currentTheme = this.dystopiaComponentTheme; //This is to silence needing an initializer\r\n    this.themeName = GlobalThemes.Dystopia;\r\n    //this.setTheme(GlobalThemes.Dystopia); /// This is where you set the Theme\r\n  }\r\n  checkMobile = () => {\r\n    if (typeof document != \"undefined\") {\r\n      return false;\r\n    } else if (\r\n      typeof navigator != \"undefined\" &&\r\n      navigator.product == \"ReactNative\"\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  setTheme = (theme: GlobalThemes) => {\r\n    this.themeName = theme;\r\n    this.currentTheme =\r\n      this.globalComponentThemes.get(theme) ?? this.dystopiaComponentTheme;\r\n\r\n    document.body.classList.remove(\r\n      GlobalThemes.Enterprise,\r\n      GlobalThemes.Spooky,\r\n      GlobalThemes.Safari,\r\n      GlobalThemes.Arcade,\r\n      GlobalThemes.Dystopia\r\n    );\r\n    document.body.classList.add(theme);\r\n    var sheet = window.document.styleSheets[0];\r\n    sheet.insertRule(this.getCssTheme(theme), sheet.cssRules.length);\r\n  };\r\n  cssStringArray = [\r\n    \"--theme-primary\",\r\n    \"--theme-secondary\",\r\n    \"--theme-teritary\",\r\n    \"--theme-border\",\r\n    \"--theme-text-title\",\r\n    \"--theme-text-primary\",\r\n    \"--theme-text-secondary\",\r\n    \"--theme-text-placeholder\",\r\n    \"--theme-text-error\",\r\n    \"--theme-primary-background\",\r\n    \"--theme-secondary-background\",\r\n    \"--theme-primary-background-transparent\",\r\n    \"--theme-secondary-background-transparent\",\r\n    \"--theme-button-success\",\r\n    \"--theme-button-back\",\r\n    \"--theme-button-option\",\r\n    \"--theme-white-background\",\r\n    \"--theme-shadow\",\r\n  ];\r\n  getCssTheme = (theme: GlobalThemes) => {\r\n    return (\r\n      `:root{` +\r\n      `--theme: ` +\r\n      theme.toString() +\r\n      `;\r\n    --theme-primary:` +\r\n      this.currentTheme.primaryColor +\r\n      \";\" +\r\n      `--theme-secondary:` +\r\n      this.currentTheme.secondaryColor +\r\n      \";\" +\r\n      `--theme-teritary:` +\r\n      this.currentTheme.teritaryColor +\r\n      \";\" +\r\n      `--theme-border:` +\r\n      this.currentTheme.borderColor +\r\n      \";\" +\r\n      `--theme-text-title:` +\r\n      this.currentTheme.titleText +\r\n      \";\" +\r\n      `--theme-text-primary:` +\r\n      this.currentTheme.primaryText +\r\n      \";\" +\r\n      `--theme-text-secondary:` +\r\n      this.currentTheme.secondaryText +\r\n      \";\" +\r\n      `--theme-text-placeholder:` +\r\n      this.currentTheme.placeholderText +\r\n      \";\" +\r\n      `--theme-error:` +\r\n      this.currentTheme.error +\r\n      \";\" +\r\n      `--theme-primary-background:` +\r\n      this.currentTheme.primaryBackground +\r\n      \";\" +\r\n      `--theme-secondary-background:` +\r\n      this.currentTheme.secondaryBackground +\r\n      \";\" +\r\n      `--theme-primary-background-transparent:` +\r\n      this.currentTheme.primaryTransparentBackground +\r\n      \";\" +\r\n      `--theme-secondary-background-transparent: ` +\r\n      this.currentTheme.secondaryTransparentBackground +\r\n      \";\" +\r\n      `--theme-button-success:` +\r\n      this.currentTheme.successButton +\r\n      \";\" +\r\n      `--theme-button-back:` +\r\n      this.currentTheme.backButton +\r\n      \";\" +\r\n      `--theme-button-option:` +\r\n      this.currentTheme.optionButton +\r\n      \";\" +\r\n      `--theme-white-background:` +\r\n      this.currentTheme.whiteBackground +\r\n      \";\" +\r\n      `--theme-shadow:` +\r\n      this.currentTheme.shadow +\r\n      \";\" +\r\n      \"}\"\r\n    );\r\n  };\r\n}\r\nexport default ThemeManager;\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\index.tsx",[],["202","203"],"C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\reportWebVitals.ts",[],"C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\App.tsx",["204","205","206","207"],"import \"./App.css\";\r\nimport \"./styles.scss\";\r\nimport { Route, Redirect, Routes, BrowserRouter } from \"react-router-dom\";\r\nimport RenderComponent from \"./components/RenderComponent/RenderComponent\";\r\nimport { useState } from \"react\";\r\nimport ThemeManager, { GlobalThemes } from \"./ThemeManager\";\r\nimport React from \"react\";\r\nexport const ThemeManagerContext = React.createContext<any>(undefined);\r\nconst themeManagerApp = new ThemeManager();\r\nconst App = () => {\r\n  const findMedianSortedArrays = (nums1: number[], nums2: number[]): number => {\r\n    let mergeArray = [...nums1, ...nums2];\r\n    let sortedArray = mergeArray.sort();\r\n    let length = mergeArray.length;\r\n    if (length === 1) {\r\n      return mergeArray[0];\r\n    } else if (length % 2 === 0) {\r\n      console.log((mergeArray[length / 2 - 1] + mergeArray[length / 2]) / 2);\r\n      return (mergeArray[length / 2] + mergeArray[length / 2 + 1]) / 2;\r\n    } else {\r\n      console.log(mergeArray[length / 2 - 0.5]);\r\n      return mergeArray[length / 2 - 0.5];\r\n    }\r\n  };\r\n  //findMedianSortedArrays([2, 3], [1, 4, 10]);\r\n\r\n  const [themeManager, setThemeManager] =\r\n    useState<ThemeManager>(themeManagerApp);\r\n  const [theme, setTheme] = useState(GlobalThemes.Resume);\r\n  const setThemeContext = (incomingTheme: GlobalThemes) => {\r\n    themeManager.setTheme(incomingTheme);\r\n    setTheme(incomingTheme);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"></link>\r\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"></link>\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css2?family=Rampart+One&display=swap\"\r\n        rel=\"stylesheet\"\r\n      ></link>\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css2?family=Luxurious+Roman&display=swap\"\r\n        rel=\"stylesheet\"\r\n      ></link>\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css2?family=Jura:wght@700&display=swap\"\r\n        rel=\"stylesheet\"\r\n      ></link>\r\n      <ThemeManagerContext.Provider\r\n        value={{ themeManager, theme, setThemeContext }}\r\n      >\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              element={<RenderComponent url={GlobalThemes.Resume} />}\r\n            />\r\n            <Route\r\n              path={\"/\" + GlobalThemes.Resume}\r\n              element={<RenderComponent url={GlobalThemes.Resume} />}\r\n            />\r\n            <Route\r\n              path={\"/\" + GlobalThemes.Contact}\r\n              element={<RenderComponent url={GlobalThemes.Contact} />}\r\n            />\r\n            <Route\r\n              path={\"/\" + GlobalThemes.Sales}\r\n              element={<RenderComponent url={GlobalThemes.Sales} />}\r\n            />\r\n            <Route\r\n              path={\"/\" + GlobalThemes.Spooky}\r\n              element={<RenderComponent url={GlobalThemes.Spooky} />}\r\n            />\r\n            <Route\r\n              path={\"/\" + GlobalThemes.Enterprise}\r\n              element={<RenderComponent url={GlobalThemes.Enterprise} />}\r\n            />\r\n            <Route\r\n              path={\"/\" + GlobalThemes.Test}\r\n              element={<RenderComponent url={GlobalThemes.Test} />}\r\n            />\r\n            <Route\r\n              path=\"*\"\r\n              element={<RenderComponent url={GlobalThemes.Resume} />}\r\n            />\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </ThemeManagerContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\ThemeManager.tsx",["208","209"],"import { useEffect, useState } from \"react\";\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\nexport const mobileWidth = 1000;\r\nexport function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  return {\r\n    width: windowDimensions.width,\r\n    height: windowDimensions.height,\r\n    isMobile: windowDimensions.width <= mobileWidth,\r\n  };\r\n}\r\nexport interface componentSchema {\r\n  //Primaries\r\n  primary: string;\r\n  secondary: string;\r\n  teritary: string;\r\n  //Backgrounds\r\n  primaryBackground: string;\r\n  secondaryBackground: string;\r\n  primaryBackgroundTransparent: string;\r\n  secondaryBackgroundTransparent: string;\r\n  //Text Colors\r\n  textTitle: string;\r\n  textPrimary: string;\r\n  textSecondary: string;\r\n  textTeritary: string;\r\n  textPlaceholder: string;\r\n  //Statuses\r\n  error: string;\r\n  success: string;\r\n  warning: string;\r\n  info: string;\r\n  //Buttons\r\n  primaryButton: string;\r\n  primaryButtonText: string;\r\n  secondaryButton: string;\r\n  secondaryButtonText: string;\r\n  successButton: string;\r\n  successButtonText: string;\r\n  cancelButton: string;\r\n  cancelButtonText: string;\r\n  deleteButton: string;\r\n  deleteButtonText: string;\r\n  disabledButton: string;\r\n  disabledButtonText: string;\r\n  //Others\r\n  shadowLight: string;\r\n  shadowDark: string;\r\n  border: string;\r\n  font: string;\r\n}\r\nexport interface colorSchema {\r\n  white: string;\r\n  black: string;\r\n  blueDark: string;\r\n  blueNormal: string;\r\n  blueLight: string;\r\n  blueLighter: string;\r\n  redDarker: string;\r\n  redDark: string;\r\n  redNormal: string;\r\n  redLight: string;\r\n  redLighter: string;\r\n  yellowDark: string;\r\n  yellowNormal: string;\r\n  yellowLight: string;\r\n  orangeDark: string;\r\n  orangeMedium: string;\r\n  orangeLight: string;\r\n  greenDark: string;\r\n  greenNormal: string;\r\n  greenLight: string;\r\n  greenLighter: string;\r\n  darkDark: string;\r\n  darkNormal: string;\r\n  darkLight: string;\r\n  lightDark: string;\r\n  lightNormal: string;\r\n  lightLight: string;\r\n  purpleDarker: string;\r\n  purpleDark: string;\r\n  purpleNormal: string;\r\n  purpleLight: string;\r\n  purpleLighter: string;\r\n  greyDarker: string;\r\n  greyDark: string;\r\n  greyNormal: string;\r\n  greyLight: string;\r\n  greyLighter: string;\r\n  background: string;\r\n  logoLight: string;\r\n  logoDark: string;\r\n  backgroundTransparent: string;\r\n  secondaryBackgroundTransparent: string;\r\n  fontXSmall: number;\r\n  fontSmall: number;\r\n  fontMedium: number;\r\n  fontLarge: number;\r\n  fontXLarge: number;\r\n  radiusSmall: number;\r\n  radiusMedium: number;\r\n  radiusLarge: number;\r\n  greenShadow: string;\r\n  shadow: string;\r\n  darkGreyShadow: string;\r\n  borderLight: string;\r\n  font: string;\r\n  shadowLight: string;\r\n  shadowDark: string;\r\n}\r\nexport enum GlobalThemes {\r\n  Resume = \"Resume\",\r\n  Projects = \"Projects\",\r\n  Contact = \"Contact\",\r\n  Safari = \"Safari\",\r\n  Spooky = \"Spooky\",\r\n  Dystopia = \"Dystopia\",\r\n  Enterprise = \"Enterprise\",\r\n  Arcade = \"Arcade\",\r\n  Sales = \"Sales\",\r\n  Test = \"Test\",\r\n}\r\nexport interface ComponentSizingSchema {\r\n  fontXSmall: number;\r\n  fontSmall: number;\r\n  fontMedium: number;\r\n  fontLarge: number;\r\n  fontXLarge: number;\r\n  radiusSmall: number;\r\n  radiusMedium: number;\r\n  radiusLarge: number;\r\n  font: string;\r\n}\r\nclass ThemeManager {\r\n  isMobile: boolean;\r\n  phoneHeight: number;\r\n  phoneWidth: number;\r\n  currentTheme: componentSchema;\r\n  globalComponentThemes: Map<string, componentSchema>;\r\n  globalStyles: any;\r\n  themeName: GlobalThemes;\r\n  previousThemeName: GlobalThemes;\r\n  globalSizes: ComponentSizingSchema = {\r\n    fontXSmall: 12,\r\n    fontSmall: 16,\r\n    fontMedium: 18,\r\n    fontLarge: 24,\r\n    fontXLarge: 48,\r\n    radiusSmall: 4,\r\n    radiusMedium: 8,\r\n    radiusLarge: 12,\r\n    font: `'Poppins', sans-serif`,\r\n  };\r\n  globalColors: colorSchema = {\r\n    white: \"#ffffff\",\r\n    black: \"#333\",\r\n    blueDark: \"#3568d4\",\r\n    blueNormal: \"#03adfc\",\r\n    blueLight: \"#52a5ff\",\r\n    blueLighter: \"#abfbff\",\r\n    redDarker: \"#4f0c0f\",\r\n    redDark: \"#81151a\",\r\n    redNormal: \"#cc1b24\",\r\n    redLight: \"#e8666d\",\r\n    redLighter: \"#edbbbe\",\r\n    yellowDark: \"#ffcc00\",\r\n    yellowNormal: \"#fddd48\",\r\n    yellowLight: \"#fded72\",\r\n    greenDark: \"#06c270\",\r\n    greenNormal: \"#39d98a\",\r\n    greenLight: \"#57eba1\",\r\n    greenLighter: \"#b5fbd8\",\r\n    orangeDark: \"#bf7008\",\r\n    orangeMedium: \"#fc9003\",\r\n    orangeLight: \"#f7ae4d\",\r\n    darkDark: \"#1C1C26\",\r\n    darkNormal: \"#262637\",\r\n    darkLight: \"#8f90a6\",\r\n    borderLight: \"#cccccc\",\r\n    lightDark: \"#ebebf0\",\r\n    lightNormal: \"#f2f2f5\",\r\n    logoDark: \"#05A660\",\r\n    logoLight: \"#3CE792\",\r\n    lightLight: \"#fafafc\",\r\n    purpleDarker: \"#371e3b\",\r\n    purpleDark: \"#49284f\",\r\n    purpleNormal: \"#b13ac7\",\r\n    purpleLight: \"#de91eb\",\r\n    purpleLighter: \"#eec9f5\",\r\n    greyDarker: \"rgba(16, 17, 20, .9)\",\r\n    greyDark: \"rgba(46, 49, 56, .8)\",\r\n    greyNormal: \"rgba(61,68,78,.8)\",\r\n    greyLight: \"#b5b5b5\",\r\n    greyLighter: \"#e8e8e8\",\r\n    background: \"#FFFFFF\",\r\n    backgroundTransparent: \"rgba(255, 255, 255, 0.7)\",\r\n    secondaryBackgroundTransparent: \"rgba(222, 222, 255, 0.7)\",\r\n    fontXSmall: 8,\r\n    fontSmall: 12,\r\n    fontMedium: 16,\r\n    fontLarge: 24,\r\n    fontXLarge: 32,\r\n    radiusSmall: 4,\r\n    radiusMedium: 8,\r\n    radiusLarge: 12,\r\n    greenShadow:\r\n      \"0px 0px 2px rgba(87, 235, 161, 0.4), 0px 4px 8px rgba(87, 235, 161, 0.5);\",\r\n    shadow:\r\n      \"0px 0px 2px rgba(40, 41, 61, 0.04), 0px 4px 8px rgba(96, 97, 112, 0.16);\",\r\n    darkGreyShadow:\r\n      \"0px 0px 2px rgba(16, 17, 20, 0.08), 0px 4px 8px rgba(16, 17, 20, 0.32);\",\r\n    font: `'Nightscary Free Trial', sans-serif`,\r\n    shadowLight:\r\n      \"0px 0px 2px rgba(40, 41, 61, 0.04), 0px 4px 8px rgba(96, 97, 112, 0.16);\",\r\n    shadowDark:\r\n      \"0px 0px 2px rgba(40, 41, 61, 0.12), 0px 4px 8px rgba(96, 97, 112, 0.32);\",\r\n  };\r\n  dystopiaComponentTheme: componentSchema = {\r\n    //Primaries\r\n    primary: this.globalColors.redNormal,\r\n    secondary: this.globalColors.redDark,\r\n    teritary: this.globalColors.redLight,\r\n    //Backgrounds\r\n    primaryBackground: this.globalColors.redDark,\r\n    secondaryBackground: this.globalColors.redDarker,\r\n    primaryBackgroundTransparent: this.globalColors.backgroundTransparent,\r\n    secondaryBackgroundTransparent:\r\n      this.globalColors.secondaryBackgroundTransparent,\r\n    //Text Colors\r\n    textTitle: this.globalColors.redLight,\r\n    textPrimary: this.globalColors.lightNormal,\r\n    textSecondary: this.globalColors.lightDark,\r\n    textTeritary: this.globalColors.lightDark,\r\n    textPlaceholder: this.globalColors.lightLight,\r\n    //Buttons\r\n    primaryButton: \"#333\",\r\n    primaryButtonText: this.globalColors.white,\r\n    secondaryButton: this.globalColors.redDark,\r\n    secondaryButtonText: this.globalColors.white,\r\n    successButton: this.globalColors.greenDark,\r\n    successButtonText: this.globalColors.white,\r\n    cancelButton: this.globalColors.greenDark,\r\n    cancelButtonText: this.globalColors.greenDark,\r\n    deleteButton: this.globalColors.greenDark,\r\n    deleteButtonText: this.globalColors.greenDark,\r\n    disabledButton: this.globalColors.greenDark,\r\n    disabledButtonText: this.globalColors.greenDark,\r\n    //Statuses\r\n    error: this.globalColors.redNormal,\r\n    success: this.globalColors.greenNormal,\r\n    warning: this.globalColors.yellowNormal,\r\n    info: this.globalColors.blueNormal,\r\n    //Other\r\n    shadowLight: this.globalColors.shadowLight,\r\n    shadowDark: this.globalColors.shadowDark,\r\n    border: this.globalColors.darkNormal,\r\n    font: \"'Poppins', sans-serif\",\r\n  };\r\n  spookyComponentTheme: componentSchema = {\r\n    //Primaries\r\n    primary: \"#900aa8\",\r\n    secondary: \"#4f194b\",\r\n    teritary: \"#ad11a0\",\r\n    //Backgrounds\r\n    primaryBackground: \"#eec9f5\",\r\n    secondaryBackground: \"#260a24\",\r\n    primaryBackgroundTransparent: this.globalColors.backgroundTransparent,\r\n    secondaryBackgroundTransparent: \"rgba(23, 6, 26, .9)\",\r\n    //Text Colors\r\n    textTitle: this.globalColors.white,\r\n    textPrimary: this.globalColors.purpleLighter,\r\n    textSecondary: this.globalColors.purpleLight,\r\n    textTeritary: this.globalColors.lightDark,\r\n    textPlaceholder: this.globalColors.lightLight,\r\n    //Buttons\r\n    primaryButton: this.globalColors.white,\r\n    primaryButtonText: this.globalColors.darkDark,\r\n    secondaryButton: this.globalColors.purpleLight,\r\n    secondaryButtonText: this.globalColors.white,\r\n    successButton: this.globalColors.greenDark,\r\n    successButtonText: this.globalColors.white,\r\n    cancelButton: this.globalColors.greenDark,\r\n    cancelButtonText: this.globalColors.greenDark,\r\n    deleteButton: this.globalColors.greenDark,\r\n    deleteButtonText: this.globalColors.greenDark,\r\n    disabledButton: this.globalColors.greenDark,\r\n    disabledButtonText: this.globalColors.greenDark,\r\n    //Statuses\r\n    error: this.globalColors.redNormal,\r\n    success: this.globalColors.greenNormal,\r\n    warning: this.globalColors.yellowNormal,\r\n    info: this.globalColors.blueNormal,\r\n    //Other\r\n    shadowLight: this.globalColors.shadowLight,\r\n    shadowDark: this.globalColors.shadowDark,\r\n    border: this.globalColors.darkNormal,\r\n    font: \"'Poppins', sans-serif\",\r\n  };\r\n  enterpriseComponentTheme: componentSchema = {\r\n    //Primaries\r\n    primary: this.globalColors.blueNormal,\r\n    secondary: this.globalColors.blueDark,\r\n    teritary: \"#00d8e3\",\r\n    //Backgrounds\r\n    primaryBackground: this.globalColors.white,\r\n    secondaryBackground: this.globalColors.greyLighter,\r\n    primaryBackgroundTransparent: this.globalColors.backgroundTransparent,\r\n    secondaryBackgroundTransparent:\r\n      this.globalColors.secondaryBackgroundTransparent,\r\n    //Text Colors\r\n    textTitle: this.globalColors.blueNormal,\r\n    textPrimary: \"#00d8e3\",\r\n    textSecondary: this.globalColors.darkNormal,\r\n    textTeritary: this.globalColors.blueLight,\r\n    textPlaceholder: this.globalColors.greyLight,\r\n    //Buttons\r\n    primaryButton: this.globalColors.blueDark,\r\n    primaryButtonText: this.globalColors.white,\r\n    secondaryButton: this.globalColors.blueNormal,\r\n    secondaryButtonText: this.globalColors.white,\r\n    successButton: this.globalColors.greenDark,\r\n    successButtonText: this.globalColors.white,\r\n    cancelButton: this.globalColors.greenDark,\r\n    cancelButtonText: this.globalColors.greenDark,\r\n    deleteButton: this.globalColors.greenDark,\r\n    deleteButtonText: this.globalColors.greenDark,\r\n    disabledButton: this.globalColors.greenDark,\r\n    disabledButtonText: this.globalColors.greenDark,\r\n    //Statuses\r\n    error: this.globalColors.redNormal,\r\n    success: this.globalColors.greenNormal,\r\n    warning: this.globalColors.yellowNormal,\r\n    info: this.globalColors.blueNormal,\r\n    //Other\r\n    shadowLight: this.globalColors.shadowLight,\r\n    shadowDark: this.globalColors.shadowDark,\r\n    border: this.globalColors.greyLighter,\r\n    font: \"'Poppins', sans-serif\",\r\n  };\r\n  arcadeComponentTheme: componentSchema = {\r\n    //Primaries\r\n    primary: this.globalColors.redNormal,\r\n    secondary: this.globalColors.redDark,\r\n    teritary: this.globalColors.redLight,\r\n    //Backgrounds\r\n    primaryBackground: this.globalColors.redDark,\r\n    secondaryBackground: this.globalColors.redDarker,\r\n    primaryBackgroundTransparent: this.globalColors.backgroundTransparent,\r\n    secondaryBackgroundTransparent:\r\n      this.globalColors.secondaryBackgroundTransparent,\r\n    //Text Colors\r\n    textTitle: this.globalColors.redLight,\r\n    textPrimary: this.globalColors.lightNormal,\r\n    textSecondary: this.globalColors.lightDark,\r\n    textTeritary: this.globalColors.lightDark,\r\n    textPlaceholder: this.globalColors.lightLight,\r\n    //Buttons\r\n    primaryButton: \"#333\",\r\n    primaryButtonText: this.globalColors.white,\r\n    secondaryButton: this.globalColors.redDark,\r\n    secondaryButtonText: this.globalColors.white,\r\n    successButton: this.globalColors.greenDark,\r\n    successButtonText: this.globalColors.white,\r\n    cancelButton: this.globalColors.greenDark,\r\n    cancelButtonText: this.globalColors.greenDark,\r\n    deleteButton: this.globalColors.greenDark,\r\n    deleteButtonText: this.globalColors.greenDark,\r\n    disabledButton: this.globalColors.greenDark,\r\n    disabledButtonText: this.globalColors.greenDark,\r\n    //Statuses\r\n    error: this.globalColors.redNormal,\r\n    success: this.globalColors.greenNormal,\r\n    warning: this.globalColors.yellowNormal,\r\n    info: this.globalColors.blueNormal,\r\n    //Other\r\n    shadowLight: this.globalColors.shadowLight,\r\n    shadowDark: this.globalColors.shadowDark,\r\n    border: this.globalColors.darkNormal,\r\n    font: \"'Poppins', sans-serif\",\r\n  };\r\n  safariComponentTheme: componentSchema = {\r\n    //Primaries\r\n    primary: this.globalColors.redNormal,\r\n    secondary: this.globalColors.redDark,\r\n    teritary: this.globalColors.redLight,\r\n    //Backgrounds\r\n    primaryBackground: this.globalColors.redDark,\r\n    secondaryBackground: this.globalColors.redDarker,\r\n    primaryBackgroundTransparent: this.globalColors.backgroundTransparent,\r\n    secondaryBackgroundTransparent:\r\n      this.globalColors.secondaryBackgroundTransparent,\r\n    //Text Colors\r\n    textTitle: this.globalColors.redLight,\r\n    textPrimary: this.globalColors.lightNormal,\r\n    textSecondary: this.globalColors.lightDark,\r\n    textTeritary: this.globalColors.lightDark,\r\n    textPlaceholder: this.globalColors.lightLight,\r\n    //Buttons\r\n    primaryButton: \"#333\",\r\n    primaryButtonText: this.globalColors.white,\r\n    secondaryButton: this.globalColors.redDark,\r\n    secondaryButtonText: this.globalColors.white,\r\n    successButton: this.globalColors.greenDark,\r\n    successButtonText: this.globalColors.white,\r\n    cancelButton: this.globalColors.greenDark,\r\n    cancelButtonText: this.globalColors.greenDark,\r\n    deleteButton: this.globalColors.greenDark,\r\n    deleteButtonText: this.globalColors.greenDark,\r\n    disabledButton: this.globalColors.greenDark,\r\n    disabledButtonText: this.globalColors.greenDark,\r\n    //Statuses\r\n    error: this.globalColors.redNormal,\r\n    success: this.globalColors.greenNormal,\r\n    warning: this.globalColors.yellowNormal,\r\n    info: this.globalColors.blueNormal,\r\n    //Other\r\n    shadowLight: this.globalColors.shadowLight,\r\n    shadowDark: this.globalColors.shadowDark,\r\n    border: this.globalColors.darkNormal,\r\n    font: \"'Poppins', sans-serif\",\r\n  };\r\n  salesComponentTheme: componentSchema = {\r\n    //Primaries\r\n    primary: \"#ffd5fd\",\r\n    secondary: \"#59cdff\",\r\n    teritary: \"#b0fbff\",\r\n    //Backgrounds\r\n    primaryBackground: this.globalColors.white,\r\n    secondaryBackground: \"#ffedff\",\r\n    primaryBackgroundTransparent: this.globalColors.backgroundTransparent,\r\n    secondaryBackgroundTransparent:\r\n      this.globalColors.secondaryBackgroundTransparent,\r\n    //Text Colors\r\n    textTitle: \"#976b2b\",\r\n    textPrimary: \"#d12584\",\r\n    textSecondary: this.globalColors.darkNormal,\r\n    textTeritary: \"#b0fbff\",\r\n    textPlaceholder: this.globalColors.greyLight,\r\n    //Buttons\r\n    primaryButton: this.globalColors.blueDark,\r\n    primaryButtonText: this.globalColors.white,\r\n    secondaryButton: this.globalColors.blueNormal,\r\n    secondaryButtonText: this.globalColors.white,\r\n    successButton: this.globalColors.greenDark,\r\n    successButtonText: this.globalColors.white,\r\n    cancelButton: this.globalColors.greenDark,\r\n    cancelButtonText: this.globalColors.greenDark,\r\n    deleteButton: this.globalColors.greenDark,\r\n    deleteButtonText: this.globalColors.greenDark,\r\n    disabledButton: this.globalColors.greenDark,\r\n    disabledButtonText: this.globalColors.greenDark,\r\n    //Statuses\r\n    error: this.globalColors.redNormal,\r\n    success: this.globalColors.greenNormal,\r\n    warning: this.globalColors.yellowNormal,\r\n    info: this.globalColors.blueNormal,\r\n    //Other\r\n    shadowLight: this.globalColors.shadowLight,\r\n    shadowDark: this.globalColors.shadowDark,\r\n    border: this.globalColors.greyLighter,\r\n    font: \"'Poppins', sans-serif\",\r\n  };\r\n  mainComponentTheme: componentSchema = {\r\n    //Primaries\r\n    primary: this.globalColors.redNormal,\r\n    secondary: \"#5d1ca9\",\r\n    teritary: \"#9f8ffb\",\r\n    //Backgrounds\r\n    primaryBackground: this.globalColors.white,\r\n    secondaryBackground: \"#5d1ca9\",\r\n    primaryBackgroundTransparent: this.globalColors.backgroundTransparent,\r\n    secondaryBackgroundTransparent: \"#3b17cb\",\r\n    //Text Colors\r\n    textTitle: \"#5d1ca9\",\r\n    textPrimary: \"#9f8ffb\",\r\n    textSecondary: this.globalColors.purpleLight,\r\n    textTeritary: \"#6714CF\",\r\n    textPlaceholder: this.globalColors.lightLight,\r\n    //Buttons\r\n    primaryButton: \"#6714CF\",\r\n    primaryButtonText: this.globalColors.white,\r\n    secondaryButton: \"#5d1ca9\",\r\n    secondaryButtonText: this.globalColors.white,\r\n    successButton: this.globalColors.greenDark,\r\n    successButtonText: this.globalColors.white,\r\n    cancelButton: this.globalColors.greenDark,\r\n    cancelButtonText: this.globalColors.greenDark,\r\n    deleteButton: this.globalColors.greenDark,\r\n    deleteButtonText: this.globalColors.greenDark,\r\n    disabledButton: this.globalColors.greenDark,\r\n    disabledButtonText: this.globalColors.greenDark,\r\n    //Statuses\r\n    error: this.globalColors.redNormal,\r\n    success: this.globalColors.greenNormal,\r\n    warning: this.globalColors.yellowNormal,\r\n    info: this.globalColors.blueNormal,\r\n    //Other\r\n    shadowLight: this.globalColors.shadowLight,\r\n    shadowDark: this.globalColors.shadowDark,\r\n    border: this.globalColors.darkNormal,\r\n    font: \"'Poppins', sans-serif\",\r\n  };\r\n  constructor() {\r\n    this.globalComponentThemes = new Map<string, componentSchema>()\r\n      .set(GlobalThemes.Dystopia, this.dystopiaComponentTheme)\r\n      .set(GlobalThemes.Spooky, this.spookyComponentTheme)\r\n      .set(GlobalThemes.Enterprise, this.enterpriseComponentTheme)\r\n      .set(GlobalThemes.Arcade, this.arcadeComponentTheme)\r\n      .set(GlobalThemes.Safari, this.safariComponentTheme)\r\n      .set(GlobalThemes.Resume, this.mainComponentTheme)\r\n      .set(GlobalThemes.Contact, this.mainComponentTheme)\r\n      .set(GlobalThemes.Projects, this.mainComponentTheme)\r\n      .set(GlobalThemes.Sales, this.salesComponentTheme);\r\n\r\n    this.phoneHeight = window.innerHeight;\r\n    this.phoneWidth = window.innerWidth;\r\n    this.isMobile = this.checkMobile();\r\n    this.currentTheme = this.mainComponentTheme; //This is to silence needing an initializer\r\n    this.themeName = GlobalThemes.Resume;\r\n    this.previousThemeName = GlobalThemes.Arcade;\r\n    this.setTheme(GlobalThemes.Resume); /// This is where you set the Theme\r\n  }\r\n  checkMobile = () => {\r\n    if (typeof document != \"undefined\") {\r\n      return false;\r\n    } else if (\r\n      typeof navigator != \"undefined\" &&\r\n      navigator.product == \"ReactNative\"\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  setTheme = (theme: GlobalThemes) => {\r\n    this.themeName = theme;\r\n    this.currentTheme =\r\n      this.globalComponentThemes.get(theme) ?? this.dystopiaComponentTheme;\r\n\r\n    document.body.classList.remove(\r\n      GlobalThemes.Enterprise,\r\n      GlobalThemes.Spooky,\r\n      GlobalThemes.Safari,\r\n      GlobalThemes.Arcade,\r\n      GlobalThemes.Dystopia,\r\n      GlobalThemes.Contact,\r\n      GlobalThemes.Projects,\r\n      GlobalThemes.Resume,\r\n      GlobalThemes.Sales\r\n    );\r\n    document.body.classList.add(theme);\r\n\r\n    //var sheet = window.document.styleSheets[0];\r\n    //sheet.insertRule(this.getCssTheme(theme), sheet.cssRules.length);\r\n    this.setCssOnDocument(theme);\r\n  };\r\n  setCssOnDocument = (theme: GlobalThemes) => {\r\n    let style = document.getElementById(\"Theme\");\r\n    if (theme != this.previousThemeName) {\r\n      this.previousThemeName = theme;\r\n      if (style != null) {\r\n        document.head.removeChild(\r\n          style\r\n          //document.head.childNodes[document.head.childNodes.length - 1]\r\n        );\r\n        style = document.createElement(\"style\");\r\n        style.id = \"Theme\";\r\n        document.head.appendChild(style);\r\n      }\r\n      if (!style) {\r\n        style = document.createElement(\"style\");\r\n        style.id = \"Theme\";\r\n        document.head.appendChild(style);\r\n      }\r\n      style.innerHTML = \"\";\r\n      style.appendChild(\r\n        document.createTextNode(\":root{\" + this.getCssTheme(theme) + \"}\")\r\n      );\r\n      let controlStyle = document.getElementById(\"ControlTheme\");\r\n      if (controlStyle != null) {\r\n        document.head.removeChild(controlStyle);\r\n      }\r\n      controlStyle = document.createElement(\"style\");\r\n      controlStyle.id = \"ControlTheme\";\r\n      let head = document.head || document.getElementsByTagName(\"head\")[0];\r\n\r\n      head.appendChild(controlStyle);\r\n      controlStyle.appendChild(\r\n        document.createTextNode(this.getCssControlClasses())\r\n      );\r\n    }\r\n  };\r\n  getCssControlClasses = () => {\r\n    return `.headline {\r\n        letter-spacing: 0;\r\n        font-weight: 500;\r\n        transition: all .167s ease-in-out;\r\n      }\r\n      .headline.one{\r\n        font-size: var(--font-xlarge);\r\n        font-weight: 700;\r\n      }\r\n      .headline.two{\r\n        font-size: var(--font-large);\r\n        font-weight: 600;\r\n      }\r\n      .headline.three{\r\n        font-size: var(--font-large);\r\n      }\r\n      .headline.four{\r\n        font-size: var(--font-medium);\r\n      }\r\n      .headline.five{\r\n        font-size: var(--font-medium);\r\n        font-weight: 400;\r\n      }\r\n      .headline.six{\r\n        font-size: var(--font-small);\r\n        font-weight: 400;\r\n      }\r\n      .headline.seven{\r\n        font-size: var(--font-small);\r\n        font-weight: 300;\r\n      }\r\n      .headline.eight{\r\n        font-size: var(--font-xsmall);\r\n        font-weight: 800;\r\n      }\r\n      .paragraph{\r\n        font-size: var(--font-medium);\r\n      }\r\n      .inputName{\r\n        font-size: var(--font-medium);\r\n      }\r\n      .link{\r\n        font-size: var(--font-medium);\r\n        color: var(--theme-teritary);\r\n      }\r\n      .link:hover{\r\n        cursor: pointer;\r\n      }\r\n      .textTitle{\r\n        color: var(--theme-text-title) !important;\r\n      }\r\n      .textPrimary{\r\n        color: var(--theme-text-primary) !important;\r\n      }\r\n      .textSecondary{\r\n        color: var(--theme-text-secondary) !important;\r\n      }\r\n      .textTeritary{\r\n        color: var(--theme-text-teritary) !important;\r\n      }\r\n      .textPlaceholder {\r\n        color: var(--theme-text-placeholder) !important;\r\n      }\r\n      .button{\r\n        font-size: var(--font-medium);\r\n        padding: 4px 24px;\r\n        border-radius: var(--round-medium);\r\n        transition: all 0.167s ease-in-out;\r\n        max-width: 320px;\r\n        height: 60px;\r\n      }\r\n      .button:hover{\r\n        cursor: pointer;\r\n      }\r\n      .button.primary {\r\n        background-color: var(--theme-button-primary);\r\n        color: var(--theme-button-primary-text);\r\n        border: 1px solid var(--theme-med-contrast);\r\n      }\r\n      .button.primary:hover{\r\n        background-color: var(--theme-button-primary-text);\r\n        color: var(--theme-button-primary);\r\n        border: 1px solid var(--theme-button-primary-text);\r\n      }\r\n      .button.transparent {\r\n        background-color:transparent;\r\n        border: none;\r\n      }\r\n      .button.transparent:hover{\r\n        border: 1px solid var(--theme-button-secondary-text);\r\n      }\r\n      .button.secondary {\r\n        background-color: var(--theme-button-secondary);\r\n        color: var(--theme-button-secondary-text);\r\n        border: 1px solid var(--theme-button-secondary-text);\r\n      }\r\n      .button.secondary:hover{\r\n        background-color: var(--theme-button-secondary-text);\r\n        color: var(--theme-button-secondary);\r\n      }\r\n      .button.secondaryAccent{\r\n        background-color: var(--theme-button-secondary-accent);\r\n        color: var(--theme-button-secondary-accent-text);\r\n        border: 1px solid var(--theme-button-secondary-accent);\r\n      }\r\n      .button.secondaryAccent:hover{\r\n        background-color: var(--theme-button-secondary-accent-text);\r\n        color: var(--theme-button-secondary-accent);\r\n      }\r\n      .button.success {\r\n        background-color: var(--theme-button-success);\r\n        color: var(--theme-button-success-text);\r\n        border: 1px solid var(--theme-button-success-text);\r\n      }\r\n      .button.success:hover{\r\n        background-color: var(--theme-button-success-text);\r\n        color: var(--theme-button-success);\r\n      }\r\n      .button.warning {\r\n        background-color: var(--theme-button-warning);\r\n        color: var(--theme-button-warning-text);\r\n        border: 2px solid var(--theme-button-warning-text);\r\n      }\r\n      .button.warning:hover{\r\n        background-color: var(--theme-button-warning-text);\r\n        color: var(--theme-button-warning);\r\n      }\r\n      .button.disabled {\r\n        background-color: var(--theme-button-disabled);\r\n        color: var(--theme-button-disabled-text);\r\n      }\r\n      .button.disabled:hover{\r\n        background-color: var(--theme-button-disabled-text);\r\n        color: var(--theme-button-disabled);\r\n      }\r\n      .error {\r\n        color: var(--theme-error);\r\n      }\r\n      .success {\r\n        color: var(--theme-success);\r\n      }\r\n      .warning {\r\n        color: var(--theme-warning);\r\n      }\r\n      .info {\r\n        color: var(--theme-info);\r\n      }\r\n      .hidden {\r\n        display: none !important;\r\n      }`;\r\n  };\r\n  getCssTheme = (theme: GlobalThemes) => {\r\n    return (\r\n      `--width:` +\r\n      (this.phoneWidth ? this.phoneWidth.toString() : `1000`) +\r\n      `px;` +\r\n      `--theme: ` +\r\n      theme.toString() +\r\n      `;` +\r\n      `--theme-primary:` +\r\n      this.currentTheme.primary +\r\n      \";\" +\r\n      `--theme-secondary:` +\r\n      this.currentTheme.secondary +\r\n      \";\" +\r\n      `--theme-teritary:` +\r\n      this.currentTheme.teritary +\r\n      \";\" +\r\n      `--theme-border:` +\r\n      this.currentTheme.border +\r\n      \";\" +\r\n      `--theme-text-title:` +\r\n      this.currentTheme.textTitle +\r\n      \";\" +\r\n      `--theme-text-primary:` +\r\n      this.currentTheme.textPrimary +\r\n      \";\" +\r\n      `--theme-text-secondary:` +\r\n      this.currentTheme.textSecondary +\r\n      \";\" +\r\n      `--theme-text-teritary:` +\r\n      this.currentTheme.textTeritary +\r\n      \";\" +\r\n      `--theme-text-placeholder:` +\r\n      this.currentTheme.textPlaceholder +\r\n      \";\" +\r\n      `--theme-error:` +\r\n      this.currentTheme.error +\r\n      \";\" +\r\n      `--theme-success:` +\r\n      this.currentTheme.success +\r\n      \";\" +\r\n      `--theme-warning:` +\r\n      this.currentTheme.warning +\r\n      \";\" +\r\n      `--theme-info:` +\r\n      this.currentTheme.info +\r\n      \";\" +\r\n      `--theme-primary-background:` +\r\n      this.currentTheme.primaryBackground +\r\n      \";\" +\r\n      `--theme-secondary-background:` +\r\n      this.currentTheme.secondaryBackground +\r\n      \";\" +\r\n      `--theme-primary-background-transparent:` +\r\n      this.currentTheme.primaryBackgroundTransparent +\r\n      \";\" +\r\n      `--theme-secondary-background-transparent: ` +\r\n      this.currentTheme.secondaryBackgroundTransparent +\r\n      \";\" +\r\n      `--theme-button-primary:` +\r\n      this.currentTheme.primaryButton +\r\n      \";\" +\r\n      `--theme-button-primary-text:` +\r\n      this.currentTheme.primaryButtonText +\r\n      \";\" +\r\n      `--theme-button-secondary:` +\r\n      this.currentTheme.secondaryButton +\r\n      \";\" +\r\n      `--theme-button-secondary-text:` +\r\n      this.currentTheme.secondaryButtonText +\r\n      \";\" +\r\n      `--theme-button-success:` +\r\n      this.currentTheme.successButton +\r\n      \";\" +\r\n      `--theme-button-success-text:` +\r\n      this.currentTheme.successButtonText +\r\n      \";\" +\r\n      `--theme-button-cancel:` +\r\n      this.currentTheme.cancelButton +\r\n      \";\" +\r\n      `--theme-button-cancel-text:` +\r\n      this.currentTheme.cancelButtonText +\r\n      \";\" +\r\n      `--theme-button-delete:` +\r\n      this.currentTheme.deleteButton +\r\n      \";\" +\r\n      `--theme-button-delete-text:` +\r\n      this.currentTheme.deleteButtonText +\r\n      \";\" +\r\n      `--theme-button-disabled:` +\r\n      this.currentTheme.disabledButton +\r\n      \";\" +\r\n      `--theme-button-disabled-text:` +\r\n      this.currentTheme.disabledButtonText +\r\n      \";\" +\r\n      `--theme-white:` +\r\n      this.globalColors.white +\r\n      \";\" +\r\n      `--theme-black:` +\r\n      this.globalColors.black +\r\n      \";\" +\r\n      `--theme-shadow-light:` +\r\n      this.currentTheme.shadowLight +\r\n      \";\" +\r\n      `--theme-shadow-dark:` +\r\n      this.currentTheme.shadowDark +\r\n      \";\" +\r\n      `--font-xsmall:` +\r\n      this.globalSizes.fontXSmall +\r\n      `px;\r\n      --font-small:` +\r\n      this.globalSizes.fontSmall +\r\n      `px;\r\n      --font-medium:` +\r\n      this.globalSizes.fontMedium +\r\n      `px;\r\n      --font-large:` +\r\n      this.globalSizes.fontLarge +\r\n      `px;\r\n      --font-xlarge:` +\r\n      this.globalSizes.fontXLarge +\r\n      `px;\r\n    \r\n      --round-small:` +\r\n      this.globalSizes.radiusSmall +\r\n      `px;\r\n      --round-medium:` +\r\n      this.globalSizes.radiusMedium +\r\n      `px;\r\n      --round-large:` +\r\n      this.globalSizes.radiusLarge +\r\n      `px;\r\n      --font:` +\r\n      this.currentTheme.font +\r\n      `;`\r\n    );\r\n  };\r\n}\r\nexport default ThemeManager;\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\RenderComponent\\RenderComponent.tsx",["210","211","212","213","214","215","216","217","218","219","220","221"],"import { useEffect, useMemo, useRef } from \"react\";\r\nimport { useContext, useState } from \"react\";\r\nimport { ThemeManagerContext } from \"../../App\";\r\nimport EnterpriseTheme from \"../../pages/ThemeSwitcher/EnterpriseTheme/EnterpriseTheme\";\r\nimport DystopiaTheme from \"../../pages/ThemeSwitcher/DystopiaTheme\";\r\nimport EightiesTheme from \"../../pages/ThemeSwitcher/EightiesTheme\";\r\nimport SafariTheme from \"../../pages/ThemeSwitcher/SafariTheme\";\r\nimport SpookyTheme from \"../../pages/ThemeSwitcher/SpookyTheme\";\r\nimport { GlobalThemes, useWindowDimensions } from \"../../ThemeManager\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport \"./RenderComponent.scss\";\r\nimport ResumePage from \"../../pages/ThemeSwitcher/ResumePage/ResumePage\";\r\nimport OverlayControl from \"../OverlayControl/OverlayControl\";\r\nimport ContactPage from \"../../pages/ThemeSwitcher/ContactPage/ContactPage\";\r\nimport ProjectsPage from \"../../pages/ThemeSwitcher/ProjectsPage/ProjectsPage\";\r\nimport BezierBackground from \"../BezierBackground/Bezier-Background\";\r\nimport SideBar from \"../SideBar/SideBar\";\r\nimport SalesTheme from \"../../pages/ThemeSwitcher/SalesTheme/SalesTheme\";\r\nimport DesignBackground from \"../BezierBackground/DesignBackground\";\r\nimport TestPage from \"../../pages/testPage\";\r\nimport { Map } from \"typescript\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst RenderComponent = ({ url }: { url: GlobalThemes }) => {\r\n  const { themeManager, theme, setThemeContext } =\r\n    useContext(ThemeManagerContext);\r\n  const dimensions = useWindowDimensions();\r\n  const navigate = useNavigate();\r\n  let isTopBar = true;\r\n  const routes = new Map<string, any>([\r\n    [GlobalThemes.Resume, <ResumePage />],\r\n    [GlobalThemes.Contact, <ContactPage />],\r\n    [GlobalThemes.Sales, <SalesTheme />],\r\n    [GlobalThemes.Enterprise, <EnterpriseTheme />],\r\n    [GlobalThemes.Spooky, <SpookyTheme />],\r\n    [GlobalThemes.Test, <TestPage />],\r\n  ]);\r\n  const newPage = routes.get(url);\r\n  const [switchButton, setSwitchButton] = useState<Boolean>(false);\r\n  const checkBackground = () => {\r\n    switch (url) {\r\n      case GlobalThemes.Resume:\r\n      case GlobalThemes.Contact:\r\n      case GlobalThemes.Projects:\r\n        return false;\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n  const checkSideBar = () => {\r\n    switch (url) {\r\n      case GlobalThemes.Resume:\r\n      case GlobalThemes.Contact:\r\n      case GlobalThemes.Projects:\r\n      case GlobalThemes.Spooky:\r\n      case GlobalThemes.Sales:\r\n      case GlobalThemes.Test:\r\n        return false;\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n  const showBackground = checkBackground();\r\n  const showSideBar = checkSideBar();\r\n  useEffect(() => {\r\n    setThemeContext(url);\r\n  });\r\n  return (\r\n    <>\r\n      {showBackground && <DesignBackground />}\r\n      <div id=\"animationOverlay\" className=\"animationOverlay\"></div>\r\n      <div\r\n        className={\"renderContainer \" + url + (isTopBar ? \" horizontal\" : \"\")}\r\n      >\r\n        {url !== GlobalThemes.Contact && !dimensions.isMobile && (\r\n          <button\r\n            className={\r\n              \"button secondary contactButton \" +\r\n              (url !== GlobalThemes.Resume\r\n                ? \" active\"\r\n                : switchButton\r\n                ? \" active\"\r\n                : \"\")\r\n            }\r\n            onClick={() => {\r\n              navigate(\"../\" + GlobalThemes.Contact, { replace: true });\r\n            }}\r\n          >\r\n            Contact\r\n          </button>\r\n        )}\r\n        <div className=\"topContainer\">\r\n          <NavBar isTopBar={isTopBar} />\r\n        </div>\r\n        <div className=\"bottomContainer\">\r\n          {showSideBar && <SideBar gooMenu={url === GlobalThemes.Enterprise} />}\r\n          <CalculatedScrollComponent hasButtons={false} refresh={[]}>\r\n            <div\r\n              className={\"mainContent \" + url}\r\n              onScroll={(e) => {\r\n                setSwitchButton((e.target as any).scrollTop > 0);\r\n              }}\r\n            >\r\n              {!newPage ? <OverlayControl loading={true} /> : newPage}\r\n            </div>\r\n          </CalculatedScrollComponent>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default RenderComponent;\r\nexport const CalculatedScrollComponent = (props: {\r\n  children: any;\r\n  hasButtons: boolean;\r\n  refresh: any[];\r\n  overflowHidden?: boolean;\r\n}) => {\r\n  const dimensions = useWindowDimensions();\r\n  const resizeRef = useRef<any>(null);\r\n  const buttonSpacing = useRef<number>(0);\r\n  const initialResize = (firstCall?: boolean) => {\r\n    if (resizeRef.current) {\r\n      resizeChildrenContainer();\r\n      if (firstCall) {\r\n        setTimeout(() => {\r\n          initialResize();\r\n        }, 500);\r\n      }\r\n    } else {\r\n      setTimeout(() => {\r\n        initialResize();\r\n      }, 500);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", resizeChildrenContainer);\r\n    initialResize(true);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resizeChildrenContainer);\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    buttonSpacing.current = props.hasButtons ? 72 : 0;\r\n  }, [props.hasButtons]);\r\n  useEffect(() => {\r\n    resizeChildrenContainer();\r\n  }, [resizeRef, ...props.refresh, buttonSpacing.current]);\r\n  const resizeChildrenContainer = () => {\r\n    if (resizeRef.current) {\r\n      const resizeContainerRect = resizeRef.current.getBoundingClientRect();\r\n      const calcWeight = window.innerWidth;\r\n      const calcHeight =\r\n        window.innerHeight - resizeContainerRect.y - 0 - buttonSpacing.current;\r\n      resizeRef.current.style.height = calcHeight.toString() + \"px\";\r\n      resizeRef.current.style.width = calcWeight.toString() + \"px\";\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      ref={resizeRef}\r\n      id=\"scrollComponent\"\r\n      className=\"scrollComponent\"\r\n      style={{\r\n        overflowY: props.overflowHidden ? \"hidden\" : \"auto\",\r\n        overflowX: \"hidden\",\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\OverlayControl\\OverlayControl.tsx",["222","223"],"import { CircularProgress } from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { ThemeManagerContext } from \"../../App\";\r\n\r\ninterface iOverlayControl {\r\n  loading: boolean;\r\n}\r\nconst OverlayControl = ({ loading }: iOverlayControl) => {\r\n  const { themeManager, theme, setThemeContext } =\r\n    useContext(ThemeManagerContext);\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor:\r\n          themeManager.currentTheme.secondaryBackgroundTransparent,\r\n      }}\r\n    >\r\n      <div style={{ margin: \"auto\" }}>\r\n        <CircularProgress />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default OverlayControl;\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\testPage.tsx",["224"],"import Icon from \"../components/Icon/Icon\";\r\nimport \"./testPage.scss\";\r\nconst TestPage = () => {\r\n  return <div></div>;\r\n};\r\nexport default TestPage;\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\NavBar\\NavBar.tsx",["225","226","227","228","229"],"import { useContext, useMemo, useState } from \"react\";\r\nimport { ThemeManagerContext } from \"../../App\";\r\nimport {\r\n  GlobalThemes,\r\n  mobileWidth,\r\n  useWindowDimensions,\r\n} from \"../../ThemeManager\";\r\nimport NavButton, { NavButtonOptions } from \"../NavButton/NavButton\";\r\nimport \"./NavBar.scss\";\r\nconst NavBar = ({ isTopBar }: { isTopBar?: boolean }) => {\r\n  const { themeManager, theme, setThemeContext } =\r\n    useContext(ThemeManagerContext);\r\n  const spookyNavButtons: string[] = [\"Skull\", \"Bat\"];\r\n  const safariNavButtons: string[] = [\"Sun\", \"Bug\"];\r\n  const eightiesNavButtons: string[] = [\"Atari\", \"Invader\"];\r\n  const dystopiaNavButtons: string[] = [\"Atari\", \"SportsEsports\"];\r\n  const defaultNavButtons: string[] = [\"Home\", \"Themes\"];\r\n  const [label, setLabel] = useState(\"Webpage\");\r\n  const dimensions = useWindowDimensions();\r\n  const [openContext, setOpenContext] = useState<boolean>(false);\r\n  const [navButtons, setNavButtons] = useState<NavButtonOptions[]>([\r\n    {\r\n      route: GlobalThemes.Resume,\r\n    },\r\n    {\r\n      icon: \"Themes\",\r\n      label: \"Themes\",\r\n      contextItems: [\r\n        {\r\n          icon: \"Projects\",\r\n          route: GlobalThemes.Enterprise,\r\n        },\r\n        {\r\n          icon: \"Bat\",\r\n          route: GlobalThemes.Spooky,\r\n        },\r\n\r\n        {\r\n          icon: \"Sales\",\r\n          route: GlobalThemes.Sales,\r\n        } /*\r\n        {\r\n          icon: \"Test\",\r\n          route: GlobalThemes.Test,\r\n        },\r\n        \r\n        {\r\n          icon: \"Paw\",\r\n          label: \"Safari Learning\",\r\n          themeChanger: GlobalThemes.Safari,\r\n          route: \"/safari\",\r\n        },\r\n        {\r\n          icon: \"SportsEsports\",\r\n          label: \"80s Arcade\",\r\n          themeChanger: GlobalThemes.Arcade,\r\n          route: \"/arcade\",\r\n        },\r\n        {\r\n          icon: \"Skull\",\r\n          label: \"Dystopia\",\r\n          themeChanger: GlobalThemes.Dystopia,\r\n          route: \"/dystopia\",\r\n        },\r\n        */,\r\n      ],\r\n    },\r\n  ]);\r\n  const setIcons = (icons: string[]) => {\r\n    let tempButtons = navButtons;\r\n    icons.forEach((icon, i) => {\r\n      tempButtons[i][\"icon\"] = icon;\r\n    });\r\n    setNavButtons(tempButtons);\r\n  };\r\n  const getTheme = useMemo(() => {\r\n    switch (theme) {\r\n      case GlobalThemes.Spooky:\r\n        setLabel(\"Haunted House Tours\");\r\n        setIcons(spookyNavButtons);\r\n        break;\r\n      case GlobalThemes.Safari:\r\n        setLabel(\"Safari Learning Center\");\r\n        setIcons(safariNavButtons);\r\n        break;\r\n      case GlobalThemes.Arcade:\r\n        setLabel(\"80s Arcade\");\r\n        setIcons(eightiesNavButtons);\r\n        break;\r\n      case GlobalThemes.Dystopia:\r\n        setLabel(\"Dystopia\");\r\n        setIcons(dystopiaNavButtons);\r\n        break;\r\n      case GlobalThemes.Resume:\r\n      case GlobalThemes.Enterprise:\r\n      default:\r\n        setLabel(theme);\r\n        setIcons(defaultNavButtons);\r\n        break;\r\n    }\r\n    return theme;\r\n  }, [theme]);\r\n\r\n  return (\r\n    <div className={\"navBar horizontal \"}>\r\n      {!dimensions.isMobile && (\r\n        <div\r\n          className=\"headline six navBarLabel textTitle\"\r\n          style={{ display: \"flex\" }}\r\n        >\r\n          {\"Portfolio - \"}\r\n          <div\r\n            style={{ marginLeft: \"8px\", marginBottom: \"2px\" }}\r\n            className=\"textSecondary headline six\"\r\n          >\r\n            {theme}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className={\"navBarContainer \" + getTheme}>\r\n        {navButtons.map((y) => {\r\n          return (\r\n            <NavButton\r\n              options={y}\r\n              openContext={openContext}\r\n              setOpenContext={setOpenContext}\r\n            />\r\n          );\r\n        })}\r\n        {dimensions.isMobile && (\r\n          <NavButton\r\n            options={{ route: GlobalThemes.Contact }}\r\n            openContext={openContext}\r\n            setOpenContext={setOpenContext}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default NavBar;\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\SideBar\\SideBar.tsx",["230","231","232","233","234","235","236","237"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./SideBar.scss\";\r\nimport sampleLogo from \"../../assets/sampleLogo.png\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport { ThemeManagerContext } from \"../../App\";\r\nimport { GlobalThemes } from \"../../ThemeManager\";\r\ninterface iNavButton {\r\n  icon: string;\r\n  label?: string;\r\n  link?: string;\r\n  subButtons?: iNavButton[];\r\n}\r\nconst SideBar = (props: { gooMenu?: boolean }) => {\r\n  const { themeManager, theme, setThemeContext } =\r\n    useContext(ThemeManagerContext);\r\n  const [pageTitle, setPageTitle] = useState<string>(\"\");\r\n  const [pageIcon, setPageIcon] = useState<string>(\"\");\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const buttons: iNavButton[] = [\r\n    {\r\n      icon: \"HomeOutline\",\r\n      label: \"Option 1\",\r\n      subButtons: [\r\n        { icon: \"HomeOutline\", label: \"SubOption 1\" },\r\n        { icon: \"AccountCircleOutline\", label: \"SubOption 2\" },\r\n        { icon: \"WalletOutline\", label: \"SubOption 3\" },\r\n        { icon: \"CalculatorVariantOutline\", label: \"SubOption 4\" },\r\n        { icon: \"ToolboxOutline\", label: \"SubOption 5\" },\r\n      ],\r\n    },\r\n    {\r\n      icon: \"AccountCircleOutline\",\r\n      label: \"Option 2\",\r\n      subButtons: [\r\n        { icon: \"HomeOutline\", label: \"SubOption 1\" },\r\n        { icon: \"AccountCircleOutline\", label: \"SubOption 2\" },\r\n        { icon: \"WalletOutline\", label: \"SubOption 3\" },\r\n      ],\r\n    },\r\n    {\r\n      icon: \"WalletOutline\",\r\n      label: \"Option 3\",\r\n      subButtons: [\r\n        { icon: \"HomeOutline\", label: \"SubOption 1\" },\r\n        { icon: \"AccountCircleOutline\", label: \"SubOption 2\" },\r\n      ],\r\n    },\r\n    {\r\n      icon: \"CalculatorVariantOutline\",\r\n      label: \"Option 4\",\r\n      subButtons: [\r\n        { icon: \"HomeOutline\", label: \"SubOption 1\" },\r\n        { icon: \"AccountCircleOutline\", label: \"SubOption 2\" },\r\n        { icon: \"WalletOutline\", label: \"SubOption 3\" },\r\n        { icon: \"CalculatorVariantOutline\", label: \"SubOption 4\" },\r\n      ],\r\n    },\r\n    {\r\n      icon: \"ToolboxOutline\",\r\n      label: \"Option 5\",\r\n      subButtons: [\r\n        { icon: \"HomeOutline\", label: \"SubOption 1\" },\r\n        { icon: \"AccountCircleOutline\", label: \"SubOption 2\" },\r\n        { icon: \"WalletOutline\", label: \"SubOption 3\" },\r\n      ],\r\n    },\r\n  ];\r\n  const [primarySelected, setPrimarySelected] = useState<\r\n    iNavButton | undefined\r\n  >(undefined);\r\n  const secondaryButtons: iNavButton[] = [\r\n    { icon: \"HomeOutline\", label: \"SubOption 1\" },\r\n    { icon: \"AccountCircleOutline\", label: \"SubOption 2\" },\r\n    { icon: \"WalletOutline\", label: \"SubOption 3\" },\r\n    { icon: \"CalculatorVariantOutline\", label: \"SubOption 4\" },\r\n    { icon: \"ToolboxOutline\", label: \"SubOption 5\" },\r\n  ];\r\n\r\n  const togglePrimarySelected = (newButton: iNavButton) => {\r\n    if (!primarySelected) {\r\n      setPrimarySelected(newButton);\r\n    } else if (primarySelected.label === newButton.label) {\r\n      setPrimarySelected(undefined);\r\n    } else {\r\n      setPrimarySelected(newButton);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    switch (theme) {\r\n      case GlobalThemes.Spooky:\r\n        setPageTitle(\"Spooky\");\r\n        setPageIcon(\"Skull\");\r\n        break;\r\n      case GlobalThemes.Safari:\r\n        setPageTitle(\"Safari\");\r\n        setPageIcon(\"Paw\");\r\n        break;\r\n      case GlobalThemes.Arcade:\r\n        setPageTitle(\"Vincent's Arcade\");\r\n        setPageIcon(\"Invader\");\r\n        break;\r\n      case GlobalThemes.Dystopia:\r\n        setPageTitle(\"Dystopia\");\r\n        setPageIcon(\"Bat\");\r\n        break;\r\n      case GlobalThemes.Enterprise:\r\n        setPageTitle(\"Artic Systems\");\r\n        setPageIcon(\"AcUnit\");\r\n        break;\r\n      case GlobalThemes.Projects:\r\n      case GlobalThemes.Contact:\r\n      case GlobalThemes.Resume:\r\n      case GlobalThemes.Sales:\r\n      default:\r\n        setPageTitle(\"\");\r\n        break;\r\n    }\r\n  }, [theme]);\r\n  if (props.gooMenu)\r\n    return (\r\n      <>\r\n        <nav className=\"menu\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"menu-open\"\r\n            name=\"menu-open\"\r\n            id=\"menu-open\"\r\n          />\r\n          <label className=\"menu-open-button\" htmlFor=\"menu-open\">\r\n            <span className=\"hamburger hamburger-1\"></span>\r\n            <span className=\"hamburger hamburger-2\"></span>\r\n            <span className=\"hamburger hamburger-3\"></span>\r\n          </label>\r\n\r\n          <a href=\"#\" className=\"menu-item\">\r\n            <Icon icon=\"HomeOutline\" fontSize={40} />\r\n          </a>\r\n          <a href=\"#\" className=\"menu-item\">\r\n            <Icon icon=\"AccountCircleOutline\" fontSize={40} />\r\n          </a>\r\n          <a href=\"#\" className=\"menu-item\">\r\n            <Icon icon=\"WalletOutline\" fontSize={40} />\r\n          </a>\r\n          <a href=\"#\" className=\"menu-item\">\r\n            <Icon icon=\"CalculatorVariantOutline\" fontSize={40} />\r\n          </a>\r\n        </nav>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          version=\"1.1\"\r\n          style={{ position: \"fixed\" }}\r\n        >\r\n          <defs>\r\n            <filter id=\"shadowed-goo\">\r\n              <feGaussianBlur\r\n                in=\"SourceGraphic\"\r\n                result=\"blur\"\r\n                stdDeviation=\"10\"\r\n              />\r\n              <feColorMatrix\r\n                in=\"blur\"\r\n                mode=\"matrix\"\r\n                values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\r\n                result=\"goo\"\r\n              />\r\n              <feGaussianBlur in=\"goo\" stdDeviation=\"3\" result=\"shadow\" />\r\n              <feColorMatrix\r\n                in=\"shadow\"\r\n                mode=\"matrix\"\r\n                values=\"0 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 1 -0.2\"\r\n                result=\"shadow\"\r\n              />\r\n              <feOffset in=\"shadow\" dx=\"1\" dy=\"1\" result=\"shadow\" />\r\n              <feComposite in2=\"shadow\" in=\"goo\" result=\"goo\" />\r\n              <feComposite in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" />\r\n            </filter>\r\n            <filter id=\"goo\">\r\n              <feGaussianBlur\r\n                in=\"SourceGraphic\"\r\n                result=\"blur\"\r\n                stdDeviation=\"10\"\r\n              />\r\n              <feColorMatrix\r\n                in=\"blur\"\r\n                mode=\"matrix\"\r\n                values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\r\n                result=\"goo\"\r\n              />\r\n              <feComposite in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" />\r\n            </filter>\r\n          </defs>\r\n        </svg>\r\n      </>\r\n    );\r\n  return (\r\n    <div className={\"sideBarContainer \" + (open ? \" open\" : \" collapsed\")}>\r\n      <div\r\n        className={\"pullOutPositioner \" + (open ? \" flip\" : \"\")}\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n      >\r\n        <svg\r\n          width=\"12\"\r\n          height=\"12\"\r\n          viewBox=\"0 0 12 12\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"M6 -4.76837e-07C7.5913 -4.76837e-07 9.11742 0.632141 10.2426 1.75736C11.3679 2.88258 12 4.4087 12 6C12 6.78793 11.8448 7.56815 11.5433 8.2961C11.2417 9.02405 10.7998 9.68549 10.2426 10.2426C9.11742 11.3679 7.5913 12 6 12C4.4087 12 2.88258 11.3679 1.75736 10.2426C0.632141 9.11742 0 7.5913 0 6C0 5.21207 0.155195 4.43185 0.456723 3.7039C0.758251 2.97595 1.20021 2.31451 1.75736 1.75736C2.31451 1.20021 2.97595 0.75825 3.7039 0.456722C4.43185 0.155194 5.21207 -4.76837e-07 6 -4.76837e-07V-4.76837e-07ZM6 1.2C4.72696 1.2 3.50606 1.70571 2.60589 2.60589C1.70571 3.50606 1.2 4.72696 1.2 6C1.2 7.27304 1.70571 8.49394 2.60589 9.39411C3.50606 10.2943 4.72696 10.8 6 10.8C7.27304 10.8 8.49394 10.2943 9.39411 9.39411C10.2943 8.49394 10.8 7.27304 10.8 6C10.8 4.72696 10.2943 3.50606 9.39411 2.60589C8.49394 1.70571 7.27304 1.2 6 1.2ZM4.8 9.6L8.4 6L4.8 2.4L3.96 3.24L6.72 6L3.96 8.76L4.8 9.6Z\" />\r\n        </svg>\r\n      </div>\r\n      <div\r\n        className={\r\n          \"secondarySideBarContent \" + (primarySelected ? \" open\" : \" close\")\r\n        }\r\n      >\r\n        {primarySelected && (\r\n          <>\r\n            <div className=\"sideBarHeader\">\r\n              <div className={\"headline two\"}>{primarySelected.label}</div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"sideBarItemsContainer\">\r\n              {primarySelected.subButtons &&\r\n                primarySelected.subButtons.map((button) => {\r\n                  return (\r\n                    <div className={\"sideNavButton \"}>\r\n                      <div className=\"navButtonIcon\">\r\n                        <Icon icon={button.icon} />\r\n                      </div>\r\n                      {button.label && (\r\n                        <div className=\"navButtonLabel\">{button.label}</div>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"sideBarContent\">\r\n        <div className=\"sideBarHeader\">\r\n          <Icon icon={pageIcon} />\r\n          <div className={\"headline \" + (open ? \" two\" : \" four\")}>\r\n            {pageTitle}\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"sideBarItemsContainer\">\r\n          {buttons.map((button) => {\r\n            return (\r\n              <div\r\n                className={\r\n                  \"sideNavButton \" +\r\n                  (primarySelected && primarySelected.label === button.label\r\n                    ? \" selected\"\r\n                    : \"\")\r\n                }\r\n                onClick={() => {\r\n                  togglePrimarySelected(button);\r\n                }}\r\n              >\r\n                <div className=\"navButtonIcon\">\r\n                  <Icon icon={button.icon} />\r\n                </div>\r\n                {button.label && open && (\r\n                  <div className=\"navButtonLabel\">{button.label}</div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SideBar;\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\BezierBackground\\DesignBackground.tsx",["238"],"import { useEffect, useRef } from \"react\";\r\n\r\nconst DesignBackground = () => {\r\n  const backRef = useRef<any>(null);\r\n  const middleRef = useRef<any>(null);\r\n  const frontRef = useRef<any>(null);\r\n  useEffect(() => {\r\n    //document.addEventListener(\"mousemove\", parallax);\r\n    //return document.removeEventListener(\"mousemove\", parallax);\r\n  }, []);\r\n  const parallax = (event: any) => {\r\n    if (backRef.current) {\r\n      const position = 1;\r\n      const x = (window.innerWidth - event.pageX * position) / 90;\r\n      const y = (window.innerHeight - event.pageY * position) / 90;\r\n\r\n      backRef.current.style.transform = `translateX(${x}px) translateY(${y}px)`;\r\n    }\r\n    if (middleRef.current) {\r\n      const position = 2;\r\n      const x = (window.innerWidth - event.pageX * position) / 90;\r\n      const y = (window.innerHeight - event.pageY * position) / 90;\r\n\r\n      middleRef.current.style.transform = `translateX(${x}px) translateY(${y}px)`;\r\n    }\r\n    if (frontRef.current) {\r\n      const position = 3;\r\n      const x = (window.innerWidth - event.pageX * position) / 90;\r\n      const y = (window.innerHeight - event.pageY * position) / 90;\r\n\r\n      frontRef.current.style.transform = `translateX(${x}px) translateY(${y}px)`;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"designBackgroundContainer\">\r\n      <svg\r\n        id=\"designBackground\"\r\n        className=\"designBackground\"\r\n        viewBox=\"0 0 500 500\"\r\n        width=\"500\"\r\n        height=\"500\"\r\n        preserveAspectRatio=\"xMidYMin slice\"\r\n      >\r\n        <defs>\r\n          <linearGradient\r\n            id=\"gradient-0-0\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            x1=\"249.832\"\r\n            y1=\"-15.031\"\r\n            x2=\"249.832\"\r\n            y2=\"198.782\"\r\n            gradientTransform=\"matrix(0.952173, 0, 0, 0.935224, 25.154615, 12.876315)\"\r\n            xlinkHref=\"#gradient-0\"\r\n          ></linearGradient>\r\n          <linearGradient id=\"gradient-0\" data-bx-pinned=\"true\">\r\n            <title>Gradient 2</title>\r\n            <stop stopColor=\"rgb(196, 150, 249)\" offset=\"0.148\"></stop>\r\n            <stop stopColor=\"rgb(123, 65, 189)\" offset=\"0.757\"></stop>\r\n          </linearGradient>\r\n          <linearGradient\r\n            id=\"gradient-1-1\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            x1=\"326.598\"\r\n            y1=\"-8.553\"\r\n            x2=\"326.598\"\r\n            y2=\"170.018\"\r\n            xlinkHref=\"#gradient-1\"\r\n          ></linearGradient>\r\n          <linearGradient id=\"gradient-1\" data-bx-pinned=\"true\">\r\n            <stop offset=\"0.148\" stopColor=\"rgb(119, 0, 255)\"></stop>\r\n            <stop offset=\"0.757\" stopColor=\"rgb(83, 24, 151)\"></stop>\r\n          </linearGradient>\r\n          <linearGradient\r\n            id=\"gradient-1-0\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            x1=\"178.431\"\r\n            y1=\"54.704\"\r\n            x2=\"178.431\"\r\n            y2=\"254.675\"\r\n            xlinkHref=\"#gradient-1\"\r\n          ></linearGradient>\r\n          <linearGradient\r\n            id=\"gradient-3-5\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            x1=\"71.088\"\r\n            y1=\"158.945\"\r\n            x2=\"71.088\"\r\n            y2=\"202.595\"\r\n            gradientTransform=\"matrix(1, 0, 0, 0.438109, 57.174103, 98.190898)\"\r\n            xlinkHref=\"#gradient-3\"\r\n          ></linearGradient>\r\n          <linearGradient id=\"gradient-3\" data-bx-pinned=\"true\">\r\n            <stop offset=\"0.234\" stopColor=\"rgb(255, 255, 246)\"></stop>\r\n            <stop offset=\"0.805\" stopColor=\"rgb(245, 208, 42)\"></stop>\r\n          </linearGradient>\r\n          <linearGradient\r\n            id=\"gradient-3-4\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            x1=\"71.088\"\r\n            y1=\"158.945\"\r\n            x2=\"71.088\"\r\n            y2=\"202.595\"\r\n            gradientTransform=\"matrix(1, 0, 0, 0.658309, 30.980312, 58.760737)\"\r\n            xlinkHref=\"#gradient-3\"\r\n          ></linearGradient>\r\n          <linearGradient\r\n            id=\"gradient-3-0\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            x1=\"71.088\"\r\n            y1=\"158.945\"\r\n            x2=\"71.088\"\r\n            y2=\"202.595\"\r\n            gradientTransform=\"matrix(1, 0, 0, 0.932494, 0, 12.413605)\"\r\n            xlinkHref=\"#gradient-3\"\r\n          ></linearGradient>\r\n          <radialGradient\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            cx=\"71.256\"\r\n            cy=\"155.039\"\r\n            r=\"6.846\"\r\n            id=\"gradient-3-1\"\r\n            xlinkHref=\"#gradient-3\"\r\n          ></radialGradient>\r\n          <radialGradient\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            cx=\"71.256\"\r\n            cy=\"155.039\"\r\n            r=\"6.846\"\r\n            id=\"gradient-3-2\"\r\n            gradientTransform=\"matrix(0.811083, 0, 0, 0.811083, 45.195309, 32.88039)\"\r\n            xlinkHref=\"#gradient-3\"\r\n          ></radialGradient>\r\n          <radialGradient\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            cx=\"71.256\"\r\n            cy=\"155.039\"\r\n            r=\"6.846\"\r\n            id=\"gradient-3-3\"\r\n            gradientTransform=\"matrix(0.675393, 0, 0, 0.680812, 54.863905, 53.077548)\"\r\n            xlinkHref=\"#gradient-3\"\r\n          ></radialGradient>\r\n          <linearGradient id=\"gradient-j\" data-bx-pinned=\"true\">\r\n            <stop offset=\"0.234\" stopColor=\"rgb(255, 255, 255)\"></stop>\r\n            <stop offset=\"0.805\" stopColor=\"rgba(255, 255, 255, 0)\"></stop>\r\n          </linearGradient>\r\n          <linearGradient\r\n            id=\"gradient-white-clear\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            x1=\"247.142\"\r\n            y1=\"269.817\"\r\n            x2=\"247.142\"\r\n            y2=\"470.459\"\r\n            //gradientTransform=\"matrix(0.952173, 0, 0, 0.935224, 25.154615, 12.876315)\"\r\n            xlinkHref=\"#gradient-j\"\r\n          ></linearGradient>\r\n          <radialGradient\r\n            id=\"gradient-0-1\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            cx=\"-357.847\"\r\n            cy=\"40.964\"\r\n            r=\"5.425\"\r\n            xlinkHref=\"#gradient-3\"\r\n          ></radialGradient>\r\n        </defs>\r\n        <rect\r\n          x=\"0\"\r\n          y=\"0\"\r\n          width=\"500\"\r\n          height=\"250\"\r\n          fill=\"url(#gradient-0-0)\"\r\n        ></rect>\r\n        <g ref={backRef}>\r\n          <rect\r\n            x=\"-313.837\"\r\n            y=\"51.109\"\r\n            width=\"1.425\"\r\n            height=\"14.899\"\r\n            fill=\"url(#gradient-3-1)\"\r\n            transform=\"matrix(-1, 0, 0, 1, 0, 0)\"\r\n          ></rect>\r\n          <rect\r\n            x=\"-334.593\"\r\n            y=\"47.598\"\r\n            width=\"1.425\"\r\n            height=\"19.117\"\r\n            fill=\"url(#gradient-3-1)\"\r\n            transform=\"matrix(-1, 0, 0, 1, 0, 0)\"\r\n          ></rect>\r\n          <rect\r\n            x=\"-359.141\"\r\n            y=\"45.406\"\r\n            width=\"1.425\"\r\n            height=\"18.118\"\r\n            fill=\"url(#gradient-3-1)\"\r\n            transform=\"matrix(-1, 0, 0, 1, 0, 0)\"\r\n          ></rect>\r\n\r\n          <path\r\n            fill=\"url(#gradient-1-1)\"\r\n            fillOpacity={0.9}\r\n            d=\"M 141.008 125.671 C 215.016 47.434 261.063 63.843 320.406 66.21 C 350.571 69.969 412.599 52.708 419.177 25.615 C 437.783 -23.864 479.163 -15.179 500.565 0.066 C 498.544 -2.017 501.896 149.682 500.717 173.209 L 26.941 224.339 C 34.029 227.714 148.891 129.425 141.008 125.671 Z\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 354.929 27.6 C 354.976 26.259 353.999 30.263 353.872 33.877 C 354.327 38.243 361.252 37.732 360.797 33.365 C 360.661 31.637 358.682 25.428 358.818 27.156 L 354.929 27.6 Z\"\r\n            transform=\"matrix(-1, 0, 0, -1, 714.69043, 63.762417)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 348.407 31.916 C 348.454 30.576 347.477 34.579 347.35 38.193 C 347.805 42.559 354.729 42.048 354.274 37.681 C 354.138 35.953 352.159 29.744 352.295 31.472 L 348.407 31.916 Z\"\r\n            transform=\"matrix(-0.619172, 0.785255, -0.785255, -0.619172, 596.466492, -216.875824)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 347.451 39.592 C 347.498 38.251 346.521 42.255 346.394 45.868 C 346.849 50.235 353.773 49.723 353.318 45.357 C 353.182 43.628 351.203 37.42 351.34 39.148 L 347.451 39.592 Z\"\r\n            transform=\"matrix(0.203315, 0.979113, -0.979113, 0.203315, 321.690125, -307.606293)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 352.801 45.202 C 352.848 43.861 351.871 47.865 351.744 51.478 C 352.199 55.845 359.123 55.333 358.668 50.967 C 358.532 49.238 356.554 43.03 356.69 44.758 L 352.801 45.202 Z\"\r\n            transform=\"matrix(0.90087, 0.434088, -0.434088, 0.90087, 56.692455, -149.290146)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 360.55 43.999 C 360.596 42.659 359.619 46.663 359.493 50.276 C 359.947 54.643 366.872 54.131 366.417 49.764 C 366.281 48.036 364.302 41.827 364.439 43.556 L 360.55 43.999 Z\"\r\n            transform=\"matrix(0.873502, -0.48682, 0.48682, 0.873502, 22.410311, 182.806427)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 364.519 37.519 C 364.565 36.179 363.588 40.183 363.462 43.796 C 363.916 48.163 370.841 47.651 370.386 43.284 C 370.25 41.556 368.271 35.347 368.408 37.076 L 364.519 37.519 Z\"\r\n            transform=\"matrix(0.18878, -0.982019, 0.982019, 0.18878, 256.615601, 394.246613)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 361.814 30.126 C 361.861 28.786 360.884 32.789 360.757 36.403 C 361.212 40.77 368.137 40.258 367.682 35.891 C 367.546 34.163 365.567 27.954 365.703 29.683 L 361.814 30.126 Z\"\r\n            transform=\"matrix(-0.710327, -0.703872, 0.703872, -0.710327, 598.73407, 315.21994)\"\r\n          ></path>\r\n          <ellipse\r\n            fill=\"url(#gradient-0-1)\"\r\n            cx=\"-358.295\"\r\n            cy=\"40.976\"\r\n            rx=\"5.425\"\r\n            ry=\"5.425\"\r\n            transform=\"matrix(-1, 0, 0, 1, 0, 0)\"\r\n          ></ellipse>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 334.196 33.77 C 334.234 32.683 333.442 35.93 333.339 38.86 C 333.707 42.402 339.323 41.987 338.955 38.445 C 338.844 37.044 337.24 32.008 337.35 33.41 L 334.196 33.77 Z\"\r\n            transform=\"matrix(-0.911287, -0.411771, 0.411771, -0.911287, 627.154785, 209.599426)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 327.935 34.782 C 327.973 33.694 327.18 36.942 327.077 39.873 C 327.446 43.415 333.062 42.999 332.694 39.457 C 332.583 38.056 330.978 33.02 331.089 34.422 L 327.935 34.782 Z\"\r\n            transform=\"matrix(-0.887589, 0.460636, -0.460636, -0.887589, 640.325928, -79.752693)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 324.664 40.136 C 324.702 39.049 323.91 42.296 323.807 45.227 C 324.176 48.769 329.793 48.354 329.423 44.812 C 329.313 43.411 327.708 38.375 327.819 39.777 L 324.664 40.136 Z\"\r\n            transform=\"matrix(-0.217892, 0.975973, -0.975973, -0.217892, 440.353699, -265.664825)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 326.745 46.07 C 326.782 44.982 325.99 48.23 325.888 51.16 C 326.256 54.702 331.873 54.287 331.504 50.745 C 331.393 49.343 329.789 44.308 329.899 45.71 L 326.745 46.07 Z\"\r\n            transform=\"matrix(0.642207, 0.766531, -0.766531, 0.642207, 155.58371, -234.236603)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 332.873 47.768 C 332.911 46.681 332.119 49.928 332.016 52.859 C 332.385 56.401 338.001 55.986 337.632 52.444 C 337.522 51.042 335.917 46.006 336.028 47.408 L 332.873 47.768 Z\"\r\n            transform=\"matrix(0.99647, -0.08395, 0.08395, 0.99647, -3.119674, 28.290089)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 337.972 44.303 C 338.01 43.216 337.218 46.464 337.115 49.395 C 337.484 52.936 343.101 52.521 342.731 48.979 C 342.621 47.578 341.016 42.542 341.127 43.944 L 337.972 44.303 Z\"\r\n            transform=\"matrix(0.5764, -0.817168, 0.817168, 0.5764, 104.954056, 298.019257)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 338.441 37.936 C 338.479 36.848 337.686 40.097 337.583 43.027 C 337.953 46.569 343.569 46.154 343.2 42.612 C 343.09 41.21 341.485 36.174 341.595 37.575 L 338.441 37.936 Z\"\r\n            transform=\"matrix(-0.357478, -0.933922, 0.933922, -0.357478, 423.413727, 374.117828)\"\r\n          ></path>\r\n          <ellipse\r\n            fill=\"url(#gradient-3-3)\"\r\n            cx=\"102.989\"\r\n            cy=\"158.63\"\r\n            rx=\"4.4\"\r\n            ry=\"4.4\"\r\n            transform=\"matrix(-0.911287, -0.411771, -0.411771, 0.911287, 492.993561, -57.867622)\"\r\n          ></ellipse>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 315.601 40.682 C 315.624 39.769 314.989 42.495 314.926 44.955 C 315.26 47.928 319.933 47.579 319.599 44.606 C 319.496 43.43 318.122 39.203 318.225 40.38 L 315.601 40.682 Z\"\r\n            transform=\"matrix(-0.635467, -0.772128, 0.772128, -0.635467, 485.224243, 316.274506)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 310.654 39.182 C 310.694 38.27 310.007 40.994 309.897 43.453 C 310.174 46.425 314.857 46.076 314.58 43.105 C 314.499 41.929 313.204 37.704 313.285 38.881 L 310.654 39.182 Z\"\r\n            transform=\"matrix(-0.999535, 0.030487, -0.030487, -0.999535, 625.627014, 74.652344)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 306.197 42.065 C 306.234 41.161 305.554 43.861 305.455 46.298 C 305.749 49.243 310.473 48.898 310.178 45.953 C 310.092 44.788 308.764 40.601 308.851 41.766 L 306.197 42.065 Z\"\r\n            transform=\"matrix(-0.621213, 0.783642, -0.783642, -0.621213, 534.273499, -168.345398)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 305.482 47.287 C 305.502 46.379 304.872 49.091 304.815 51.537 C 305.159 54.495 309.856 54.149 309.512 51.191 C 309.405 50.02 308.012 45.816 308.118 46.987 L 305.482 47.287 Z\"\r\n            transform=\"matrix(0.235944, 0.971767, -0.971767, 0.235944, 283.466675, -260.154633)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 309.521 50.788 C 309.554 49.873 308.89 52.605 308.8 55.07 C 309.1 58.048 313.768 57.699 313.468 54.72 C 313.378 53.541 312.054 49.306 312.143 50.485 L 309.521 50.788 Z\"\r\n            transform=\"matrix(0.933, 0.359876, -0.359876, 0.933, 40.17469, -108.373726)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 314.643 50.052 C 314.685 49.145 313.99 51.854 313.876 54.299 C 314.152 57.255 318.861 56.909 318.585 53.953 C 318.507 52.784 317.21 48.582 317.289 49.752 L 314.643 50.052 Z\"\r\n            transform=\"matrix(0.873238, -0.487293, 0.487293, 0.873238, 14.284718, 160.811813)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 317.23 45.404 C 317.255 44.499 316.611 47.202 316.544 49.641 C 316.878 52.589 321.592 52.243 321.259 49.296 C 321.156 48.128 319.775 43.938 319.877 45.105 L 317.23 45.404 Z\"\r\n            transform=\"matrix(0.091552, -0.9958, 0.9958, 0.091552, 241.621628, 361.44342)\"\r\n          ></path>\r\n          <ellipse\r\n            fill=\"url(#gradient-3-2)\"\r\n            cx=\"102.989\"\r\n            cy=\"158.63\"\r\n            rx=\"3.664\"\r\n            ry=\"3.693\"\r\n            transform=\"matrix(-0.635467, -0.772128, -0.766331, 0.642511, 499.954803, 25.676523)\"\r\n          ></ellipse>\r\n        </g>\r\n        <g ref={middleRef}>\r\n          <path\r\n            fill=\"rgb(254, 255, 233)\"\r\n            d=\"M 70.348 80.38 C 69.699 80.477 69.823 89.214 70.916 89.052 C 71.673 90.235 80.571 88.165 79.814 86.982 L 80.287 78.31 L 70.348 80.38 Z\"\r\n            transform=\"matrix(-0.995364, 0.096178, -0.096178, -0.995364, 157.956802, 160.101624)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(251, 255, 122)\"\r\n            d=\"M 86.9 86.012 C 86.055 81.909 66.481 89.878 67.326 93.981 C 66.867 95.766 86.161 92.709 87.739 86.571 L 86.9 86.012 Z\"\r\n            transform=\"matrix(-0.995364, 0.096178, -0.096178, -0.995364, 163.304138, 171.485458)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(255, 251, 128)\"\r\n            d=\"M 78.325 87.693 C 77.48 91.796 57.906 83.827 58.751 79.724 C 58.292 77.939 77.586 80.996 79.164 87.134 L 78.325 87.693 Z\"\r\n            transform=\"matrix(0.272882, 0.962047, -0.962047, 0.272882, 130.968124, -5.230373)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(254, 255, 233)\"\r\n            d=\"M 50.619 65.412 C 50.068 65.495 50.173 72.916 51.101 72.778 C 51.745 73.783 59.303 72.025 58.661 71.02 L 59.063 63.654 L 50.619 65.412 Z\"\r\n            transform=\"matrix(-0.993223, -0.116226, 0.116226, -0.993223, 101.02993, 142.623276)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(251, 255, 122)\"\r\n            d=\"M 63.592 70.516 C 62.875 67.031 46.244 73.8 46.963 77.286 C 46.573 78.802 62.965 76.205 64.305 70.991 L 63.592 70.516 Z\"\r\n            transform=\"matrix(-0.993223, -0.116226, 0.116226, -0.993223, 102.3106, 153.227371)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(255, 251, 128)\"\r\n            d=\"M 57.488 70.513 C 56.77 73.999 40.141 67.228 40.859 63.743 C 40.469 62.227 56.86 64.823 58.2 70.039 L 57.488 70.513 Z\"\r\n            transform=\"matrix(0.06353, 0.99798, -0.99798, 0.06353, 113.634491, 13.698347)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(254, 255, 233)\"\r\n            d=\"M 35.885 51.197 C 35.421 51.267 35.51 57.513 36.291 57.397 C 36.833 58.243 43.194 56.763 42.654 55.918 L 42.992 49.718 L 35.885 51.197 Z\"\r\n            transform=\"matrix(-0.996493, -0.083677, 0.083677, -0.996493, 73.964615, 110.467674)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(251, 255, 122)\"\r\n            d=\"M 46.946 55.465 C 46.343 52.532 32.346 58.229 32.951 61.163 C 32.622 62.439 46.418 60.253 47.546 55.865 L 46.946 55.465 Z\"\r\n            transform=\"matrix(-0.996493, -0.083677, 0.083677, -0.996493, 75.476311, 119.336578)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(255, 251, 128)\"\r\n            d=\"M 41.641 55.635 C 41.036 58.57 27.04 52.871 27.645 49.937 C 27.316 48.661 41.112 50.846 42.24 55.236 L 41.641 55.635 Z\"\r\n            transform=\"matrix(0.096139, 0.995368, -0.995368, 0.096139, 84.342712, 13.145881)\"\r\n          ></path>\r\n          <path\r\n            fill=\"url(#gradient-1-0)\"\r\n            fillOpacity={1}\r\n            d=\"M 369.949 165.616 C 313.98 132.002 288.799 98.231 201.314 121.086 C 142.899 136.714 69.406 98.602 55.972 84.881 C 26.509 54.789 20.302 39.398 -0.524 31.346 L 0.201 250.893 L 370.362 229.112 L 369.949 165.616 Z\"\r\n          ></path>\r\n        </g>\r\n\r\n        <g ref={frontRef}>\r\n          <rect\r\n            x=\"127.363\"\r\n            y=\"167.826\"\r\n            width=\"1.798\"\r\n            height=\"19.123\"\r\n            fill=\"url(#gradient-3-5)\"\r\n          ></rect>\r\n          <rect\r\n            x=\"101.169\"\r\n            y=\"163.396\"\r\n            width=\"1.798\"\r\n            height=\"28.735\"\r\n            fill=\"url(#gradient-3-4)\"\r\n          ></rect>\r\n          <rect\r\n            x=\"70.189\"\r\n            y=\"160.629\"\r\n            width=\"1.798\"\r\n            height=\"40.703\"\r\n            fill=\"url(#gradient-3-0)\"\r\n          ></rect>\r\n          <path\r\n            fill=\"rgb(255, 255, 255)\"\r\n            d=\"M -0.439 250.865 C 31.754 202.05 121.876 178.635 181.417 185.424 C 306.354 199.669 351.545 195.672 370.943 153.575 C 395.982 99.237 462.431 60.388 500.262 58.634 L 501.094 251.876 C 501.094 251.876 54.781 251.646 -0.439 250.865 Z\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(254, 255, 233)\"\r\n            d=\"M 401.275 93.306 C 400.626 93.209 400.75 84.472 401.843 84.634 C 402.6 83.451 411.498 85.521 410.741 86.704 L 411.214 95.376 L 401.275 93.306 Z\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(251, 255, 122)\"\r\n            d=\"M 413.599 99.519 C 412.754 103.622 393.18 95.653 394.025 91.55 C 393.566 89.765 412.86 92.822 414.438 98.96 L 413.599 99.519 Z\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(255, 251, 128)\"\r\n            d=\"M 421.59 85.736 C 420.745 81.633 401.171 89.602 402.016 93.705 C 401.557 95.49 420.851 92.433 422.429 86.295 L 421.59 85.736 Z\"\r\n            transform=\"matrix(-0.17909, 0.983833, -0.983833, -0.17909, 573.98877, -300.131409)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(254, 255, 233)\"\r\n            d=\"M 423.404 79.158 C 422.853 79.075 422.958 71.654 423.886 71.792 C 424.53 70.787 432.088 72.545 431.446 73.55 L 431.848 80.916 L 423.404 79.158 Z\"\r\n            transform=\"matrix(0.990214, 0.139559, -0.139559, 0.990214, 14.818142, -58.909855)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(251, 255, 122)\"\r\n            d=\"M 433.175 84.17 C 432.458 87.655 415.828 80.886 416.547 77.4 C 416.157 75.884 432.548 78.481 433.888 83.695 L 433.175 84.17 Z\"\r\n            transform=\"matrix(0.990214, 0.139559, -0.139559, 0.990214, 15.473144, -58.548092)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(255, 251, 128)\"\r\n            d=\"M 440.661 73.461 C 439.943 69.975 423.314 76.746 424.032 80.231 C 423.642 81.747 440.033 79.151 441.373 73.935 L 440.661 73.461 Z\"\r\n            transform=\"matrix(-0.314641, 0.949211, -0.949211, -0.314641, 641.52002, -310.045624)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(254, 255, 233)\"\r\n            d=\"M 443.613 69.239 C 443.149 69.169 443.238 62.923 444.019 63.039 C 444.561 62.193 450.922 63.673 450.382 64.518 L 450.72 70.718 L 443.613 69.239 Z\"\r\n            transform=\"matrix(0.982701, 0.185198, -0.185198, 0.982701, 20.095366, -81.633484)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(251, 255, 122)\"\r\n            d=\"M 451.65 73.365 C 451.047 76.298 437.05 70.601 437.655 67.667 C 437.326 66.391 451.122 68.577 452.25 72.965 L 451.65 73.365 Z\"\r\n            transform=\"matrix(0.982701, 0.185198, -0.185198, 0.982701, 20.798512, -81.178802)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(255, 251, 128)\"\r\n            d=\"M 458.118 64.648 C 457.513 61.713 443.517 67.412 444.122 70.346 C 443.793 71.622 457.589 69.437 458.717 65.047 L 458.118 64.648 Z\"\r\n            transform=\"matrix(-0.358197, 0.933646, -0.933646, -0.358197, 675.909363, -330.092224)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 69.406 148.964 C 69.465 150.656 68.232 145.603 68.072 141.043 C 68.646 135.532 77.385 136.178 76.811 141.689 C 76.639 143.87 74.142 151.705 74.314 149.524 L 69.406 148.964 Z\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 77.637 154.411 C 77.696 156.103 76.463 151.05 76.303 146.49 C 76.877 140.979 85.616 141.625 85.042 147.136 C 84.87 149.317 82.373 157.152 82.545 154.971 L 77.637 154.411 Z\"\r\n            transform=\"matrix(0.619172, 0.785255, -0.785255, 0.619172, 147.736832, -6.612727)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 78.843 164.098 C 78.902 165.79 77.669 160.737 77.509 156.177 C 78.083 150.666 86.822 151.312 86.248 156.823 C 86.076 159.004 83.579 166.839 83.751 164.658 L 78.843 164.098 Z\"\r\n            transform=\"matrix(-0.203315, 0.979113, -0.979113, -0.203315, 253.922379, 110.778587)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 72.091 171.178 C 72.15 172.87 70.917 167.817 70.757 163.257 C 71.331 157.746 80.07 158.392 79.496 163.903 C 79.324 166.084 76.827 173.919 76.999 171.738 L 72.091 171.178 Z\"\r\n            transform=\"matrix(-0.90087, 0.434088, -0.434088, -0.90087, 214.792465, 282.499512)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 62.313 169.66 C 62.372 171.352 61.139 166.299 60.979 161.739 C 61.553 156.228 70.292 156.874 69.718 162.385 C 69.546 164.566 67.049 172.401 67.221 170.22 L 62.313 169.66 Z\"\r\n            transform=\"matrix(-0.873502, -0.48682, 0.48682, -0.873502, 42.492275, 339.555542)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 57.304 161.482 C 57.363 163.174 56.13 158.121 55.97 153.561 C 56.544 148.05 65.283 148.696 64.709 154.207 C 64.537 156.388 62.04 164.223 62.212 162.042 L 57.304 161.482 Z\"\r\n            transform=\"matrix(-0.18878, -0.982019, 0.982019, -0.18878, -81.526184, 244.811539)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 60.717 152.152 C 60.776 153.844 59.543 148.791 59.383 144.231 C 59.957 138.72 68.696 139.366 68.122 144.877 C 67.95 147.058 65.453 154.893 65.625 152.712 L 60.717 152.152 Z\"\r\n            transform=\"matrix(0.710327, -0.703872, 0.703872, 0.710327, -84.821243, 87.39238)\"\r\n          ></path>\r\n          <ellipse\r\n            fill=\"url(#gradient-3-1)\"\r\n            cx=\"71.256\"\r\n            cy=\"155.039\"\r\n            rx=\"6.846\"\r\n            ry=\"6.846\"\r\n          ></ellipse>\r\n\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 96.724 154.709 C 96.772 156.081 95.772 151.983 95.642 148.284 C 96.107 143.814 103.195 144.338 102.73 148.808 C 102.59 150.577 100.565 156.932 100.705 155.163 L 96.724 154.709 Z\"\r\n            transform=\"matrix(0.911287, -0.411771, 0.411771, 0.911287, -53.100052, 54.182304)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 104.626 155.986 C 104.674 157.358 103.674 153.26 103.544 149.561 C 104.009 145.091 111.097 145.615 110.632 150.085 C 110.492 151.854 108.467 158.209 108.607 156.44 L 104.626 155.986 Z\"\r\n            transform=\"matrix(0.887589, 0.460636, -0.460636, 0.887589, 81.873093, -32.291763)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 108.753 162.744 C 108.801 164.116 107.801 160.018 107.671 156.319 C 108.137 151.849 115.225 152.373 114.759 156.843 C 114.62 158.612 112.594 164.967 112.734 163.198 L 108.753 162.744 Z\"\r\n            transform=\"matrix(0.217892, 0.975973, -0.975973, 0.217892, 241.547195, 15.302182)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 106.127 170.231 C 106.174 171.604 105.174 167.505 105.045 163.807 C 105.51 159.337 112.598 159.861 112.133 164.331 C 111.993 166.1 109.968 172.454 110.107 170.685 L 106.127 170.231 Z\"\r\n            transform=\"matrix(-0.642207, 0.766531, -0.766531, -0.642207, 305.471985, 189.113068)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 98.393 172.375 C 98.441 173.747 97.441 169.649 97.311 165.95 C 97.776 161.48 104.864 162.004 104.399 166.474 C 104.259 168.243 102.234 174.598 102.374 172.829 L 98.393 172.375 Z\"\r\n            transform=\"matrix(-0.99647, -0.08395, 0.08395, -0.99647, 187.272873, 343.859528)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 91.959 168.004 C 92.007 169.376 91.007 165.278 90.877 161.579 C 91.343 157.109 98.431 157.633 97.965 162.103 C 97.826 163.872 95.8 170.227 95.94 168.458 L 91.959 168.004 Z\"\r\n            transform=\"matrix(-0.5764, -0.817168, 0.817168, -0.5764, 15.156405, 335.099548)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 91.366 159.967 C 91.414 161.34 90.414 157.241 90.284 153.543 C 90.75 149.073 97.838 149.597 97.372 154.067 C 97.233 155.836 95.208 162.191 95.347 160.422 L 91.366 159.967 Z\"\r\n            transform=\"matrix(0.357478, -0.933922, 0.933922, 0.357478, -85.010956, 187.605362)\"\r\n          ></path>\r\n          <ellipse\r\n            fill=\"url(#gradient-3-2)\"\r\n            cx=\"102.989\"\r\n            cy=\"158.63\"\r\n            rx=\"5.553\"\r\n            ry=\"5.553\"\r\n            transform=\"matrix(0.911287, -0.411771, 0.411771, 0.911287, -57.028881, 57.061962)\"\r\n          ></ellipse>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 120.921 162.025 C 120.95 163.177 120.149 159.737 120.069 156.632 C 120.49 152.88 126.388 153.32 125.967 157.072 C 125.837 158.557 124.102 163.891 124.232 162.406 L 120.921 162.025 Z\"\r\n            transform=\"matrix(0.635467, -0.772128, 0.772128, 0.635467, -77.415657, 152.716415)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 127.366 160.129 C 127.417 161.28 126.55 157.842 126.411 154.738 C 126.761 150.988 132.671 151.428 132.321 155.178 C 132.219 156.662 130.585 161.994 130.687 160.509 L 127.366 160.129 Z\"\r\n            transform=\"matrix(0.999535, 0.030487, -0.030487, 0.999535, 4.829881, -3.871485)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 132.901 163.702 C 132.947 164.843 132.089 161.435 131.964 158.36 C 132.336 154.643 138.297 155.079 137.925 158.796 C 137.816 160.266 136.14 165.55 136.25 164.079 L 132.901 163.702 Z\"\r\n            transform=\"matrix(0.621213, 0.783642, -0.783642, 0.621213, 176.546432, -45.126858)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 133.641 170.322 C 133.666 171.468 132.87 168.045 132.799 164.958 C 133.233 161.225 139.16 161.662 138.726 165.395 C 138.591 166.873 136.833 172.178 136.967 170.701 L 133.641 170.322 Z\"\r\n            transform=\"matrix(-0.235944, 0.971767, -0.971767, -0.235944, 329.766052, 74.045151)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 128.721 174.793 C 128.763 175.947 127.925 172.5 127.811 169.389 C 128.189 165.63 134.081 166.071 133.702 169.83 C 133.589 171.318 131.917 176.663 132.03 175.175 L 128.721 174.793 Z\"\r\n            transform=\"matrix(-0.933, 0.359876, -0.359876, -0.933, 314.346649, 283.691101)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 122.324 173.806 C 122.377 174.951 121.5 171.532 121.356 168.446 C 121.704 164.716 127.647 165.153 127.299 168.883 C 127.2 170.359 125.563 175.661 125.663 174.185 L 122.324 173.806 Z\"\r\n            transform=\"matrix(-0.873238, -0.487293, 0.487293, -0.873238, 149.996033, 379.31839)\"\r\n          ></path>\r\n          <path\r\n            fill=\"rgb(66, 246, 255)\"\r\n            d=\"M 118.841 167.921 C 118.872 169.063 118.06 165.652 117.975 162.574 C 118.397 158.854 124.346 159.29 123.925 163.01 C 123.796 164.483 122.052 169.772 122.181 168.299 L 118.841 167.921 Z\"\r\n            transform=\"matrix(-0.091552, -0.9958, 0.9958, -0.091552, -31.549185, 299.766205)\"\r\n          ></path>\r\n          <ellipse\r\n            fill=\"url(#gradient-3-3)\"\r\n            cx=\"102.989\"\r\n            cy=\"158.63\"\r\n            rx=\"4.624\"\r\n            ry=\"4.661\"\r\n            transform=\"matrix(0.635467, -0.772128, 0.766331, 0.642511, -58.520515, 141.600296)\"\r\n          ></ellipse>\r\n          {/*<rect\r\n            x=\"-0.29\"\r\n            y=\"268.168\"\r\n            width=\"500.361\"\r\n            height=\"232.642\"\r\n            fill=\"url(#gradient-white-clear)\"\r\n          ></rect>*/}\r\n        </g>\r\n\r\n        <text\r\n          fill=\"var(--theme-white)\"\r\n          fontFamily=\"'Jura', sans-serif\"\r\n          fontSize={24}\r\n          x=\"180\"\r\n          y=\"25\"\r\n        >\r\n          Justin Gist\r\n        </text>\r\n        {/*<text\r\n          fill=\"var(--theme-white)\"\r\n          fontFamily=\"'Jura', sans-serif\"\r\n          fontSize={18}\r\n          x=\"230\"\r\n          y=\"100\"\r\n        >\r\n          Designer\r\n        </text>\r\n        <text\r\n          fill=\"var(--theme-white)\"\r\n          fontFamily=\"'Jura', sans-serif\"\r\n          fontSize={18}\r\n          x=\"170\"\r\n          y=\"160\"\r\n        >\r\n          UI/UX Developer\r\n        </text>*/}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\nexport default DesignBackground;\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\SalesTheme\\SalesTheme.tsx",["239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261"],"import Icon from \"../../../components/Icon/Icon\";\r\nimport { GlobalThemes, useWindowDimensions } from \"../../../ThemeManager\";\r\nimport lolipop from \"../../../assets/lolipop.jpg\";\r\nimport candy from \"../../../assets/candy.jpg\";\r\nimport candy2 from \"../../../assets/candy2.jpg\";\r\nimport candy3 from \"../../../assets/candy3.jpg\";\r\nimport candy4 from \"../../../assets/candy4.jpg\";\r\nimport chocolate from \"../../../assets/chocolate.jpg\";\r\nimport cakeBalls from \"../../../assets/cakeBalls.jpg\";\r\nimport candyShop from \"../../../assets/candyShop.jpeg\";\r\nimport candyShop2 from \"../../../assets/candyShop2.jpg\";\r\nimport candyShop3 from \"../../../assets/candyShop3.jpg\";\r\nimport chocolate2 from \"../../../assets/chocolate2.jpg\";\r\nimport chocolate3 from \"../../../assets/chocolate3.jpg\";\r\nimport chocolate4 from \"../../../assets/chocolate4.jpg\";\r\nimport { nanoid } from \"nanoid\";\r\nimport \"./SalesTheme.scss\";\r\nimport { Dispatch, SetStateAction, useEffect, useRef, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport CartComponent from \"../../../components/CartComponent\";\r\nexport const getRandomKey = () => {\r\n  return nanoid();\r\n};\r\nenum SalesPage {\r\n  Welcome,\r\n  Selection,\r\n  About,\r\n}\r\ninterface iPurchase {\r\n  title: string;\r\n  description: string;\r\n  img: any;\r\n  price: number;\r\n}\r\nconst SalesTheme = ({}: {}) => {\r\n  const [subPage, setSubPage] = useState<SalesPage>(SalesPage.Welcome);\r\n  const [cartItems, setCartItems] = useState<any[]>([]);\r\n  const [animationOverlay, setAnimationOverlay] = useState<any>();\r\n\r\n  const chocolates: iPurchase[] = [\r\n    {\r\n      title: \"Truffle Box\",\r\n      img: chocolate,\r\n      price: 19.95,\r\n      description:\r\n        \"This truffle box is perfect for the berry lover! Made with real fruit, these bite size truffles will exceed your expectations!\",\r\n    },\r\n    {\r\n      title: \"Caramel Box\",\r\n      img: chocolate2,\r\n      price: 29.95,\r\n      description:\r\n        \"The only thing better than Gosanko Chocolate's caramel, is our caramel's topped with Mediterranean Sea Salt or for more colorful look, Pink Himalayan Salt.\",\r\n    },\r\n    {\r\n      title: \"Mystery Box\",\r\n      img: chocolate4,\r\n      price: 24.95,\r\n      description:\r\n        \"Too many to choose from? Can't decide? We'll make the decision for you. This chocolate box will includes 6 different truffles and caramels from our collection.\",\r\n    },\r\n    {\r\n      title: \"Espresso Box\",\r\n      img: chocolate3,\r\n      price: 14.95,\r\n      description:\r\n        \"A caffeine treat of milk, dark and white chocolate covered espresso beans offer a distinctive bold and nutty flavor.\",\r\n    },\r\n  ];\r\n  const candies: iPurchase[] = [\r\n    {\r\n      title: \"You-Pick Candy\",\r\n      img: candy,\r\n      price: 8.95,\r\n      description:\r\n        \"Do you have trouble deciding on what delicious candy to have? Come on in and you don't have to! Pick whatever assortment you like!\",\r\n    },\r\n    {\r\n      title: \"Assorted Candy Box\",\r\n      img: candy2,\r\n      price: 14.95,\r\n      description:\r\n        \"Comes with a wide assortment of gummies, mints, chocolates, hard candies, and many more!\",\r\n    },\r\n    {\r\n      title: \"Jelly Beans\",\r\n      img: candy3,\r\n      price: 4.95,\r\n      description:\r\n        \"A huge bag of assorted jelly beans made with our homemade flavored syrups. Come taste the quality in every bean!\",\r\n    },\r\n    {\r\n      title: \"Dalgona Candy\",\r\n      img: candy4,\r\n      price: 9.95,\r\n      description:\r\n        \"A common Korean candy made with melted sugar and baking soda. We've added our own ingredients to make some of the best we've ever had! A unique taste only found here!\",\r\n    },\r\n  ];\r\n  const [selectedCandy, setSelectedCandy] = useState<string | undefined>(\r\n    undefined\r\n  );\r\n  const [ballElementList, setBallElementList] = useState<any[]>([]);\r\n  const [idCounter, setIdCounter] = useState<number>(0);\r\n  const animateBall = (item: any, rect: any) => {\r\n    if (rect) {\r\n      let newBall = document.createElement(\"div\");\r\n      newBall.classList.add(\"cartBall\");\r\n      newBall.style.left = rect.left + \"px\";\r\n      newBall.style.top = rect.top + \"px\";\r\n      newBall.innerHTML = \"+1\";\r\n      animationOverlay.append(newBall);\r\n      setTimeout(() => {\r\n        setTimeout(() => {\r\n          animationOverlay.removeChild(animationOverlay.children[0]);\r\n        }, 670);\r\n        for (let i = 0; i < animationOverlay.children.length; i++) {\r\n          let child = animationOverlay.children[i];\r\n          if (child.classList.contains(\"animate\") == false) {\r\n            child.classList.add(\"animate\");\r\n            return;\r\n          }\r\n        }\r\n      }, 500);\r\n    }\r\n  };\r\n  const addToCart = (item: any, e: any) => {\r\n    cartItems.push(item);\r\n    setCartItems([...cartItems]);\r\n    if (animationOverlay) {\r\n      animateBall(item, e.target.getBoundingClientRect());\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!animationOverlay)\r\n      setAnimationOverlay(document.getElementById(\"animationOverlay\"));\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <CartComponent cartItems={cartItems} setCartItems={setCartItems} />\r\n      <div className=\"salesTopBar\">\r\n        <div\r\n          className={\r\n            \"topBarOptionBackground \" +\r\n            (subPage === SalesPage.Welcome ? \" selected\" : \"\")\r\n          }\r\n          onClick={() => setSubPage(SalesPage.Welcome)}\r\n        >\r\n          <div className=\"topBarOption headline four textPrimary\">Welcome</div>\r\n        </div>\r\n        <div\r\n          className={\r\n            \"topBarOptionBackground \" +\r\n            (subPage === SalesPage.Selection ? \" selected\" : \"\")\r\n          }\r\n          onClick={() => setSubPage(SalesPage.Selection)}\r\n        >\r\n          <div className=\"topBarOption headline four textPrimary\">\r\n            Selection\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={\r\n            \"topBarOptionBackground \" +\r\n            (subPage === SalesPage.About ? \" selected\" : \"\")\r\n          }\r\n          onClick={() => setSubPage(SalesPage.About)}\r\n        >\r\n          <div className=\"topBarOption headline four textPrimary\">Story</div>\r\n        </div>\r\n      </div>\r\n      {subPage === SalesPage.Welcome && (\r\n        <div className={\"salesContainer \"}>\r\n          <div className=\"background\">\r\n            <Icon icon=\"SalesLeftBackground\" viewBox=\"0 0 100 500\" />\r\n            <Icon icon=\"SalesRightBackground\" viewBox=\"0 0 100 500\" />\r\n          </div>\r\n          <div className=\"bodyContainer\">\r\n            <div className=\"salesContent\" style={{ marginTop: 240 }}>\r\n              <div className=\"flex\">\r\n                <div className=\"headline one candy\">Candy</div>\r\n                <div className=\"shop\">\r\n                  <div className=\"headline one \">Shop</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"headline two\">Bringing you more candy!</div>\r\n              <a\r\n                className=\"designButton funButton\"\r\n                onClick={() => setSubPage(SalesPage.Selection)}\r\n              >\r\n                Get Candy!\r\n              </a>\r\n            </div>\r\n            <div className=\"pictureContent\">\r\n              <div className=\"flexColumn\">\r\n                <div className=\"headline one textTitle\">Santa's Elves</div>\r\n                <div className=\"headline four textSecondary\">\r\n                  This week we have been visited by Santa's Elves! They've\r\n                  brought all their favorite treats along with them!\r\n                </div>\r\n              </div>\r\n              <img src={lolipop} />\r\n              <img src={candy} />\r\n              <div className=\"flexColumn\">\r\n                <div className=\"headline one textTitle\">Kid's Day</div>\r\n                <div className=\"headline four textSecondary\">\r\n                  Come on down with the whole family! We've setup stations for\r\n                  all the kids to learn how candy is made and even make their\r\n                  own!\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"pictureContent\">\r\n              <div className=\"flexColumn\">\r\n                <div className=\"headline one textTitle\">\r\n                  Chocolate Lovers Day\r\n                </div>\r\n                <div className=\"headline four textSecondary\">\r\n                  Come in and explore the world of chocolate. We've set up\r\n                  booths with different chocolate vendors from around the world\r\n                  for you to come in and taste!\r\n                </div>\r\n              </div>\r\n              <img src={chocolate} />\r\n              <img src={cakeBalls} />\r\n              <div className=\"flexColumn\">\r\n                <div className=\"headline one textTitle\">\r\n                  Cake Ball Decorating\r\n                </div>\r\n                <div className=\"headline four textSecondary\">\r\n                  Come on in and have some fun with the whole family! We have\r\n                  many different flavors and materials to decorate with so bring\r\n                  the kids!\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"videoContent\">\r\n              <div className=\"headline four\">\r\n                Check out this candy making video we made to show you the\r\n                dedication we take to the whole process!\r\n              </div>\r\n              <iframe\r\n                width=\"560\"\r\n                height=\"315\"\r\n                src=\"https://www.youtube.com/embed/dnCmOc6EAHI\"\r\n                title=\"YouTube video player\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen={true}\r\n              ></iframe>\r\n            </div>\r\n            <div className=\"videoContent\">\r\n              <div className=\"headline four textPlaceholder\">\r\n                Come check out our fine selection of candies and chocolates!\r\n              </div>\r\n              <a\r\n                className=\"designButton funButton\"\r\n                onClick={() => setSubPage(SalesPage.Selection)}\r\n              >\r\n                Get Candy!\r\n              </a>\r\n            </div>\r\n            <div className=\"footer\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {subPage === SalesPage.Selection && (\r\n        <div className={\"salesContainer \"}>\r\n          <div className=\"background\">\r\n            <Icon icon=\"SalesLeftBackground\" viewBox=\"0 0 100 500\" />\r\n            <Icon icon=\"SalesRightBackground\" viewBox=\"0 0 100 500\" />\r\n          </div>\r\n          <div className=\"bodyContainer\">\r\n            <div className=\"salesContent\" style={{ marginTop: 240 }}>\r\n              <div className=\"flex\">\r\n                <div className=\"headline one candy\">Our</div>\r\n                <div className=\"shop\">\r\n                  <div className=\"headline one \">Selection</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"headline one textTitle\">Chocolates</div>\r\n              {chocolates.map((item) => {\r\n                return (\r\n                  <CandyCard\r\n                    item={item}\r\n                    key={getRandomKey()}\r\n                    addToCart={addToCart}\r\n                    setSelectedCandy={setSelectedCandy}\r\n                    parentSelectedCandy={selectedCandy}\r\n                  />\r\n                );\r\n              })}\r\n              <div className=\"headline one textPrimary\">Candy</div>\r\n              {candies.map((item) => {\r\n                return (\r\n                  <CandyCard\r\n                    item={item}\r\n                    key={getRandomKey()}\r\n                    addToCart={addToCart}\r\n                    setSelectedCandy={setSelectedCandy}\r\n                    parentSelectedCandy={selectedCandy}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <div className=\"footer\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {subPage === SalesPage.About && (\r\n        <div className={\"salesContainer About\"}>\r\n          <div className=\"background\">\r\n            <Icon icon=\"SalesLeftBackground\" viewBox=\"0 0 100 500\" />\r\n            <Icon icon=\"SalesRightBackground\" viewBox=\"0 0 100 500\" />\r\n          </div>\r\n          <div className=\"bodyContainer\">\r\n            <div className=\"salesContent\" style={{ marginTop: 240 }}>\r\n              <div className=\"flex\">\r\n                <div className=\"headline one candy\">Our</div>\r\n                <div className=\"shop\">\r\n                  <div className=\"headline one \">Story</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"quote\">\r\n                <div className=\"headline two\">\r\n                  \"It's about hardwork and dedication.\"{\" \"}\r\n                </div>\r\n                <div className=\"headline four textPlaceholder\">\r\n                  - Granddad Keber\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"pictureContent\">\r\n              <img src={candyShop} />\r\n              <div className=\"flexColumn\">\r\n                <div className=\"headline four textSecondary\">\r\n                  In November 2008, Karen Keber opened up Candy Shop in Market\r\n                  Square downtown Houlton, ME. The store was named for Karen's\r\n                  late husband, Willy, and the idea for the candy store was\r\n                  conceived as a way for her, a widow to work and care for her\r\n                  three young children at the same time. She worked in the store\r\n                  while they were at school and when they were home from school,\r\n                  they helped out in the shoppe. It was a great way for the\r\n                  family to be together while they made their living.\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flexColumn\">\r\n                <div className=\"headline four textSecondary\">\r\n                  When opening the store, Karen wanted customers to feel as\r\n                  though they were traveling back in time to an old-fashioned,\r\n                  specialty candy store. Aside from making much of the candy\r\n                  herself, she stocked the shop with candy that most people\r\n                  haven't seen in years and with other kinds of candy that most\r\n                  people don't even know exist.\r\n                </div>\r\n              </div>\r\n              <img src={candyShop2} />\r\n              <img src={candyShop3} />\r\n              <div className=\"flexColumn\">\r\n                <div className=\"headline four textSecondary\">\r\n                  In August of 2014, Karen and her new husband Matt Sutton\r\n                  purchased a building at 57 Bay View Street in the charming\r\n                  downtown area of Camden, ME. The building was completely\r\n                  renovated and turned into a beautiful candy shoppe that opened\r\n                  its doors on July 4, 2015.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"salesContent\" style={{ marginTop: 240 }}>\r\n              <div className=\"quote\">\r\n                <div className=\"headline two\">\r\n                  \"A job isn't finished until it's done.\"{\" \"}\r\n                </div>\r\n                <div className=\"headline four textPlaceholder\">\r\n                  - Granddad Keber\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"videoContent\">\r\n              <div className=\"headline four textPlaceholder\">\r\n                Come check out our fine selection of candies and chocolates!\r\n              </div>\r\n              <a\r\n                className=\"designButton funButton\"\r\n                onClick={() => setSubPage(SalesPage.Selection)}\r\n              >\r\n                Get Candy!\r\n              </a>\r\n            </div>\r\n            <div className=\"footer\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {ballElementList.map((item) => {\r\n        return item;\r\n      })}\r\n    </>\r\n  );\r\n};\r\nexport default SalesTheme;\r\nconst CandyCard = ({\r\n  item,\r\n  addToCart,\r\n  setSelectedCandy,\r\n  parentSelectedCandy,\r\n}: {\r\n  item: any;\r\n  addToCart: any;\r\n  setSelectedCandy: Dispatch<SetStateAction<string | undefined>>;\r\n  parentSelectedCandy: string | undefined;\r\n}) => {\r\n  const dimensions = useWindowDimensions();\r\n  const [iSelectedCandy, setInnerSC] = useState<string | undefined>();\r\n  const setCandy = (value: string | undefined) => {\r\n    if (iSelectedCandy != value) {\r\n      setSelectedCandy(value);\r\n      setInnerSC(value);\r\n    } else {\r\n      setSelectedCandy(undefined);\r\n      setInnerSC(undefined);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setInnerSC(parentSelectedCandy);\r\n  }, []);\r\n  return !dimensions.isMobile ? (\r\n    <div className=\"candyCardContainer\" key={getRandomKey()}>\r\n      <div className=\"candyCardBackground\">\r\n        <div className=\"candyCard\">\r\n          <div\r\n            className=\"imgContainer\"\r\n            onClick={() => {\r\n              setCandy(item.title);\r\n            }}\r\n          >\r\n            <div className=\"descriptionCardPositioner\">\r\n              <div className=\"descriptionCard\">\r\n                <div className=\"headline four textSecondary\">\r\n                  {item.description}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <img\r\n              src={item.img}\r\n              key={getRandomKey()}\r\n              className={`unactiveImg ${\r\n                iSelectedCandy === item.title ? \" activeImg\" : \"\"\r\n              }`}\r\n            />\r\n            <div className=\"readMore\">\r\n              {iSelectedCandy === item.title ? \"Close\" : \"Read More\"}\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"flex column gradientButtonBrown\"\r\n            onClick={(e) => {\r\n              setCandy(undefined);\r\n              addToCart(item, e);\r\n            }}\r\n          >\r\n            <div className=\"headline four textPrimary\">{item.title}</div>\r\n            <div className=\"headline three\">${item.price}</div>\r\n            <div className=\"addButton\">\r\n              <Icon icon=\"Plus\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"mobileCardContainer\" key={getRandomKey()}>\r\n      <div className=\"candyCardBackground\">\r\n        <div className=\"candyCard\">\r\n          <div\r\n            className=\"imgContainer\"\r\n            onClick={() => {\r\n              setCandy(item.title);\r\n            }}\r\n          >\r\n            <div className=\"descriptionCardPositioner\">\r\n              <div className=\"descriptionCard\">\r\n                <div className=\"headline four textSecondary\">\r\n                  {item.description}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <img\r\n              src={item.img}\r\n              key={getRandomKey()}\r\n              className={`unactiveImg ${\r\n                iSelectedCandy === item.title ? \" activeImg\" : \"\"\r\n              }`}\r\n            />\r\n            <div className=\"readMore\">\r\n              {iSelectedCandy === item.title\r\n                ? \"View Image\"\r\n                : \"View Description\"}\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"flex gradientButtonBrown\"\r\n            onClick={(e) => {\r\n              setCandy(undefined);\r\n              addToCart(item, e);\r\n            }}\r\n          >\r\n            <div className=\"flex column\">\r\n              <div className=\"headline four textPrimary\">{item.title}</div>\r\n              <div className=\"headline three\">${item.price}</div>\r\n            </div>\r\n\r\n            <div className=\"addButton\">\r\n              <Icon icon=\"Plus\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\ResumePage\\ResumePage.tsx",["262","263","264","265","266","267"],"import { useContext, useState } from \"react\";\r\nimport DesignBackground from \"../../../components/BezierBackground/DesignBackground\";\r\nimport \"./ResumePage.scss\";\r\nimport tacoImage from \"../../../assets/taco.jpg\";\r\nimport hallowImage from \"../../../assets/hallow.jpg\";\r\nimport spaceImage from \"../../../assets/spaceBackground.png\";\r\nimport ParallaxBackground from \"../../../components/BezierBackground/ParallaxBackground\";\r\nimport { ThemeManagerContext } from \"../../../App\";\r\nimport { GlobalThemes } from \"../../../ThemeManager\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport interface iDisplay {\r\n  label: string;\r\n  date?: string;\r\n  image?: string;\r\n  link?: string;\r\n  context?: string[];\r\n  isBulletContext?: boolean;\r\n}\r\nconst ResumePage = () => {\r\n  const navigate = useNavigate();\r\n  const languagesList: iDisplay[] = [\r\n    {\r\n      label: \"Languages\",\r\n      isBulletContext: true,\r\n      context: [\r\n        \"HTML5\",\r\n        \"SCSS\",\r\n        \"JavaScript\",\r\n        \"TypeScript\",\r\n        \"C#\",\r\n        \"SQL\",\r\n        \"KefirJS\",\r\n        \"XAML\",\r\n        \".Net Core\",\r\n      ],\r\n    },\r\n  ];\r\n  const techList: iDisplay[] = [\r\n    {\r\n      label: \"Technologies\",\r\n      isBulletContext: true,\r\n      context: [\r\n        \"React\",\r\n        \"React-Native\",\r\n        \"Angular\",\r\n        \"Vue.js\",\r\n        \"Node.js\",\r\n        \"ASP.NET MVC\",\r\n        \"Redis\",\r\n        \"Docker\",\r\n        \"WPF\",\r\n        \"Material-Ui\",\r\n        \"SSMS\",\r\n        \"AWS\",\r\n        \"Microsoft Suite\",\r\n        \"Xamarin\",\r\n        \"Xamarin-Forms\",\r\n        \"MySQL\",\r\n        \"Ableton Live\",\r\n      ],\r\n    },\r\n  ];\r\n  const jobList: iDisplay[] = [\r\n    {\r\n      label: \"StatusQuote Inc - Developer\",\r\n      date: \"January 2020 - Present\",\r\n      context: [\r\n        \"Constructed a React Native and React Combined Solution that could run both simultaneously. Then split Logic Codebase from the Rendering Codebase of each platform (IOS, Android, Website). This allowed the Logic Codebase to be reused for all platforms.\",\r\n        \"Developed the UI/UX Experience for an Enterprise-Level Investment app built in React Native and React. Used many common controls such as Material, Kendo and many Chart controls for Dashboards.\",\r\n        \"Exchanged communications with many top level clients, such as the Head of a Global Medical Company, to accurately create enterprise level in-house financial applications and organizational software.\",\r\n        \"Created programs that organizes financial data into Government Regulated Excel and PDF documents to be submitted easily. Simplifying a meticulous week-long process, to only a click of a button.\",\r\n        \"Worked on a multitude of projects ranging from React, Angular, .Net MVC, React Native, and many older in-house systems. I adapted quickly to new languages, new techniques and new enviornments to be successful.\",\r\n      ],\r\n    },\r\n    {\r\n      label: \"GhoulCode\",\r\n      date: \"2019 - Present\",\r\n      context: [\r\n        \"Enhanced the UI/UX Experience design of the webpage. Made it so the customers could find products and added visual enhancements that made the site more interactive and fun.\",\r\n      ],\r\n    },\r\n    {\r\n      label: \"ABC Fine Wine & Spirits - Team Manager\",\r\n      date: \"2017 - 2019\",\r\n      context: [\r\n        \"Managed and assigned daily tasks to all team members. Accepted Truck deliveries, Money deposits, and took inventory.\",\r\n      ],\r\n    },\r\n    {\r\n      label: \"Falcon of the Nile Water Solutions - Account Manager\",\r\n      date: \"2008 - 2017\",\r\n      context: [\r\n        \"Managed many commerical Bodies of Water with Clients such as Disney, Universal, Hilton and many more.\",\r\n        \"Trained many employees to abide by Government Water Regulations.\",\r\n      ],\r\n    },\r\n  ];\r\n  const projectList: iDisplay[] = [\r\n    {\r\n      label: \"Tacopocalypse\",\r\n      date: \"2016\",\r\n      link: \"https://store.steampowered.com/app/416530/Tacopocalypse/\",\r\n      image: tacoImage,\r\n      context: [\r\n        \"A Contract Game project with Cherry Pie Games. Produced Foley sound design for a Car Skateboarding Game. This included using crazy tools and effects to produce the grinding and metal sounds needed for the game. I mixed them using Ableton Live and recorded it using a range of field microphones.\",\r\n      ],\r\n    },\r\n    {\r\n      label: \"Hallow\",\r\n      date: \"2015\",\r\n      link: \"https://killerham.itch.io/hollow\",\r\n      image: hallowImage,\r\n      context: [\r\n        \"A 48 Hour Spooky Game Jam Winner using Leap Motion Controller from UltraLeap. I produced real horse noises by visiting a ranch and recording horses running. I then mixed all the sounds I recorded to produce tree falling sounds, horse running loop, and scary dark horror sounds for our spooky game. It produced a fun, immersive and spooky VR Experience using 3D audio effects within Unreal Engine.\",\r\n      ],\r\n    },\r\n    {\r\n      label: \"The Asteroid Dome\",\r\n      date: \"2020 - Present\",\r\n      image: spaceImage,\r\n      context: [\r\n        \"A Mobile Online Multiplayer game that straps the player in the pilots seat as they make there way in the galaxy. Buy, Sell & Trade and battle to increase your standing within the galaxy! Fight other players in pitched PvP action!\",\r\n      ],\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <div className=\"parallax_layer two\">\r\n        <div className=\"hero-section White\"></div>\r\n        <div className=\"hero-section White\">\r\n          <ParallaxBackground />\r\n        </div>\r\n      </div>\r\n      <div className=\"parallax_layer one\">\r\n        <div className=\"hero-section\">\r\n          <DesignBackground />\r\n          <div className=\"titleContainer\">\r\n            <div className=\"flex column\">\r\n              {/*<div\r\n                className=\" \r\n            headline one\"\r\n              >\r\n                Justin Gist\r\n              </div>*/}\r\n              <div\r\n                className=\" \r\n            headline two\"\r\n              >\r\n                Designer\r\n              </div>\r\n              <div\r\n                className=\" \r\n            headline two\"\r\n              >\r\n                UI/UX Developer\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"hero-section B\">\r\n          <div className=\"center \">\r\n            {languagesList.map((job, i) => {\r\n              return <DisplayElement options={job} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"hero-section B\">\r\n          <div className=\" center\">\r\n            {techList.map((job, i) => {\r\n              return <DisplayElement options={job} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"headline one textTitle\">Projects</div>\r\n        <div className=\"hero-section B\">\r\n          <div className=\"center\">\r\n            <JobElement options={projectList[0]} />\r\n          </div>\r\n        </div>\r\n        <div className=\"hero-section C\">\r\n          <div className=\"center\">\r\n            <JobElement options={projectList[1]} />\r\n          </div>\r\n        </div>\r\n        <div className=\"hero-section B\">\r\n          <div className=\"center\">\r\n            <JobElement options={projectList[2]} />\r\n          </div>\r\n        </div>\r\n        <div className=\"hero-section C\" style={{ padding: 0 }}>\r\n          <div className=\"center\">\r\n            <div className=\"headline one textTitle\">Like my designs?</div>\r\n            <button\r\n              className={\"button secondary\"}\r\n              onClick={() => {\r\n                navigate(\"../\" + GlobalThemes.Contact, { replace: true });\r\n              }}\r\n            >\r\n              Contact\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ResumePage;\r\nexport const DisplayElement = ({ options }: { options: iDisplay }) => {\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\" }}\r\n      className={options.link ? \"link\" : \"\"}\r\n      onClick={() => {\r\n        if (options.link) {\r\n          window.open(options.link, \"_blank\");\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"displayContainer \">\r\n        <div className={\"textSecondary headline one \"}>{options.label}</div>\r\n        <div className=\"textPrimary headline four \">{options.date ?? \"\"}</div>\r\n        {options.context && (\r\n          <div\r\n            className={\r\n              options.context.length > 6 ? \"gridContext\" : \"fullContext\"\r\n            }\r\n          >\r\n            {options.context &&\r\n              options.context.map((job, i) => {\r\n                return (\r\n                  <li\r\n                    style={{\r\n                      marginBottom: options.isBulletContext ? \"4px\" : \"16px\",\r\n                    }}\r\n                    key={i}\r\n                  >\r\n                    <div className={\"textTeritary headline three \"}>{job}</div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {options.image && <img className=\"jobImage \" src={options.image} />}\r\n    </div>\r\n  );\r\n};\r\nexport const JobElement = ({ options }: { options: iDisplay }) => {\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\" }}\r\n      className={options.link ? \"link\" : \"\"}\r\n      onClick={() => {\r\n        if (options.link) {\r\n          window.open(options.link, \"_blank\");\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"jobElementContainer \">\r\n        <div className={\"textTitle headline one \"}>{options.label}</div>\r\n        <div className=\"textSecondary headline three \">\r\n          {options.date ?? \"\"}\r\n        </div>\r\n        {options.context && (\r\n          <div\r\n            className={\r\n              options.context.length > 6 ? \"gridContext\" : \"fullContext\"\r\n            }\r\n          >\r\n            {options.context &&\r\n              options.context.map((job, i) => {\r\n                return (\r\n                  <li\r\n                    style={{\r\n                      marginBottom: options.isBulletContext ? \"4px\" : \"16px\",\r\n                    }}\r\n                    key={i}\r\n                  >\r\n                    <div className={\"textTeritary headline four \"}>{job}</div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </div>\r\n        )}\r\n        {options.image && <img className=\"jobImage \" src={options.image} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\EnterpriseTheme\\EnterpriseTheme.tsx",["268","269","270","271","272","273"],"import { Component } from \"react\";\r\nimport Chart from \"react-google-charts\";\r\nimport { GlobalThemes } from \"../../../ThemeManager\";\r\nimport stockProfile from \"../../../assets/stockProfile.jpeg\";\r\nimport news1 from \"../../../assets/news1.jpg\";\r\nimport news2 from \"../../../assets/news2.jpg\";\r\nimport news3 from \"../../../assets/news3.png\";\r\nimport \"./EnterpriseTheme.scss\";\r\nimport TutorialControl from \"../../../components/TutorialComponent/TutorialControl\";\r\nimport Icon from \"../../../components/Icon/Icon\";\r\nconst TeslaLogo = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"80\"\r\n    height=\"80\"\r\n    viewBox=\"0 0 345.859 500\"\r\n  >\r\n    <g fill=\"#fff\">\r\n      <path d=\"M266.601 403.28v21.912h7.027v-14.589h25.575v14.589h7.022v-21.874l-39.624-.038M272.845 396.192h27.02c3.753-.746 6.544-4.059 7.331-7.263h-41.681c.779 3.206 3.611 6.517 7.33 7.263\" />\r\n    </g>\r\n    <path\r\n      d=\"M245.319 425.206c3.543-1.502 5.449-4.1 6.18-7.141h-31.518l.021-29.117-7.065.02v36.238h32.382M160.398 396.094h24.954c3.762-1.093 6.921-3.959 7.691-7.136h-39.641v21.415h32.444v7.515l-25.449.021c-3.988 1.112-7.37 3.79-9.057 7.327l2.062-.038h39.415v-21.944h-32.42v-7.16\"\r\n      fill=\"#fff\"\r\n    />\r\n    <g fill=\"#fff\">\r\n      <path d=\"M98.795 396.163h27.011c3.758-.749 6.551-4.059 7.334-7.266H91.461c.778 3.207 3.612 6.517 7.334 7.266M98.795 410.485h27.011c3.758-.741 6.551-4.054 7.334-7.263H91.461c.778 3.211 3.612 6.522 7.334 7.263M98.795 425.202h27.011c3.758-.747 6.551-4.059 7.334-7.264H91.461c.778 3.208 3.612 6.517 7.334 7.264\" />\r\n    </g>\r\n    <path\r\n      d=\"M28.524 388.986c.812 3.167 3.555 6.403 7.316 7.215h11.37l.58.229v28.691h7.1V396.43l.646-.229h11.38c3.804-.98 6.486-4.048 7.284-7.215v-.07H28.524v.07\"\r\n      fill=\"#fff\"\r\n    />\r\n    <g fill=\"#fff\">\r\n      <path d=\"M173.146 317.299l35.477-199.519c33.814 0 44.48 3.708 46.021 18.843 0 0 22.685-8.458 34.125-25.636-44.646-20.688-89.505-21.621-89.505-21.621l-26.176 31.882.059-.004-26.177-31.883s-44.86.934-89.5 21.622c11.431 17.178 34.124 25.636 34.124 25.636 1.549-15.136 12.202-18.844 45.79-18.868l35.762 199.548\" />\r\n      <path d=\"M173.132 80.157c36.09-.276 77.398 5.583 119.687 24.014 5.652-10.173 7.105-14.669 7.105-14.669-46.228-18.289-89.519-24.548-126.797-24.705-37.277.157-80.566 6.417-126.787 24.705 0 0 2.062 5.538 7.1 14.669 42.28-18.431 83.597-24.29 119.688-24.014h.004\" />\r\n    </g>\r\n  </svg>\r\n);\r\nconst AmazonLogo = (\r\n  <svg\r\n    height=\"32\"\r\n    viewBox=\"163.5 263.1 285 85.8\"\r\n    width=\"80\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <g clip-rule=\"evenodd\" fill-rule=\"evenodd\">\r\n      <path d=\"m340.3 330.2c-16.5 12.2-40.5 18.7-61.2 18.7-29 0-55-10.7-74.8-28.5-1.5-1.4-.2-3.3 1.7-2.2 21.3 12.4 47.6 19.8 74.8 19.8 18.3 0 38.5-3.8 57.1-11.7 2.8-1.1 5.1 1.9 2.4 3.9z\" />\r\n      <path d=\"m347.2 322.3c-2.1-2.7-14-1.3-19.3-.6-1.6.2-1.9-1.2-.4-2.2 9.5-6.7 25-4.7 26.8-2.5s-.5 17.8-9.4 25.2c-1.4 1.1-2.7.5-2.1-1 2-5 6.5-16.1 4.4-18.9z\" />\r\n      <path d=\"m328.2 272.5v-6.5c0-1 .7-1.6 1.6-1.6h29c.9 0 1.7.7 1.7 1.6v5.5c0 .9-.8 2.1-2.2 4.1l-15 21.4c5.6-.1 11.5.7 16.5 3.5 1.1.6 1.4 1.6 1.5 2.5v6.9c0 1-1 2.1-2.1 1.5-8.9-4.7-20.8-5.2-30.6.1-1 .5-2.1-.5-2.1-1.5v-6.6c0-1 0-2.8 1.1-4.4l17.4-24.9h-15.1c-.9 0-1.7-.7-1.7-1.6zm-105.7 40.3h-8.8c-.8-.1-1.5-.7-1.6-1.5v-45.2c0-.9.8-1.6 1.7-1.6h8.2c.9 0 1.5.7 1.6 1.5v5.9h.2c2.1-5.7 6.2-8.4 11.6-8.4 5.5 0 9 2.7 11.4 8.4 2.1-5.7 7-8.4 12.2-8.4 3.7 0 7.7 1.5 10.2 5 2.8 3.8 2.2 9.3 2.2 14.2v28.6c0 .9-.8 1.6-1.7 1.6h-8.7c-.9-.1-1.6-.8-1.6-1.6v-24c0-1.9.2-6.7-.2-8.5-.7-3-2.6-3.9-5.2-3.9-2.1 0-4.4 1.4-5.3 3.7s-.8 6.1-.8 8.7v24c0 .9-.8 1.6-1.7 1.6h-8.8c-.9-.1-1.6-.8-1.6-1.6v-24c0-5 .8-12.5-5.4-12.5-6.3 0-6.1 7.2-6.1 12.5v24c-.1.8-.8 1.5-1.8 1.5zm163-49.3c13.1 0 20.2 11.2 20.2 25.5 0 13.8-7.8 24.8-20.2 24.8-12.8 0-19.8-11.2-19.8-25.2-.1-14.1 7-25.1 19.8-25.1zm0 9.3c-6.5 0-6.9 8.9-6.9 14.4s-.1 17.3 6.8 17.3c6.8 0 7.2-9.5 7.2-15.3 0-3.8-.2-8.4-1.3-12-1-3.2-3-4.4-5.8-4.4zm37.1 40h-8.8c-.9-.1-1.6-.8-1.6-1.6v-45.3c.1-.8.8-1.5 1.7-1.5h8.2c.8 0 1.4.6 1.6 1.3v6.9h.2c2.5-6.2 5.9-9.1 12-9.1 3.9 0 7.8 1.4 10.3 5.3 2.3 3.6 2.3 9.7 2.3 14.1v28.5c-.1.8-.8 1.4-1.7 1.4h-8.8c-.8-.1-1.5-.7-1.6-1.4v-24.6c0-5 .6-12.2-5.5-12.2-2.1 0-4.1 1.4-5.1 3.6-1.2 2.8-1.4 5.5-1.4 8.6v24.4c-.1.9-.9 1.6-1.8 1.6zm-117.5-21.6c0 3.4.1 6.3-1.6 9.4-1.4 2.5-3.6 4-6.1 4-3.4 0-5.4-2.6-5.4-6.4 0-7.5 6.7-8.9 13.1-8.9zm8.9 21.5c-.6.5-1.4.6-2.1.2-2.9-2.4-3.5-3.6-5.1-5.9-4.8 4.9-8.3 6.4-14.5 6.4-7.4 0-13.2-4.6-13.2-13.7 0-7.2 3.9-12 9.4-14.4 4.8-2.1 11.5-2.5 16.6-3.1v-1.1c0-2.1.2-4.6-1.1-6.4-1.1-1.6-3.1-2.3-4.9-2.3-3.4 0-6.4 1.7-7.1 5.3-.2.8-.7 1.6-1.5 1.6l-8.5-.9c-.7-.2-1.5-.7-1.3-1.8 2-10.4 11.3-13.5 19.7-13.5 4.3 0 9.9 1.1 13.3 4.4 4.3 4 3.9 9.4 3.9 15.2v13.7c0 4.1 1.7 5.9 3.3 8.2.6.8.7 1.8 0 2.3-1.9 1.5-5.1 4.3-6.9 5.8zm-124.4-21.5c0 3.4.1 6.3-1.6 9.4-1.4 2.5-3.6 4-6.1 4-3.4 0-5.4-2.6-5.4-6.4 0-7.5 6.7-8.9 13.1-8.9zm8.8 21.5c-.6.5-1.4.6-2.1.2-2.9-2.4-3.5-3.6-5.1-5.9-4.8 4.9-8.3 6.4-14.5 6.4-7.4 0-13.2-4.6-13.2-13.7 0-7.2 3.9-12 9.4-14.4 4.8-2.1 11.5-2.5 16.6-3.1v-1.1c0-2.1.2-4.6-1.1-6.4-1.1-1.6-3.1-2.3-4.9-2.3-3.4 0-6.4 1.7-7.1 5.3-.2.8-.7 1.6-1.5 1.6l-8.5-.9c-.7-.2-1.5-.7-1.3-1.8 2-10.4 11.3-13.5 19.7-13.5 4.3 0 9.9 1.1 13.3 4.4 4.3 4 3.9 9.4 3.9 15.2v13.7c0 4.1 1.7 5.9 3.3 8.2.6.8.7 1.8 0 2.3-1.9 1.5-5.1 4.3-6.9 5.8z\" />\r\n    </g>\r\n  </svg>\r\n);\r\nenum InvestmentElementStates {\r\n  Decrease,\r\n  Increase,\r\n  None,\r\n}\r\ninterface iInvestmentCard {\r\n  label: string;\r\n  fullLabel: string;\r\n  tradingAt: number;\r\n  percentChange: number;\r\n  state: InvestmentElementStates;\r\n  logo: JSX.Element;\r\n}\r\nconst investmentCardList: iInvestmentCard[] = [\r\n  {\r\n    label: \"TSLA\",\r\n    fullLabel: \"Tesla Motors, Inc\",\r\n    tradingAt: 246.51,\r\n    percentChange: -1.23,\r\n    state: InvestmentElementStates.Decrease,\r\n    logo: TeslaLogo,\r\n  },\r\n  {\r\n    label: \"FB\",\r\n    fullLabel: \"Facebook, Inc\",\r\n    tradingAt: 189.83,\r\n    percentChange: 2.83,\r\n    state: InvestmentElementStates.Increase,\r\n    logo: AmazonLogo,\r\n  },\r\n  {\r\n    label: \"AMZN\",\r\n    fullLabel: \"Amazon\",\r\n    tradingAt: 220.93,\r\n    percentChange: 0.23,\r\n    state: InvestmentElementStates.None,\r\n    logo: <Icon icon=\"FB\" fontSize={60} />,\r\n  },\r\n];\r\nconst EnterpriseTheme = () => {\r\n  const getPercentSymbolValue = (value: number) => {\r\n    let symbol = \"\";\r\n    if (value > 0) {\r\n      symbol = \"+\";\r\n    } else if (value < 0) {\r\n      symbol = \"-\";\r\n    }\r\n    return symbol + Math.abs(value) + \"%\";\r\n  };\r\n\r\n  const InvestmentCardElement = (props: iInvestmentCard) => (\r\n    <div className={\"investmentCard \" + InvestmentElementStates[props.state]}>\r\n      <div className=\"headline two\">{props.label}</div>\r\n      <div className={\"headline four \"}>{props.fullLabel}</div>\r\n      <div className=\"headline one\">{props.tradingAt}</div>\r\n      <div className=\"headline three\">\r\n        {getPercentSymbolValue(props.percentChange)}\r\n      </div>\r\n      <div className=\"flex\">{props.logo}</div>\r\n    </div>\r\n  );\r\n  return (\r\n    <>\r\n      <div className=\"cardContainer threeCols\">\r\n        {investmentCardList.map((item) => {\r\n          return <InvestmentCardElement {...item} />;\r\n        })}\r\n      </div>\r\n      <div className=\"cardContainer\">\r\n        <div className={\"card Down chart\"}>\r\n          <div className=\"headline two\">Bar Chart</div>\r\n\r\n          <Chart\r\n            className=\"chart\"\r\n            chartType=\"BarChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              [\"City\", \"2010 Population\", \"2000 Population\"],\r\n              [\"New York City, NY\", 8175000, 8008000],\r\n              [\"Los Angeles, CA\", 3792000, 3694000],\r\n              [\"Chicago, IL\", 2695000, 2896000],\r\n              [\"Houston, TX\", 2099000, 1953000],\r\n              [\"Philadelphia, PA\", 1526000, 1517000],\r\n            ]}\r\n            options={{\r\n              title: \"Population of Largest U.S. Cities\",\r\n              chartArea: { width: \"50%\" },\r\n              isStacked: true,\r\n              hAxis: {\r\n                title: \"Total Population\",\r\n                minValue: 0,\r\n              },\r\n              vAxis: {\r\n                title: \"City\",\r\n              },\r\n            }}\r\n            // For tests\r\n            rootProps={{ \"data-testid\": \"3\" }}\r\n          />\r\n        </div>\r\n        <div className=\"card Left chart\">\r\n          <div className=\"headline two\">Line Chart</div>\r\n\r\n          <Chart\r\n            className=\"chart\"\r\n            chartType=\"LineChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              [\"x\", \"dogs\", \"cats\"],\r\n              [0, 0, 0],\r\n              [1, 10, 5],\r\n              [2, 23, 15],\r\n              [3, 17, 9],\r\n              [4, 18, 10],\r\n              [5, 9, 5],\r\n              [6, 11, 3],\r\n              [7, 27, 19],\r\n            ]}\r\n            options={{\r\n              hAxis: {\r\n                title: \"Time\",\r\n              },\r\n              vAxis: {\r\n                title: \"Popularity\",\r\n              },\r\n              series: {\r\n                1: { curveType: \"function\" },\r\n              },\r\n            }}\r\n            rootProps={{ \"data-testid\": \"2\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"cardContainer threeCols\">\r\n        <div className=\"card Left chart\">\r\n          <div className=\"headline two\">Pie Chart</div>\r\n          <Chart\r\n            className=\"chart\"\r\n            chartType=\"PieChart\"\r\n            data={[\r\n              [\"Task\", \"Hours per Day\"],\r\n              [\"Work\", 11],\r\n              [\"Eat\", 2],\r\n              [\"Commute\", 2],\r\n              [\"Watch TV\", 2],\r\n              [\"Sleep\", 7], // CSS-style declaration\r\n            ]}\r\n            options={{\r\n              pieHole: 0.4,\r\n              is3D: false,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <TutorialControl />\r\n    </>\r\n  );\r\n};\r\nexport default EnterpriseTheme;\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\SpookyTheme.tsx",["274","275","276","277"],"import { useRef, useState } from \"react\";\r\nimport Icon from \"../../components/Icon/Icon\";\r\nimport { GlobalThemes, useWindowDimensions } from \"../../ThemeManager\";\r\nimport \"./SpookyTheme.scss\";\r\nenum SpookyPages {\r\n  Tickets,\r\n  Tours,\r\n  About,\r\n  Location,\r\n  Events,\r\n}\r\ninterface SpookyElement {\r\n  label: string;\r\n  iconLeft?: string;\r\n  iconRight?: string;\r\n  bodyText?: string;\r\n  context?: SpookyElement[];\r\n  bulletList?: string[];\r\n}\r\nconst elementsMap: Map<SpookyPages, SpookyElement> = new Map([\r\n  [\r\n    SpookyPages.Location,\r\n    {\r\n      iconLeft: \"Bat\",\r\n      iconRight: \"Skull\",\r\n      label: \"Location\",\r\n      bodyText:\r\n        \"Come and visit one of the worldest spookiest and scariest Haunted Houses in all the land! See frights and terrors like never before!\",\r\n      context: [\r\n        {\r\n          label: \"Located at\",\r\n          bodyText: \"42 Wallaby Way Blaxland NSW 2774, Australia\",\r\n        },\r\n        {\r\n          label: \"Hours\",\r\n          bulletList: [\"M-F: 8:00 PM - 1:00 AM\", \"S-S: 8:00 PM - 3:00 AM\"],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    SpookyPages.About,\r\n    {\r\n      iconLeft: \"Bat\",\r\n      iconRight: \"Skull\",\r\n      label: \"About\",\r\n      bodyText:\r\n        \"Prepare yourself for a Frightseeing Adventure like none other as your resident Ghost Host shares tales both true and truly unnerving of the city’s tumultuous past. Discover the secrets of the Tolomoto Cemetery and the apparition seen playing on the sacred grounds after dark. Could it be the spirit of five-year old James or is it the Ghost Bride, still waiting for her walk down the aisle. Be sure to keep a watchful eye while passing by the old City Gates. You might catch a glimpse of Elizabeth, a child victim of the yellow fever, waving to passersby. And face your fears in the exclusive nighttime experience at Ghoul Tour… Plan to arrive at least 20 minutes early to make time to visit Nightmarish Tour.\",\r\n    },\r\n  ],\r\n  [\r\n    SpookyPages.Events,\r\n    {\r\n      iconLeft: \"Bat\",\r\n      iconRight: \"Skull\",\r\n      label: \"Events\",\r\n      bodyText:\r\n        \"Come and visit one of the worldest spookiest and scariest Haunted Houses in all the land! See frights and terrors like never before!\",\r\n      context: [\r\n        {\r\n          label: \"Oct 31 - Halloween Party\",\r\n          bodyText:\r\n            \"Come and experience the most horrifying and bumping party you've ever been too. A whole event that is fun for the whole family!\",\r\n        },\r\n        {\r\n          label: \"Oct 30 - Movie Night\",\r\n          bodyText:\r\n            \"A truly fun night, where you and your family can come bring a picnic blanket and watch a scary movie on the grounds of a Haunted House! Spooky stuff is bound to happen.\",\r\n        },\r\n        {\r\n          label: \"Oct 28 - Pajama Night\",\r\n          bodyText:\r\n            \"A fun event where you if you come wearing pajama's you get a discount and are entered to win during our Pajama Contest! Bring your cutest PJs!\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    SpookyPages.Tours,\r\n    {\r\n      iconLeft: \"Bat\",\r\n      iconRight: \"Skull\",\r\n      label: \"Tours\",\r\n      bodyText: \"We have several options to scare your pants off!\",\r\n      context: [\r\n        {\r\n          label: \"Spooky Tour\",\r\n          bodyText:\r\n            \"A haunting experience where we commence a seance to speak with the dead.\",\r\n        },\r\n        {\r\n          label: \"Ghoul Tour\",\r\n          bodyText:\r\n            \"A horrifying experience where the tour group is guided through our Haunted House! Room by room of Horrors beyond your wildest imagination!\",\r\n        },\r\n        {\r\n          label: \"Nightmare Tour\",\r\n          bodyText:\r\n            \"A nightmarish guided tour through the entire grounds as you get frightened by our 'other' guests\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    SpookyPages.Tickets,\r\n    {\r\n      iconLeft: \"Bat\",\r\n      iconRight: \"Skull\",\r\n      label: \"Tickets\",\r\n      bodyText:\r\n        \"Come and visit one of the worldest spookiest and scariest Haunted Houses in all the land! See frights and terrors like never before!\",\r\n    },\r\n  ],\r\n]);\r\nconst SpookyTheme = ({}: {}) => {\r\n  const [spookyElement, setSpookyElement] = useState<SpookyElement | undefined>(\r\n    undefined\r\n  );\r\n  const dimensions = useWindowDimensions();\r\n  const changePage = (page: SpookyPages | undefined) => {\r\n    if (page === undefined) {\r\n      setSpookyElement(undefined);\r\n    } else {\r\n      setSpookyElement(elementsMap.get(page));\r\n    }\r\n  };\r\n  const spookyModal = (options: SpookyElement) => (\r\n    <div className=\"spookyModal\">\r\n      <div\r\n        className=\"spookyModalContent\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        <div className=\"spookyIcon left\">\r\n          <Icon icon={options.iconLeft} />\r\n        </div>\r\n        <div\r\n          className=\"spookyIcon right\"\r\n          onClick={() => {\r\n            changePage(undefined);\r\n          }}\r\n        >\r\n          <Icon icon={\"Close\"} fontSize={32} />\r\n        </div>\r\n        <div className=\"spookyIcon bottomRight\">\r\n          <Icon icon={options.iconRight} />\r\n        </div>\r\n        <div className=\"headline one textTitle\">{options.label}</div>\r\n        <div className=\"headline four textPrimary\">{options.bodyText}</div>\r\n        {options.context &&\r\n          options.context.map((item, i) => {\r\n            return (\r\n              <div className=\"context\">\r\n                <div className=\"headline two textTitle\">{item.label}</div>\r\n                <div className=\"headline four textSecondary\">\r\n                  {item.bodyText}\r\n                </div>\r\n                {options.context && i != options.context.length - 1 && <hr />}\r\n                {item.bulletList &&\r\n                  item.bulletList.map((item) => {\r\n                    return (\r\n                      <div className=\"bullet\">\r\n                        <div className=\"headline three textSecondary\">\r\n                          {item}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            );\r\n          })}\r\n        {options.bulletList &&\r\n          options.bulletList.map((item) => {\r\n            return (\r\n              <div className=\"\">\r\n                <div className=\"headline one\">{item}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        {options.label === \"Tickets\" && (\r\n          <div className=\"ticketContainer\">\r\n            <div className=\"ticket\">\r\n              <div className=\"headline three textPrimary\">Spooky Tour</div>\r\n              <div className=\"headline one textTitle\">19.95</div>\r\n              <div\r\n                className=\"headline five textSecondary\"\r\n                onClick={() => {\r\n                  changePage(SpookyPages.Tours);\r\n                }}\r\n              >\r\n                Read More\r\n              </div>\r\n            </div>\r\n            <div className=\"ticket primary\">\r\n              <div className=\"headline three textPrimary\">Ghoul Tour</div>\r\n              <div className=\"headline one textTitle\">49.95</div>\r\n              <div\r\n                className=\"headline five textSecondary\"\r\n                onClick={() => {\r\n                  changePage(SpookyPages.Tours);\r\n                }}\r\n              >\r\n                Read More\r\n              </div>\r\n            </div>\r\n            <div className=\"ticket\">\r\n              <div className=\"headline three textPrimary\">Nightmare Tour</div>\r\n              <div className=\"headline one textTitle\">29.95</div>\r\n              <div\r\n                className=\"headline five textSecondary\"\r\n                onClick={() => {\r\n                  changePage(SpookyPages.Tours);\r\n                }}\r\n              >\r\n                Read More\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <>\r\n      <div className=\"cloud left\">\r\n        <Icon icon=\"Clouds\" viewBox=\"0 0 130 120\" />\r\n      </div>\r\n      <div className=\"cloud right\">\r\n        <Icon icon=\"Clouds\" viewBox=\"0 0 130 120\" />\r\n      </div>\r\n      <div id=\"TitleText\" className=\"headline one\">\r\n        Grimm's Haunted House\r\n      </div>\r\n      <div className=\"spookyContent\">\r\n        <div className=\"background\">\r\n          <svg viewBox=\"0 0 500 500\" width=\"500\" height=\"500\">\r\n            <path\r\n              style={{ fill: \"var(--theme-secondary)\" }}\r\n              d=\"M 93.235 209.272 C 141.807 225.341 174.477 349.054 165.187 493.38 L 309.948 494.665 C 314.123 454.99 319.696 305.33 393.278 167.418 L 93.235 209.272 Z\"\r\n            ></path>\r\n            <polygon\r\n              style={{ fill: \"var(--theme-primary)\" }}\r\n              points=\"16.571 227.412 462.422 163.169 270.117 7.224\"\r\n            ></polygon>\r\n            <polygon\r\n              style={{ fill: \"var(--theme-secondary)\" }}\r\n              points=\"313.648 445.821 484.85 412.906 484.422 430.433 313.221 449.027\"\r\n            ></polygon>\r\n            <polygon\r\n              style={{ fill: \"var(--theme-primary)\" }}\r\n              points=\"454.337 493.906 449.777 403.913 474.371 397.387 466.382 493.863\"\r\n            ></polygon>\r\n            <polygon\r\n              style={{ fill: \"var(--theme-primary)\" }}\r\n              points=\"426.57 493.882 431.532 408.451 411.474 413.905 416.795 493.892\"\r\n            ></polygon>\r\n            <polygon\r\n              style={{ fill: \"var(--theme-primary)\" }}\r\n              points=\"399.251 416.95 383.965 421.01 388.832 493.824 395.696 493.913\"\r\n            ></polygon>\r\n            <polygon\r\n              style={{ fill: \"var(--theme-primary)\" }}\r\n              points=\"373.049 423.91 361.626 426.913 366.738 493.877 370.117 493.836\"\r\n            ></polygon>\r\n            <polygon\r\n              style={{ fill: \"var(--theme-primary)\" }}\r\n              points=\"351.134 429.643 342.889 431.821 345.317 493.866 348.116 493.804\"\r\n            ></polygon>\r\n            <polygon\r\n              style={{ fill: \"var(--theme-primary)\" }}\r\n              points=\"332.217 434.627 326.452 436.197 328.329 493.842 329.741 493.87\"\r\n            ></polygon>\r\n            <path\r\n              style={{ fill: \"var(--theme-secondary)\" }}\r\n              d=\"M 158.944 493.045 L 157.687 468.808 C 155.407 450.881 131.486 448.503 133.157 470.352 L 138.483 493.036 L 158.944 493.045 Z\"\r\n            ></path>\r\n            <path\r\n              style={{ fill: \"var(--theme-secondary)\" }}\r\n              d=\"M 131.008 436.631 L 128.749 472.811 C 125.072 498.549 86.512 501.963 89.206 470.593 L 97.791 436.631 L 131.008 436.631 Z\"\r\n              transform=\"matrix(-1, 0, 0, -1, 220.079291, 929.750882)\"\r\n            ></path>\r\n            <path\r\n              style={{ fill: \"var(--theme-primary)\" }}\r\n              d=\"M 100.565 493.205 L 97.298 442.551 C 91.982 406.519 36.211 401.74 40.108 445.656 L 52.527 493.205 L 100.565 493.205 Z\"\r\n            ></path>\r\n            <text\r\n              style={{\r\n                whiteSpace: \"pre\",\r\n                fill: \"var(--theme-text-title)\",\r\n                fontFamily: \"Luxurious Roman, cursive\",\r\n                fontSize: \"16.8px\",\r\n              }}\r\n              x=\"91.621\"\r\n              y=\"430.07\"\r\n              transform=\"matrix(1.070337, -0.25992, -0.05174, 1.055056, -23.924142, 24.221879)\"\r\n            >\r\n              RIP\r\n            </text>\r\n            <polygon\r\n              style={{ fill: \"var(--theme-secondary)\" }}\r\n              points=\"24.749 493.026 15.038 427.115 18.606 409.723 28.121 423.845 44.622 493.069\"\r\n            ></polygon>\r\n            <g\r\n              className=\"circleWindowNew\"\r\n              onClick={() => changePage(SpookyPages.Tickets)}\r\n            >\r\n              <text\r\n                style={{\r\n                  whiteSpace: \"pre\",\r\n                  fill: \"var(--theme-text-title)\",\r\n                  fontFamily: \"Luxurious Roman, cursive\",\r\n                  fontSize: \"32px\",\r\n                }}\r\n                x=\"228.621\"\r\n                y=\"80.07\"\r\n                transform=\"matrix(1.070337, -0.25992, -0.05174, 1.055056, -23.924142, 24.221879)\"\r\n              >\r\n                Tickets\r\n              </text>\r\n              <ellipse\r\n                style={{\r\n                  fill: \"var(--theme-teritary)\",\r\n                  stroke: \"var(--theme-secondary)\",\r\n                  strokeWidth: \"8px\",\r\n                }}\r\n                cx=\"266.726\"\r\n                cy=\"116.632\"\r\n                rx=\"39.748\"\r\n                ry=\"39.748\"\r\n              ></ellipse>\r\n              <polygon\r\n                style={{\r\n                  stroke: \"var(--theme-black)\",\r\n                  strokeWidth: \"0px\",\r\n                  fill: \"var(--theme-secondary)\",\r\n                }}\r\n                points=\"230.219 128.89 297.573 96.057 302.093 105.929 231.442 132.014\"\r\n              ></polygon>\r\n              <polygon\r\n                style={{\r\n                  stroke: \"var(--theme-black)\",\r\n                  strokeWidth: \"0px\",\r\n                  fill: \"var(--theme-secondary)\",\r\n                }}\r\n                points=\"271.992 153.952 250.133 81.88 257.91 78.996 275.872 152.685\"\r\n              ></polygon>\r\n            </g>\r\n            <g\r\n              className=\"window one\"\r\n              onClick={() => changePage(SpookyPages.Tours)}\r\n            >\r\n              <text\r\n                style={{\r\n                  whiteSpace: \"pre\",\r\n                  fill: \"var(--theme-text-title)\",\r\n                  fontFamily: \"Luxurious Roman, cursive\",\r\n                  fontSize: \"32px\",\r\n                }}\r\n                x=\"168.621\"\r\n                y=\"222.07\"\r\n                transform=\"matrix(1.070337, -0.25992, -0.05174, 1.055056, -23.924142, 24.221879)\"\r\n              >\r\n                Tours\r\n              </text>\r\n              <polygon\r\n                style={{ fill: \"var(--theme-teritary)\" }}\r\n                points=\"166.388 221.839 180.494 272.056 195.637 271.31 188.276 219.338\"\r\n              ></polygon>\r\n              <polygon\r\n                style={{ fill: \"var(--theme-teritary)\" }}\r\n                points=\"181.66 276.555 193.28 314.225 203.022 313.888 196.625 277.03\"\r\n              ></polygon>\r\n              <polygon\r\n                style={{ fill: \"var(--theme-teritary)\" }}\r\n                points=\"206.245 313.722 202.006 277.177 218.96 277.739 218.358 313.381\"\r\n              ></polygon>\r\n              <polygon\r\n                style={{ fill: \"var(--theme-teritary)\" }}\r\n                points=\"201.543 270.859 196.218 218.232 221.266 215.091 219.124 270.127\"\r\n              ></polygon>\r\n            </g>\r\n            <g\r\n              className=\"window two\"\r\n              onClick={() => changePage(SpookyPages.About)}\r\n            >\r\n              <text\r\n                style={{\r\n                  whiteSpace: \"pre\",\r\n                  fill: \"var(--theme-text-title)\",\r\n                  fontFamily: \"Luxurious Roman, cursive\",\r\n                  fontSize: \"32px\",\r\n                }}\r\n                x=\"268.621\"\r\n                y=\"208.07\"\r\n                transform=\"matrix(1.070337, -0.25992, -0.05174, 1.055056, -23.924142, 24.221879)\"\r\n              >\r\n                About\r\n              </text>\r\n              <polygon\r\n                style={{ fill: \"var(--theme-teritary)\" }}\r\n                points=\"264.35 208.236 261.781 267.592 279.624 266.192 287.473 204.58\"\r\n              ></polygon>\r\n              <polygon\r\n                style={{ fill: \"var(--theme-teritary)\" }}\r\n                points=\"261.834 271.766 261.301 313.228 273.654 311.751 278.935 271.783\"\r\n              ></polygon>\r\n              <polygon\r\n                style={{ fill: \"var(--theme-teritary)\" }}\r\n                points=\"278.882 311.064 285.894 272.201 312.406 271.823 302.186 307.458\"\r\n              ></polygon>\r\n              <polygon\r\n                style={{ fill: \"var(--theme-teritary)\" }}\r\n                points=\"287.352 265.671 300.383 203.029 335.54 197.07 314.556 263.325\"\r\n              ></polygon>\r\n            </g>\r\n            <g\r\n              className=\"window three\"\r\n              onClick={() => changePage(SpookyPages.Location)}\r\n            >\r\n              <text\r\n                style={{\r\n                  whiteSpace: \"pre\",\r\n                  fill: \"var(--theme-text-title)\",\r\n                  fontFamily: \"Luxurious Roman, cursive\",\r\n                  fontSize: \"32px\",\r\n                }}\r\n                x=\"128.621\"\r\n                y=\"372.07\"\r\n                transform=\"matrix(1.070337, -0.25992, -0.05174, 1.055056, -23.924142, 24.221879)\"\r\n              >\r\n                Location\r\n              </text>\r\n              <path\r\n                style={{ fill: \"var(--theme-teritary)\" }}\r\n                d=\"M 196.556 442.847 L 188.201 384.326 C 185.155 360.259 222.252 351.815 226.253 383.421 L 223.968 442.523 L 196.556 442.847 Z\"\r\n              ></path>\r\n              <rect\r\n                x=\"209.451\"\r\n                y=\"378.776\"\r\n                width=\"36.213\"\r\n                height=\"3.714\"\r\n                style={{\r\n                  stroke: \"var(--theme-secondary)\",\r\n                  fill: \"var(--theme-secondary)\",\r\n                }}\r\n                transform=\"matrix(0.999436, -0.033589, 0.033589, 0.999436, -32.587228, 17.463866)\"\r\n              ></rect>\r\n              <rect\r\n                x=\"175.06\"\r\n                y=\"378.776\"\r\n                width=\"30.266\"\r\n                height=\"3.714\"\r\n                style={{\r\n                  stroke: \"var(--theme-secondary)\",\r\n                  fill: \"var(--theme-secondary)\",\r\n                }}\r\n                transform=\"matrix(0.999852, -0.017222, 0.017222, 0.999852, 12.515541, 45.689546)\"\r\n              ></rect>\r\n              <rect\r\n                x=\"457.131\"\r\n                y=\"378.776\"\r\n                width=\"79.036\"\r\n                height=\"3.714\"\r\n                style={{\r\n                  stroke: \"var(--theme-secondary)\",\r\n                  fill: \"var(--theme-secondary)\",\r\n                }}\r\n                transform=\"matrix(0.050931, 0.998702, -0.998702, 0.050931, 563.601152, -112.631374)\"\r\n              ></rect>\r\n            </g>\r\n            <g\r\n              className=\"window four\"\r\n              onClick={() => changePage(SpookyPages.Events)}\r\n            >\r\n              <text\r\n                style={{\r\n                  whiteSpace: \"pre\",\r\n                  fill: \"var(--theme-text-title)\",\r\n                  fontFamily: \"Luxurious Roman, cursive\",\r\n                  fontSize: \"32px\",\r\n                }}\r\n                x=\"248.621\"\r\n                y=\"372.07\"\r\n                transform=\"matrix(1.070337, -0.25992, -0.05174, 1.055056, -23.924142, 24.221879)\"\r\n              >\r\n                Events\r\n              </text>\r\n              <path\r\n                style={{ fill: \"var(--theme-teritary)\" }}\r\n                d=\"M 268.187 362.216 L 259.832 420.737 C 256.786 444.804 293.883 453.248 297.884 421.642 L 295.599 362.54 L 268.187 362.216 Z\"\r\n                transform=\"matrix(-1, 0, 0, -1, 557.538469, 804.428308)\"\r\n              ></path>\r\n              <rect\r\n                x=\"209.451\"\r\n                y=\"378.776\"\r\n                width=\"36.213\"\r\n                height=\"3.714\"\r\n                style={{\r\n                  stroke: \"var(--theme-secondary)\",\r\n                  fill: \"var(--theme-secondary)\",\r\n                }}\r\n                transform=\"matrix(-0.999436, -0.033589, -0.033589, 0.999436, 518.49556, 16.829958)\"\r\n              ></rect>\r\n              <rect\r\n                x=\"175.06\"\r\n                y=\"378.776\"\r\n                width=\"30.266\"\r\n                height=\"3.714\"\r\n                style={{\r\n                  stroke: \"var(--theme-secondary)\",\r\n                  fill: \"var(--theme-secondary)\",\r\n                }}\r\n                transform=\"matrix(-0.999852, -0.017222, -0.017222, 0.999852, 473.392806, 45.055612)\"\r\n              ></rect>\r\n              <rect\r\n                x=\"457.131\"\r\n                y=\"378.776\"\r\n                width=\"79.036\"\r\n                height=\"3.714\"\r\n                style={{\r\n                  stroke: \"var(--theme-secondary)\",\r\n                  fill: \"var(--theme-secondary)\",\r\n                }}\r\n                transform=\"matrix(-0.050931, 0.998702, 0.998702, 0.050931, -77.692728, -113.265293)\"\r\n              ></rect>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        {spookyElement && spookyModal(spookyElement)}\r\n        {dimensions.isMobile && (\r\n          <>\r\n            <div\r\n              className=\"mobileSpookyButton\"\r\n              onClick={() => changePage(SpookyPages.Tickets)}\r\n            >\r\n              Tickets\r\n            </div>\r\n            <div\r\n              className=\"mobileSpookyButton\"\r\n              onClick={() => changePage(SpookyPages.Tours)}\r\n            >\r\n              Tours\r\n            </div>\r\n            <div\r\n              className=\"mobileSpookyButton\"\r\n              onClick={() => changePage(SpookyPages.About)}\r\n            >\r\n              About\r\n            </div>\r\n            <div\r\n              className=\"mobileSpookyButton\"\r\n              onClick={() => changePage(SpookyPages.Location)}\r\n            >\r\n              Location\r\n            </div>\r\n            <div\r\n              className=\"mobileSpookyButton\"\r\n              onClick={() => changePage(SpookyPages.Events)}\r\n            >\r\n              Events\r\n            </div>\r\n          </>\r\n        )}\r\n        {/*<div\r\n          className=\"circleWindow\"\r\n          onClick={() => {\r\n            changePage(SpookyPages.Tickets);\r\n          }}\r\n        >\r\n          <div className=\"headline one textTitle\">Tickets</div>\r\n          <Icon icon=\"CircleWindow\" viewBox=\"0 0 89 89\" />\r\n        </div>\r\n        <div className=\"windowContent\">\r\n          <div\r\n            className=\"window topLeft\"\r\n            onClick={() => {\r\n              changePage(SpookyPages.Tours);\r\n            }}\r\n          >\r\n            <div className=\"headline one textTitle\">Tours</div>\r\n            <Icon icon=\"LeftTopWindow\" viewBox=\"0 0 56 103\" />\r\n          </div>\r\n          <div\r\n            className=\"window topRight\"\r\n            onClick={() => {\r\n              changePage(SpookyPages.About);\r\n            }}\r\n          >\r\n            <div className=\"headline one textTitle\">About</div>\r\n            <Icon icon=\"RightTopWindow\" viewBox=\"0 0 76 120\" />\r\n          </div>\r\n          <div\r\n            className=\"window bottomLeft\"\r\n            onClick={() => {\r\n              changePage(SpookyPages.Location);\r\n            }}\r\n          >\r\n            <div className=\"headline one textTitle\">Location</div>\r\n            <Icon icon=\"BottomLeftWindow\" viewBox=\"0 0 40 82\" />\r\n          </div>\r\n          <div\r\n            className=\"window bottomRight\"\r\n            onClick={() => {\r\n              changePage(SpookyPages.Events);\r\n            }}\r\n          >\r\n            <div className=\"headline one textTitle\">Events</div>\r\n            <Icon icon=\"BottomLeftWindow\" viewBox=\"0 0 40 82\" />\r\n          </div>\r\n          </div>*/}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default SpookyTheme;\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\pages\\ThemeSwitcher\\ContactPage\\ContactPage.tsx",["278","279"],"import { TextField, Button } from \"@material-ui/core\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport ParallaxBackground, {\r\n  ParallaxBackgroundCircle,\r\n  ParallaxBackgroundTriangles,\r\n} from \"../../../components/BezierBackground/ParallaxBackground\";\r\nimport \"./ContactPage.scss\";\r\nconst ContactPage = () => {\r\n  const backgroundRef = useRef<any>(null);\r\n  const backgroundRef2 = useRef<any>(null);\r\n  const [values, setValues] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n  const handleChange = (prop: any) => (event: any) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n  const handleSubmit = () => {};\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousemove\", parallax);\r\n\r\n    //return document.removeEventListener(\"mousemove\", parallax);\r\n  }, []);\r\n  const parallax = (event: any) => {\r\n    let scale = false;\r\n    if (window.innerHeight <= 1000 || window.innerWidth >= 1000) scale = true;\r\n    if (backgroundRef.current) {\r\n      //const position = backgroundRef.current.getBoundClientRect();\r\n      const position = 1;\r\n      const x = (window.innerWidth - event.pageX * position) / 100;\r\n      const y = (window.innerHeight - event.pageY * position) / 100;\r\n\r\n      backgroundRef.current.style.transform =\r\n        `translateX(${x}px) translateY(${y}px) ` + (scale ? ` scale(2)` : ``);\r\n    }\r\n    if (backgroundRef2.current) {\r\n      //const position = backgroundRef.current.getBoundClientRect();\r\n      const position = 2;\r\n      const x = (window.innerWidth - event.pageX * position) / 100;\r\n      const y = (window.innerHeight - event.pageY * position) / 100;\r\n\r\n      backgroundRef2.current.style.transform =\r\n        `translateX(${x}px) translateY(${y}px) ` + (scale ? ` scale(2)` : ``);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"parallaxBackground\" ref={backgroundRef}>\r\n        <ParallaxBackgroundTriangles />\r\n      </div>\r\n      <div className=\"parallaxBackground\" ref={backgroundRef2}>\r\n        <ParallaxBackgroundCircle />\r\n      </div>\r\n      <div className=\"centerResumeContainer\">\r\n        <div className=\"textPrimary headline one\">Contact</div>\r\n        <div className=\"contactContainer\">\r\n          <div className=\"inputContainer\">\r\n            <div className=\"textInput slideOne\">\r\n              <TextField\r\n                label=\"First Name:\"\r\n                value={values.firstName}\r\n                onChange={handleChange(\"firstName\")}\r\n                InputLabelProps={{\r\n                  style: {\r\n                    color: \"var(--theme-text-placeholder)\",\r\n                  },\r\n                }}\r\n                variant={\"filled\"}\r\n                fullWidth={true}\r\n              />\r\n            </div>\r\n            <div className=\"textInput slideTwo\">\r\n              <TextField\r\n                label=\"Last Name:\"\r\n                value={values.lastName}\r\n                onChange={handleChange(\"lastName\")}\r\n                variant={\"filled\"}\r\n                InputLabelProps={{\r\n                  style: {\r\n                    color: \"var(--theme-text-placeholder)\",\r\n                  },\r\n                }}\r\n                fullWidth={true}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"textInput slideThree\">\r\n            <TextField\r\n              label=\"Email Address:\"\r\n              value={values.email}\r\n              onChange={handleChange(\"email\")}\r\n              variant={\"filled\"}\r\n              InputLabelProps={{\r\n                style: {\r\n                  color: \"var(--theme-text-placeholder)\",\r\n                },\r\n              }}\r\n              fullWidth={true}\r\n            />\r\n          </div>\r\n          <div className=\"textInput slideFour\">\r\n            <TextField\r\n              label=\"Brief Message:\"\r\n              value={values.message}\r\n              onChange={handleChange(\"message\")}\r\n              multiline={true}\r\n              minRows={3}\r\n              variant={\"filled\"}\r\n              fullWidth={true}\r\n              InputLabelProps={{\r\n                style: {\r\n                  color: \"var(--theme-text-placeholder)\",\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"button secondary slideFive\"\r\n            onClick={() => handleSubmit()}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ContactPage;\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\CartComponent.tsx",["280"],"import { Dispatch, SetStateAction, useEffect, useRef, useState } from \"react\";\r\nimport { getRandomKey } from \"../pages/ThemeSwitcher/SalesTheme/SalesTheme\";\r\nimport { useWindowDimensions } from \"../ThemeManager\";\r\nimport Icon from \"./Icon/Icon\";\r\ninterface iCart {\r\n  cartItems: any[];\r\n  setCartItems: Dispatch<SetStateAction<any[]>>;\r\n}\r\nconst CartComponent = (props: iCart) => {\r\n  const [cartNum, setCartNum] = useState(0);\r\n  const [animate, setAnimate] = useState(false);\r\n  const [showCart, setShowCart] = useState<boolean>(false);\r\n  const [cartTotal, setCartTotal] = useState<string>(\"\");\r\n  const [openContext, setOpenContext] = useState<boolean>(false);\r\n  const cartContextRef = useRef<HTMLDivElement | null>(null);\r\n  const dimensions = useWindowDimensions();\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setCartNum(props.cartItems.length);\r\n      setAnimate(true);\r\n      setTimeout(() => {\r\n        setAnimate(false);\r\n      }, 300);\r\n    }, 1170);\r\n    return () => clearTimeout(timeout);\r\n  }, [props.cartItems]);\r\n  const checkContextClose = (e: any) => {\r\n    if (cartContextRef.current) {\r\n      if (!cartContextRef.current.contains(e.target)) {\r\n        setOpenContext(false);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"click\", checkContextClose);\r\n    return () => {\r\n      window.removeEventListener(\"click\", checkContextClose);\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    let total = 0;\r\n    if (props.cartItems.length > 0) {\r\n      props.cartItems.forEach((item) => {\r\n        total += item.price ?? 0;\r\n      });\r\n    }\r\n    var re = new RegExp(\"^-?\\\\d+(?:.\\\\d{0,\" + 2 + \"})?\");\r\n    let regexed = total.toString().match(re);\r\n    if (regexed) {\r\n      let price = regexed[0];\r\n      const afterDecimal = price.split(\".\");\r\n      if (afterDecimal[1]) {\r\n        if (afterDecimal[1].length === 1) {\r\n          price = price.toString() + \"0\";\r\n        }\r\n      }\r\n      setCartTotal(price);\r\n    } else {\r\n      setCartTotal(total.toString());\r\n    }\r\n  }, [props.cartItems]);\r\n  const deleteAll = () => {\r\n    props.setCartItems([]);\r\n  };\r\n  const deleteItem = (item: any) => {\r\n    props.cartItems.forEach((cartItem, i) => {\r\n      if (item.title === cartItem.title) {\r\n        props.cartItems.splice(i, 1);\r\n        props.setCartItems([...props.cartItems]);\r\n        return;\r\n      }\r\n    });\r\n  };\r\n  const contextOptions = [\r\n    { label: \"Move all to Wishlist\", action: () => {} },\r\n    { label: \"Empty Cart\", action: deleteAll },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"cart\"\r\n        className={\"cart \" + (animate ? \" pop\" : \"\")}\r\n        onClick={() => setShowCart(!showCart)}\r\n      >\r\n        <span className=\"headline four\">{cartNum ?? \"\"}</span>\r\n        <Icon icon=\"Cart\" />\r\n      </div>\r\n      {showCart && (\r\n        <div className=\"cartDropdown\">\r\n          <div className=\"cartHeader\">\r\n            <div className=\"rightPositioner\">\r\n              {dimensions.isMobile && (\r\n                <div\r\n                  onClick={() => {\r\n                    setShowCart(!showCart);\r\n                  }}\r\n                >\r\n                  <Icon icon=\"Close\" fontSize={24} />\r\n                </div>\r\n              )}\r\n              <div\r\n                className=\"context\"\r\n                ref={cartContextRef}\r\n                onClick={() => setOpenContext(!openContext)}\r\n              >\r\n                <Icon icon=\"Context\" />\r\n              </div>\r\n              {openContext && (\r\n                <div className=\"contextMenu\">\r\n                  {contextOptions.map((item) => {\r\n                    return (\r\n                      <div\r\n                        className=\"contextMenuItem headline six\"\r\n                        onClick={() => {\r\n                          setOpenContext(false);\r\n                          item.action();\r\n                        }}\r\n                      >\r\n                        {item.label}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"headline two textTitle\">My Cart</div>\r\n          </div>\r\n          <div className=\"cartChildren\">\r\n            {props.cartItems.length > 0 ? (\r\n              props.cartItems.map((item, i) => {\r\n                return (\r\n                  <div key={getRandomKey()} className=\"cartItem\">\r\n                    <div className=\"rightPositioner\">\r\n                      <div className=\"delete\" onClick={() => deleteItem(item)}>\r\n                        <Icon icon=\"Delete\" />\r\n                      </div>\r\n                    </div>\r\n                    <img src={item.img} />\r\n                    <div className=\"headline four\">{item.title}</div>\r\n                  </div>\r\n                );\r\n              })\r\n            ) : (\r\n              <div className=\"center\">\r\n                <Icon icon=\"NoItems\" fontSize={80} />\r\n                <div className=\"headline four\">No items in cart</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"footer\">\r\n            <button className=\"button success\" style={{ height: 54 }}>\r\n              Checkout\r\n            </button>\r\n            <div className=\"headline three textPrimary\">${cartTotal}</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default CartComponent;\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\BezierBackground\\ParallaxBackground.tsx",[],"C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\NavButton\\NavButton.tsx",["281","282","283","284","285","286"],"import React, {\r\n  createRef,\r\n  Dispatch,\r\n  forwardRef,\r\n  SetStateAction,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { ThemeManagerContext } from \"../../App\";\r\nimport { GlobalThemes } from \"../../ThemeManager\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport \"./NavButton.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport interface NavButtonOptions {\r\n  icon?: string;\r\n  label?: string;\r\n  contextItems?: NavButtonOptions[];\r\n  secondary?: boolean;\r\n  route?: GlobalThemes;\r\n}\r\nconst NavButton = ({\r\n  options,\r\n  openContext,\r\n  setOpenContext,\r\n}: {\r\n  options: NavButtonOptions;\r\n  openContext: boolean;\r\n  setOpenContext: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  const { themeManager, theme, setThemeContext } =\r\n    useContext(ThemeManagerContext);\r\n  const contextRef = createRef<any>();\r\n  const navigate = useNavigate();\r\n  const [isHover, setIsHover] = useState(false);\r\n  let buttonRef = createRef<any>();\r\n  const innerNavigate = () => {\r\n    setOpenContext(false);\r\n    navigate(\"../\" + options.route, { replace: true });\r\n  };\r\n  var icon = theme === GlobalThemes.Safari ? \"Paw\" : options.icon;\r\n  const resize = () => {\r\n    if (options.contextItems && openContext === true) {\r\n      var buttonRect = buttonRef.current.getBoundingClientRect();\r\n      if (contextRef.current && buttonRect) {\r\n        contextRef.current.style.width = buttonRect.width.toString() + \"px\";\r\n        contextRef.current.style.left = buttonRect.left.toString() + \"px\";\r\n        contextRef.current.style.top =\r\n          (buttonRect.top + buttonRect.height).toString() + \"px\";\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    resize();\r\n    window.addEventListener(\"resize\", resize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resize);\r\n    };\r\n  });\r\n  const ContextMenu = forwardRef<any>((props, ref) => (\r\n    <div ref={ref} className={\"navButtonContextContainer slide0\"}>\r\n      {options.contextItems &&\r\n        options.contextItems.map((item, i) => {\r\n          item.secondary = true;\r\n          return (\r\n            <NavButton\r\n              key={i}\r\n              options={item}\r\n              openContext={openContext}\r\n              setOpenContext={setOpenContext}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  ));\r\n  const DefaultButton = forwardRef<any>((props, ref) => (\r\n    <div\r\n      ref={ref}\r\n      className={\r\n        \" basicNavButton \" +\r\n        (options.secondary === true && \" secondary\") +\r\n        (openContext && options.contextItems ? \" open\" : \"\") +\r\n        (theme == options.route ? \" active\" : \"\")\r\n      }\r\n      onClick={() => {\r\n        if (options.contextItems) {\r\n          setOpenContext(!openContext);\r\n        } else {\r\n          innerNavigate();\r\n        }\r\n      }}\r\n    >\r\n      <div className={\"navButtonLabel headline six\"}>\r\n        {options.label || options.route}\r\n      </div>\r\n      {options.contextItems && (\r\n        <div\r\n          className={\"navButtonDropdownArrow \" + (openContext ? \"flip\" : \"\")}\r\n          onClick={() => {\r\n            setOpenContext(!openContext);\r\n          }}\r\n        >\r\n          <Icon icon=\"ArrowDropDown\" color={theme} fontSize={16} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      {<DefaultButton ref={buttonRef} />}\r\n      {openContext === true && options.contextItems && (\r\n        <ContextMenu ref={contextRef} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default NavButton;\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\Icon\\Icon.tsx",["287","288","289","290"],"import SvgIcon from \"@material-ui/icons/Print\";\r\nimport { ReactComponent as Skull } from \"./skull.svg\";\r\nimport { ReactComponent as Bat } from \"./bat.svg\";\r\nimport { ReactComponent as Pumpkin } from \"./pumpkin.svg\";\r\nimport { ReactComponent as Atari } from \"./atari.svg\";\r\nimport { ReactComponent as Maze } from \"./maze.svg\";\r\nimport { ReactComponent as Amazon } from \"./Amazon_logo.svg\";\r\nimport { ReactComponent as Tesla } from \"./Tesla_Motors.svg\";\r\nimport { ReactComponent as Tama } from \"./tama.svg\";\r\nimport { ReactComponent as Invader } from \"./invader.svg\";\r\nimport { ReactComponent as Coin } from \"./coin.svg\";\r\nimport { ReactComponent as ArcadeButton } from \"./arcadeButton.svg\";\r\nimport { ReactComponent as Textbox } from \"./textbox.svg\";\r\nimport { ReactComponent as Pacman } from \"./pacman.svg\";\r\nimport { ReactComponent as JoyStick } from \"./arcadeJoyStick.svg\";\r\nimport { ReactComponent as HHouse } from \"./HHouse.svg\";\r\nimport { ReactComponent as LeftTopWindow } from \"./LeftTopWindow.svg\";\r\nimport { ReactComponent as RightTopWindow } from \"./RightTopWindow.svg\";\r\nimport { ReactComponent as BottomLeftWindow } from \"./BottomLeftWindow.svg\";\r\nimport { ReactComponent as CircleWindow } from \"./CircleWindow.svg\";\r\nimport { ReactComponent as Clouds } from \"./Clouds.svg\";\r\nimport { ReactComponent as SalesLeftBackground } from \"./SalesLeftBackground.svg\";\r\nimport { ReactComponent as SalesRightBackground } from \"./SalesRightBackground.svg\";\r\nimport { ReactComponent as Squiggly } from \"./Squiggly.svg\";\r\n\r\nimport DiamondIcon from \"@mui/icons-material/Diamond\";\r\nimport QuestionMarkIcon from \"@mui/icons-material/QuestionMark\";\r\nimport {\r\n  Folder,\r\n  Home,\r\n  ColorLens,\r\n  Pets,\r\n  BugReport,\r\n  WbSunny,\r\n  SportsEsports,\r\n  ArrowDropDown,\r\n  ContactPhone,\r\n  AcUnit,\r\n  Close,\r\n  PlusOne,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  HomeOutline,\r\n  AccountCircleOutline,\r\n  WalletOutline,\r\n  CalculatorVariantOutline,\r\n  ToolboxOutline,\r\n  CheckboxBlankCircle,\r\n  Plus,\r\n  CartOutline,\r\n  BasketOffOutline,\r\n  Delete,\r\n  DotsVertical,\r\n  Facebook,\r\n} from \"mdi-material-ui\";\r\n\r\nimport { GlobalThemes } from \"../../ThemeManager\";\r\nimport { useContext } from \"react\";\r\nimport { ThemeManagerContext } from \"../../App\";\r\nconst GetIcon: any = {\r\n  Skull: Skull,\r\n  Bat: Bat,\r\n  Pumpkin: Pumpkin,\r\n  Home: Home,\r\n  Themes: ColorLens,\r\n  Projects: Folder,\r\n  Bug: BugReport,\r\n  Paw: Pets,\r\n  Sun: WbSunny,\r\n  Atari: Atari,\r\n  SportsEsports: SportsEsports,\r\n  Tama: Tama,\r\n  ArrowDropDown: ArrowDropDown,\r\n  Invader: Invader,\r\n  Contact: ContactPhone,\r\n  AcUnit,\r\n  HomeOutline,\r\n  AccountCircleOutline,\r\n  WalletOutline,\r\n  CalculatorVariantOutline,\r\n  ToolboxOutline,\r\n  Coin,\r\n  ArcadeButton,\r\n  Textbox,\r\n  Pacman,\r\n  PacmanCircle: CheckboxBlankCircle,\r\n  JoyStick,\r\n  HHouse,\r\n  LeftTopWindow,\r\n  RightTopWindow,\r\n  BottomLeftWindow,\r\n  CircleWindow,\r\n  Clouds,\r\n  Close,\r\n  QuestionMark: QuestionMarkIcon,\r\n  SalesLeftBackground,\r\n  SalesRightBackground,\r\n  Diamond: DiamondIcon,\r\n  Plus,\r\n  Cart: CartOutline,\r\n  Squiggly,\r\n  NoItems: BasketOffOutline,\r\n  Delete,\r\n  Context: DotsVertical,\r\n  FB: Facebook,\r\n  AMZN: Amazon,\r\n  TSLA: Tesla,\r\n};\r\nconst Icon = ({\r\n  icon,\r\n  onclick,\r\n  fontSize,\r\n  color,\r\n  viewBox,\r\n  width,\r\n  height,\r\n}: {\r\n  icon?: string;\r\n  onclick?: (e: any) => void;\r\n  fontSize?: number;\r\n  color?: GlobalThemes;\r\n  viewBox?: string;\r\n  width?: string;\r\n  height?: string;\r\n}) => {\r\n  const myIcon = GetIcon[icon as string];\r\n  if (!myIcon) return <div></div>;\r\n  return (\r\n    <SvgIcon\r\n      onClick={(e: any) => {\r\n        return onclick ? onclick(e) : null;\r\n      }}\r\n      width={width ?? \"100%\"}\r\n      height={height ?? \"100%\"}\r\n      viewBox={viewBox ?? \"0 0 24 24\"}\r\n      fontSize={fontSize ? \"inherit\" : \"small\"}\r\n      style={{\r\n        fontSize: fontSize ?? 24,\r\n        color: color ?? \"\",\r\n      }}\r\n      component={myIcon}\r\n    />\r\n  );\r\n};\r\nexport default Icon;\r\n","C:\\Users\\Justin\\Documents\\GitHub\\justingiist.github.io\\src\\components\\TutorialComponent\\TutorialControl.tsx",["291","292","293"],"import { useState } from \"react\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport \"./TutorialControl.scss\";\r\nconst TutorialControl = ({}: {}) => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  return (\r\n    <>\r\n      <div className=\"tutorialControl\">\r\n        <Icon icon=\"QuestionMark\" />\r\n        <div className=\"tutorialTextContainer\">\r\n          <div className=\"headline two\">Tutorial?</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal\" style={{ display: \"none\" }}>\r\n        <div className=\"modalContent\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default TutorialControl;\r\n",{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","severity":1,"message":"299","line":3,"column":17,"nodeType":"300","messageId":"301","endLine":3,"endColumn":25},{"ruleId":"298","severity":1,"message":"302","line":11,"column":9,"nodeType":"300","messageId":"301","endLine":11,"endColumn":31},{"ruleId":"298","severity":1,"message":"303","line":13,"column":9,"nodeType":"300","messageId":"301","endLine":13,"endColumn":20},{"ruleId":"298","severity":1,"message":"304","line":27,"column":24,"nodeType":"300","messageId":"301","endLine":27,"endColumn":39},{"ruleId":"298","severity":1,"message":"305","line":2,"column":22,"nodeType":"300","messageId":"301","endLine":2,"endColumn":30},{"ruleId":"298","severity":1,"message":"306","line":4,"column":8,"nodeType":"300","messageId":"301","endLine":4,"endColumn":16},{"ruleId":"298","severity":1,"message":"307","line":10,"column":8,"nodeType":"300","messageId":"301","endLine":10,"endColumn":21},{"ruleId":"298","severity":1,"message":"308","line":11,"column":8,"nodeType":"300","messageId":"301","endLine":11,"endColumn":20},{"ruleId":"298","severity":1,"message":"309","line":16,"column":11,"nodeType":"300","messageId":"301","endLine":16,"endColumn":23},{"ruleId":"298","severity":1,"message":"310","line":16,"column":32,"nodeType":"300","messageId":"301","endLine":16,"endColumn":47},{"ruleId":"298","severity":1,"message":"309","line":7,"column":11,"nodeType":"300","messageId":"301","endLine":7,"endColumn":23},{"ruleId":"298","severity":1,"message":"310","line":7,"column":32,"nodeType":"300","messageId":"301","endLine":7,"endColumn":47},{"ruleId":"311","severity":1,"message":"312","line":81,"column":6,"nodeType":"313","endLine":81,"endColumn":13,"suggestions":"314"},{"ruleId":"298","severity":1,"message":"315","line":6,"column":28,"nodeType":"300","messageId":"301","endLine":6,"endColumn":32},{"ruleId":"298","severity":1,"message":"309","line":49,"column":11,"nodeType":"300","messageId":"301","endLine":49,"endColumn":23},{"ruleId":"298","severity":1,"message":"316","line":49,"column":25,"nodeType":"300","messageId":"301","endLine":49,"endColumn":30},{"ruleId":"298","severity":1,"message":"310","line":49,"column":32,"nodeType":"300","messageId":"301","endLine":49,"endColumn":47},{"ruleId":"311","severity":1,"message":"317","line":33,"column":6,"nodeType":"313","endLine":33,"endColumn":13,"suggestions":"318"},{"ruleId":"294","replacedBy":"319"},{"ruleId":"296","replacedBy":"320"},{"ruleId":"321","severity":1,"message":"322","line":3,"column":23,"nodeType":"323","messageId":"324","endLine":3,"endColumn":29},{"ruleId":"321","severity":1,"message":"322","line":3,"column":24,"nodeType":"323","messageId":"324","endLine":3,"endColumn":30},{"ruleId":"321","severity":1,"message":"322","line":3,"column":24,"nodeType":"323","messageId":"324","endLine":3,"endColumn":30},{"ruleId":"321","severity":1,"message":"322","line":3,"column":22,"nodeType":"323","messageId":"324","endLine":3,"endColumn":28},{"ruleId":"321","severity":1,"message":"322","line":3,"column":22,"nodeType":"323","messageId":"324","endLine":3,"endColumn":28},{"ruleId":"325","severity":1,"message":"326","line":352,"column":25,"nodeType":"327","messageId":"324","endLine":352,"endColumn":27},{"ruleId":"294","replacedBy":"328"},{"ruleId":"296","replacedBy":"329"},{"ruleId":"298","severity":1,"message":"299","line":3,"column":17,"nodeType":"300","messageId":"301","endLine":3,"endColumn":25},{"ruleId":"298","severity":1,"message":"302","line":11,"column":9,"nodeType":"300","messageId":"301","endLine":11,"endColumn":31},{"ruleId":"298","severity":1,"message":"303","line":13,"column":9,"nodeType":"300","messageId":"301","endLine":13,"endColumn":20},{"ruleId":"298","severity":1,"message":"304","line":27,"column":24,"nodeType":"300","messageId":"301","endLine":27,"endColumn":39},{"ruleId":"325","severity":1,"message":"326","line":545,"column":25,"nodeType":"327","messageId":"324","endLine":545,"endColumn":27},{"ruleId":"325","severity":1,"message":"330","line":576,"column":15,"nodeType":"327","messageId":"324","endLine":576,"endColumn":17},{"ruleId":"298","severity":1,"message":"331","line":1,"column":21,"nodeType":"300","messageId":"301","endLine":1,"endColumn":28},{"ruleId":"298","severity":1,"message":"332","line":5,"column":8,"nodeType":"300","messageId":"301","endLine":5,"endColumn":21},{"ruleId":"298","severity":1,"message":"333","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":21},{"ruleId":"298","severity":1,"message":"334","line":7,"column":8,"nodeType":"300","messageId":"301","endLine":7,"endColumn":19},{"ruleId":"298","severity":1,"message":"335","line":15,"column":8,"nodeType":"300","messageId":"301","endLine":15,"endColumn":20},{"ruleId":"298","severity":1,"message":"336","line":16,"column":8,"nodeType":"300","messageId":"301","endLine":16,"endColumn":24},{"ruleId":"298","severity":1,"message":"309","line":24,"column":11,"nodeType":"300","messageId":"301","endLine":24,"endColumn":23},{"ruleId":"298","severity":1,"message":"316","line":24,"column":25,"nodeType":"300","messageId":"301","endLine":24,"endColumn":30},{"ruleId":"298","severity":1,"message":"337","line":118,"column":9,"nodeType":"300","messageId":"301","endLine":118,"endColumn":19},{"ruleId":"311","severity":1,"message":"338","line":141,"column":6,"nodeType":"313","endLine":141,"endColumn":8,"suggestions":"339"},{"ruleId":"311","severity":1,"message":"340","line":147,"column":6,"nodeType":"313","endLine":147,"endColumn":58,"suggestions":"341"},{"ruleId":"311","severity":1,"message":"342","line":147,"column":18,"nodeType":"343","endLine":147,"endColumn":34},{"ruleId":"298","severity":1,"message":"316","line":9,"column":25,"nodeType":"300","messageId":"301","endLine":9,"endColumn":30},{"ruleId":"298","severity":1,"message":"310","line":9,"column":32,"nodeType":"300","messageId":"301","endLine":9,"endColumn":47},{"ruleId":"298","severity":1,"message":"344","line":1,"column":8,"nodeType":"300","messageId":"301","endLine":1,"endColumn":12},{"ruleId":"298","severity":1,"message":"345","line":5,"column":3,"nodeType":"300","messageId":"301","endLine":5,"endColumn":14},{"ruleId":"298","severity":1,"message":"309","line":11,"column":11,"nodeType":"300","messageId":"301","endLine":11,"endColumn":23},{"ruleId":"298","severity":1,"message":"310","line":11,"column":32,"nodeType":"300","messageId":"301","endLine":11,"endColumn":47},{"ruleId":"298","severity":1,"message":"346","line":18,"column":10,"nodeType":"300","messageId":"301","endLine":18,"endColumn":15},{"ruleId":"311","severity":1,"message":"312","line":102,"column":6,"nodeType":"313","endLine":102,"endColumn":13,"suggestions":"347"},{"ruleId":"298","severity":1,"message":"348","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":18},{"ruleId":"298","severity":1,"message":"309","line":14,"column":11,"nodeType":"300","messageId":"301","endLine":14,"endColumn":23},{"ruleId":"298","severity":1,"message":"310","line":14,"column":32,"nodeType":"300","messageId":"301","endLine":14,"endColumn":47},{"ruleId":"298","severity":1,"message":"349","line":71,"column":9,"nodeType":"300","messageId":"301","endLine":71,"endColumn":39},{"ruleId":"350","severity":1,"message":"351","line":135,"column":11,"nodeType":"352","endLine":135,"endColumn":45},{"ruleId":"350","severity":1,"message":"351","line":138,"column":11,"nodeType":"352","endLine":138,"endColumn":45},{"ruleId":"350","severity":1,"message":"351","line":141,"column":11,"nodeType":"352","endLine":141,"endColumn":45},{"ruleId":"350","severity":1,"message":"351","line":144,"column":11,"nodeType":"352","endLine":144,"endColumn":45},{"ruleId":"298","severity":1,"message":"353","line":11,"column":9,"nodeType":"300","messageId":"301","endLine":11,"endColumn":17},{"ruleId":"298","severity":1,"message":"354","line":2,"column":10,"nodeType":"300","messageId":"301","endLine":2,"endColumn":22},{"ruleId":"298","severity":1,"message":"355","line":18,"column":47,"nodeType":"300","messageId":"301","endLine":18,"endColumn":53},{"ruleId":"298","severity":1,"message":"356","line":19,"column":8,"nodeType":"300","messageId":"301","endLine":19,"endColumn":16},{"ruleId":"321","severity":1,"message":"322","line":35,"column":21,"nodeType":"323","messageId":"324","endLine":35,"endColumn":27},{"ruleId":"298","severity":1,"message":"357","line":103,"column":27,"nodeType":"300","messageId":"301","endLine":103,"endColumn":45},{"ruleId":"298","severity":1,"message":"358","line":104,"column":10,"nodeType":"300","messageId":"301","endLine":104,"endColumn":19},{"ruleId":"298","severity":1,"message":"359","line":104,"column":21,"nodeType":"300","messageId":"301","endLine":104,"endColumn":33},{"ruleId":"325","severity":1,"message":"326","line":119,"column":51,"nodeType":"327","messageId":"324","endLine":119,"endColumn":53},{"ruleId":"311","severity":1,"message":"360","line":134,"column":3,"nodeType":"300","endLine":134,"endColumn":12,"suggestions":"361"},{"ruleId":"350","severity":1,"message":"362","line":189,"column":15,"nodeType":"352","endLine":192,"endColumn":16},{"ruleId":"363","severity":1,"message":"364","line":204,"column":15,"nodeType":"352","endLine":204,"endColumn":36},{"ruleId":"363","severity":1,"message":"364","line":205,"column":15,"nodeType":"352","endLine":205,"endColumn":34},{"ruleId":"363","severity":1,"message":"364","line":226,"column":15,"nodeType":"352","endLine":226,"endColumn":38},{"ruleId":"363","severity":1,"message":"364","line":227,"column":15,"nodeType":"352","endLine":227,"endColumn":38},{"ruleId":"350","severity":1,"message":"362","line":257,"column":15,"nodeType":"352","endLine":260,"endColumn":16},{"ruleId":"363","severity":1,"message":"364","line":337,"column":15,"nodeType":"352","endLine":337,"endColumn":38},{"ruleId":"363","severity":1,"message":"364","line":361,"column":15,"nodeType":"352","endLine":361,"endColumn":39},{"ruleId":"363","severity":1,"message":"364","line":362,"column":15,"nodeType":"352","endLine":362,"endColumn":39},{"ruleId":"350","severity":1,"message":"362","line":387,"column":15,"nodeType":"352","endLine":390,"endColumn":16},{"ruleId":"325","severity":1,"message":"330","line":419,"column":24,"nodeType":"327","messageId":"324","endLine":419,"endColumn":26},{"ruleId":"311","severity":1,"message":"365","line":429,"column":6,"nodeType":"313","endLine":429,"endColumn":8,"suggestions":"366"},{"ruleId":"363","severity":1,"message":"364","line":447,"column":13,"nodeType":"352","endLine":453,"endColumn":15},{"ruleId":"363","severity":1,"message":"364","line":491,"column":13,"nodeType":"352","endLine":497,"endColumn":15},{"ruleId":"298","severity":1,"message":"367","line":1,"column":10,"nodeType":"300","messageId":"301","endLine":1,"endColumn":20},{"ruleId":"298","severity":1,"message":"305","line":1,"column":22,"nodeType":"300","messageId":"301","endLine":1,"endColumn":30},{"ruleId":"298","severity":1,"message":"368","line":8,"column":10,"nodeType":"300","messageId":"301","endLine":8,"endColumn":29},{"ruleId":"298","severity":1,"message":"369","line":63,"column":9,"nodeType":"300","messageId":"301","endLine":63,"endColumn":28},{"ruleId":"363","severity":1,"message":"364","line":244,"column":25,"nodeType":"352","endLine":244,"endColumn":74},{"ruleId":"363","severity":1,"message":"364","line":285,"column":27,"nodeType":"352","endLine":285,"endColumn":76},{"ruleId":"298","severity":1,"message":"370","line":1,"column":10,"nodeType":"300","messageId":"301","endLine":1,"endColumn":19},{"ruleId":"298","severity":1,"message":"354","line":3,"column":10,"nodeType":"300","messageId":"301","endLine":3,"endColumn":22},{"ruleId":"298","severity":1,"message":"371","line":4,"column":8,"nodeType":"300","messageId":"301","endLine":4,"endColumn":20},{"ruleId":"298","severity":1,"message":"372","line":5,"column":8,"nodeType":"300","messageId":"301","endLine":5,"endColumn":13},{"ruleId":"298","severity":1,"message":"373","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":13},{"ruleId":"298","severity":1,"message":"374","line":7,"column":8,"nodeType":"300","messageId":"301","endLine":7,"endColumn":13},{"ruleId":"298","severity":1,"message":"355","line":1,"column":10,"nodeType":"300","messageId":"301","endLine":1,"endColumn":16},{"ruleId":"298","severity":1,"message":"354","line":3,"column":10,"nodeType":"300","messageId":"301","endLine":3,"endColumn":22},{"ruleId":"321","severity":1,"message":"322","line":115,"column":22,"nodeType":"323","messageId":"324","endLine":115,"endColumn":28},{"ruleId":"325","severity":1,"message":"330","line":159,"column":39,"nodeType":"327","messageId":"324","endLine":159,"endColumn":41},{"ruleId":"298","severity":1,"message":"375","line":1,"column":21,"nodeType":"300","messageId":"301","endLine":1,"endColumn":27},{"ruleId":"298","severity":1,"message":"376","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":26},{"ruleId":"363","severity":1,"message":"364","line":139,"column":21,"nodeType":"352","endLine":139,"endColumn":43},{"ruleId":"298","severity":1,"message":"309","line":31,"column":11,"nodeType":"300","messageId":"301","endLine":31,"endColumn":23},{"ruleId":"298","severity":1,"message":"310","line":31,"column":32,"nodeType":"300","messageId":"301","endLine":31,"endColumn":47},{"ruleId":"298","severity":1,"message":"377","line":35,"column":10,"nodeType":"300","messageId":"301","endLine":35,"endColumn":17},{"ruleId":"298","severity":1,"message":"378","line":35,"column":19,"nodeType":"300","messageId":"301","endLine":35,"endColumn":29},{"ruleId":"298","severity":1,"message":"379","line":41,"column":7,"nodeType":"300","messageId":"301","endLine":41,"endColumn":11},{"ruleId":"325","severity":1,"message":"326","line":83,"column":16,"nodeType":"327","messageId":"324","endLine":83,"endColumn":18},{"ruleId":"298","severity":1,"message":"315","line":6,"column":28,"nodeType":"300","messageId":"301","endLine":6,"endColumn":32},{"ruleId":"298","severity":1,"message":"380","line":40,"column":3,"nodeType":"300","messageId":"301","endLine":40,"endColumn":10},{"ruleId":"298","severity":1,"message":"367","line":58,"column":10,"nodeType":"300","messageId":"301","endLine":58,"endColumn":20},{"ruleId":"298","severity":1,"message":"368","line":59,"column":10,"nodeType":"300","messageId":"301","endLine":59,"endColumn":29},{"ruleId":"321","severity":1,"message":"322","line":4,"column":26,"nodeType":"323","messageId":"324","endLine":4,"endColumn":32},{"ruleId":"298","severity":1,"message":"381","line":5,"column":10,"nodeType":"300","messageId":"301","endLine":5,"endColumn":14},{"ruleId":"298","severity":1,"message":"382","line":5,"column":16,"nodeType":"300","messageId":"301","endLine":5,"endColumn":23},"no-native-reassign",["383"],"no-negated-in-lhs",["384"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'findMedianSortedArrays' is assigned a value but never used.","'sortedArray' is assigned a value but never used.","'setThemeManager' is assigned a value but never used.","'useState' is defined but never used.","'HomePage' is defined but never used.","'ThemeSwitcher' is defined but never used.","'ThemeManager' is defined but never used.","'themeManager' is assigned a value but never used.","'setThemeContext' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'defaultNavButtons', 'dystopiaNavButtons', 'eightiesNavButtons', 'safariNavButtons', 'setIcons', and 'spookyNavButtons'. Either include them or remove the dependency array.","ArrayExpression",["385"],"'Maze' is defined but never used.","'theme' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'setTheme'. Either include it or remove the dependency array.",["386"],["383"],["384"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["383"],["384"],"Expected '!==' and instead saw '!='.","'useMemo' is defined but never used.","'DystopiaTheme' is defined but never used.","'EightiesTheme' is defined but never used.","'SafariTheme' is defined but never used.","'ProjectsPage' is defined but never used.","'BezierBackground' is defined but never used.","'dimensions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initialResize'. Either include it or remove the dependency array.",["387"],"React Hook useEffect has an unnecessary dependency: 'buttonSpacing.current'. Either exclude it or remove the dependency array. Mutable values like 'buttonSpacing.current' aren't valid dependencies because mutating them doesn't re-render the component.",["388"],"React Hook useEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","'Icon' is defined but never used.","'mobileWidth' is defined but never used.","'label' is assigned a value but never used.",["389"],"'sampleLogo' is defined but never used.","'secondaryButtons' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'parallax' is assigned a value but never used.","'GlobalThemes' is defined but never used.","'useRef' is defined but never used.","'ReactDOM' is defined but never used.","'setBallElementList' is assigned a value but never used.","'idCounter' is assigned a value but never used.","'setIdCounter' is assigned a value but never used.","React Hook useEffect contains a call to 'setAnimationOverlay'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [animationOverlay] as a second argument to the useEffect Hook.",["390"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'parentSelectedCandy'. Either include it or remove the dependency array. If 'setInnerSC' needs the current value of 'parentSelectedCandy', you can also switch to useReducer instead of useState and read 'parentSelectedCandy' in the reducer.",["391"],"'useContext' is defined but never used.","'ThemeManagerContext' is defined but never used.","'jobList' is assigned a value but never used.","'Component' is defined but never used.","'stockProfile' is defined but never used.","'news1' is defined but never used.","'news2' is defined but never used.","'news3' is defined but never used.","'Button' is defined but never used.","'ParallaxBackground' is defined but never used.","'isHover' is assigned a value but never used.","'setIsHover' is assigned a value but never used.","'icon' is assigned a value but never used.","'PlusOne' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"392","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},"Update the dependencies array to be: [defaultNavButtons, dystopiaNavButtons, eightiesNavButtons, safariNavButtons, setIcons, spookyNavButtons, theme]",{"range":"405","text":"406"},"Update the dependencies array to be: [setTheme, theme]",{"range":"407","text":"408"},"Update the dependencies array to be: [initialResize]",{"range":"409","text":"410"},"Update the dependencies array to be: [resizeRef]",{"range":"411","text":"412"},{"range":"413","text":"406"},"Add dependencies array: [animationOverlay]",{"range":"414","text":"415"},"Update the dependencies array to be: [parentSelectedCandy]",{"range":"416","text":"417"},[2609,2616],"[defaultNavButtons, dystopiaNavButtons, eightiesNavButtons, safariNavButtons, setIcons, spookyNavButtons, theme]",[1060,1067],"[setTheme, theme]",[5004,5006],"[initialResize]",[5172,5224],"[resizeRef]",[2947,2954],[4966,4966],", [animationOverlay]",[16702,16704],"[parentSelectedCandy]"]