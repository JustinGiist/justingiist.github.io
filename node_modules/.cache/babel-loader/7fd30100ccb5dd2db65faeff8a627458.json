{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\Documents\\\\GitHub\\\\Portfolio_Website\\\\src\\\\components\\\\NavButton\\\\NavButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createRef, forwardRef, useContext, useEffect, useState } from \"react\";\nimport { ThemeManagerContext } from \"../../App\";\nimport { GlobalThemes } from \"../../ThemeManager\";\nimport Icon from \"../Icon/Icon\";\nimport \"./NavButton.scss\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NavButton = ({\n  options,\n  openContext,\n  setOpenContext\n}) => {\n  _s();\n\n  const {\n    themeManager,\n    theme,\n    setThemeContext\n  } = useContext(ThemeManagerContext);\n  const contextRef = /*#__PURE__*/createRef();\n  const navigate = useNavigate();\n  const [isHover, setIsHover] = useState(false);\n  let buttonRef = /*#__PURE__*/createRef();\n\n  const innerNavigate = () => {\n    setOpenContext(false);\n    navigate(\"../\" + options.route, {\n      replace: true\n    });\n  };\n\n  var icon = theme === GlobalThemes.Safari ? \"Paw\" : options.icon;\n  useEffect(() => {\n    if (options.contextItems && openContext === true) {\n      var buttonRect = buttonRef.current.getBoundingClientRect();\n\n      if (contextRef.current && buttonRect) {\n        contextRef.current.style.left = (buttonRect.left + 5).toString() + \"px\";\n        contextRef.current.style.top = (buttonRect.top + buttonRect.height).toString() + \"px\";\n      }\n    }\n  });\n  const ContextMenu = /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"navButtonContextContainer slide0\",\n    children: options.contextItems && options.contextItems.map((item, i) => {\n      item.secondary = true;\n      return /*#__PURE__*/_jsxDEV(NavButton, {\n        options: item,\n        openContext: openContext,\n        setOpenContext: setOpenContext\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: buttonRef,\n      className: \" basicNavButton \" + (options.secondary === true && \" secondary\") + (openContext && options.contextItems ? \" open\" : \"\"),\n      onMouseEnter: () => setIsHover(true),\n      onMouseLeave: () => setIsHover(false),\n      onClick: () => {\n        if (options.contextItems) {\n          setOpenContext(!openContext);\n        } else {\n          innerNavigate();\n        }\n      },\n      children: [!options.secondary && isHover && theme === GlobalThemes.Spooky && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"burst\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprite\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprite\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprite\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprite\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprite\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprite\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navButtonLabel headline six\",\n        children: options.label || options.route\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), options.contextItems && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navButtonDropdownArrow \" + (openContext ? \"flip\" : \"\"),\n        onClick: () => {\n          setOpenContext(!openContext);\n        },\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: \"ArrowDropDown\",\n          color: theme,\n          fontSize: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), !options.secondary && isHover && theme === GlobalThemes.Safari && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"burst\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprite\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprite\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprite\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprite\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprite\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprite\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), openContext === true && options.contextItems && /*#__PURE__*/_jsxDEV(ContextMenu, {\n      ref: contextRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NavButton, \"fC96VlXB6Hx+VIBlsKnz9t5WXg8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NavButton;\nexport default NavButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavButton\");","map":{"version":3,"sources":["C:/Users/Justin/Documents/GitHub/Portfolio_Website/src/components/NavButton/NavButton.tsx"],"names":["React","createRef","forwardRef","useContext","useEffect","useState","ThemeManagerContext","GlobalThemes","Icon","useNavigate","NavButton","options","openContext","setOpenContext","themeManager","theme","setThemeContext","contextRef","navigate","isHover","setIsHover","buttonRef","innerNavigate","route","replace","icon","Safari","contextItems","buttonRect","current","getBoundingClientRect","style","left","toString","top","height","ContextMenu","props","ref","map","item","i","secondary","Spooky","label"],"mappings":"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","sourcesContent":["import React, {\r\n  createRef,\r\n  Dispatch,\r\n  forwardRef,\r\n  SetStateAction,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { ThemeManagerContext } from \"../../App\";\r\nimport { GlobalThemes } from \"../../ThemeManager\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport \"./NavButton.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport interface NavButtonOptions {\r\n  icon?: string;\r\n  label?: string;\r\n  contextItems?: NavButtonOptions[];\r\n  secondary?: boolean;\r\n  route?: GlobalThemes;\r\n}\r\nconst NavButton = ({\r\n  options,\r\n  openContext,\r\n  setOpenContext,\r\n}: {\r\n  options: NavButtonOptions;\r\n  openContext: boolean;\r\n  setOpenContext: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  const { themeManager, theme, setThemeContext } =\r\n    useContext(ThemeManagerContext);\r\n  const contextRef = createRef<any>();\r\n  const navigate = useNavigate();\r\n  const [isHover, setIsHover] = useState(false);\r\n  let buttonRef = createRef<any>();\r\n  const innerNavigate = () => {\r\n    setOpenContext(false);\r\n    navigate(\"../\" + options.route, { replace: true });\r\n  };\r\n  var icon = theme === GlobalThemes.Safari ? \"Paw\" : options.icon;\r\n  useEffect(() => {\r\n    if (options.contextItems && openContext === true) {\r\n      var buttonRect = buttonRef.current.getBoundingClientRect();\r\n      if (contextRef.current && buttonRect) {\r\n        contextRef.current.style.left = (buttonRect.left + 5).toString() + \"px\";\r\n        contextRef.current.style.top =\r\n          (buttonRect.top + buttonRect.height).toString() + \"px\";\r\n      }\r\n    }\r\n  });\r\n  const ContextMenu = forwardRef<any>((props, ref) => (\r\n    <div ref={ref} className={\"navButtonContextContainer slide0\"}>\r\n      {options.contextItems &&\r\n        options.contextItems.map((item, i) => {\r\n          item.secondary = true;\r\n          return (\r\n            <NavButton\r\n              key={i}\r\n              options={item}\r\n              openContext={openContext}\r\n              setOpenContext={setOpenContext}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  ));\r\n  return (\r\n    <>\r\n      <div\r\n        ref={buttonRef}\r\n        className={\r\n          \" basicNavButton \" +\r\n          (options.secondary === true && \" secondary\") +\r\n          (openContext && options.contextItems ? \" open\" : \"\")\r\n        }\r\n        onMouseEnter={() => setIsHover(true)}\r\n        onMouseLeave={() => setIsHover(false)}\r\n        onClick={() => {\r\n          if (options.contextItems) {\r\n            setOpenContext(!openContext);\r\n          } else {\r\n            innerNavigate();\r\n          }\r\n        }}\r\n      >\r\n        {!options.secondary && isHover && theme === GlobalThemes.Spooky && (\r\n          <div className=\"burst\">\r\n            <div className=\"sprite\">\r\n              <Icon icon={icon} />\r\n            </div>\r\n            <div className=\"sprite\">\r\n              <Icon icon={icon} />\r\n            </div>\r\n            <div className=\"sprite\">\r\n              <Icon icon={icon} />\r\n            </div>\r\n            <div className=\"sprite\">\r\n              <Icon icon={icon} />\r\n            </div>\r\n            <div className=\"sprite\">\r\n              <Icon icon={icon} />\r\n            </div>\r\n            <div className=\"sprite\">\r\n              <Icon icon={icon} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className={\"navButtonLabel headline six\"}>\r\n          {options.label || options.route}\r\n        </div>\r\n        {options.contextItems && (\r\n          <div\r\n            className={\"navButtonDropdownArrow \" + (openContext ? \"flip\" : \"\")}\r\n            onClick={() => {\r\n              setOpenContext(!openContext);\r\n            }}\r\n          >\r\n            <Icon icon=\"ArrowDropDown\" color={theme} fontSize={16} />\r\n          </div>\r\n        )}\r\n        {!options.secondary && isHover && theme === GlobalThemes.Safari && (\r\n          <div className=\"burst\">\r\n            <div className=\"sprite\">\r\n              <Icon icon={icon} />\r\n            </div>\r\n            <div className=\"sprite\">\r\n              <Icon icon={icon} />\r\n            </div>\r\n            <div className=\"sprite\">\r\n              <Icon icon={icon} />\r\n            </div>\r\n            <div className=\"sprite\">\r\n              <Icon icon={icon} />\r\n            </div>\r\n            <div className=\"sprite\">\r\n              <Icon icon={icon} />\r\n            </div>\r\n            <div className=\"sprite\">\r\n              <Icon icon={icon} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {openContext === true && options.contextItems && (\r\n        <ContextMenu ref={contextRef} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default NavButton;\r\n"]},"metadata":{},"sourceType":"module"}