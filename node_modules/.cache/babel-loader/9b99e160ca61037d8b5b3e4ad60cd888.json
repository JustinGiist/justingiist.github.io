{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\my-app\\\\src\\\\components\\\\NavButton\\\\NavButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { GlobalThemes } from \"../../ThemeManager\";\nimport Icon from \"../Icon/Icon\";\nimport { ThemeManagerContext } from \"../RenderComponent/RenderComponent\";\nimport \"./NavButton.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavButton = ({\n  options\n}) => {\n  _s();\n\n  const {\n    themeManager,\n    theme,\n    setThemeContext\n  } = useContext(ThemeManagerContext);\n  const [isHover, setIsHover] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const navigate = () => {\n    if (options.route) {} else if (options.themeChanger && themeManager) {\n      setThemeContext(options.themeChanger);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: theme,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" basicNavButton \",\n      onMouseEnter: () => setIsHover(true),\n      onMouseLeave: () => setIsHover(false),\n      onClick: () => navigate(),\n      children: [isHover && theme === GlobalThemes.Spooky && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"burst\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: options.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: options.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: options.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: options.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: options.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: options.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navButtonIcon\",\n        children: !options.secondary && /*#__PURE__*/_jsxDEV(Icon, {\n          icon: options.icon,\n          fontSize: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navButtonLabel\",\n        children: options.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), options.contextItems && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navButtonDropdownArrow\",\n        onClick: () => {\n          setOpen(!open);\n        },\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: \"ArrowDropDown\",\n          color: theme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), open && options.contextItems && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navButtonContextContainer\",\n      children: options.contextItems.map((item, i) => {\n        item.secondary = true;\n        return /*#__PURE__*/_jsxDEV(NavButton, {\n          options: item\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavButton, \"SiN8uxBAZ2OEx2J3VmZCQoUkSyg=\");\n\n_c = NavButton;\nexport default NavButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavButton\");","map":{"version":3,"sources":["C:/Users/Justin/my-app/src/components/NavButton/NavButton.tsx"],"names":["useContext","useState","GlobalThemes","Icon","ThemeManagerContext","NavButton","options","themeManager","theme","setThemeContext","isHover","setIsHover","open","setOpen","navigate","route","themeChanger","Spooky","icon","secondary","label","contextItems","map","item","i"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { GlobalThemes } from \"../../ThemeManager\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport { ThemeManagerContext } from \"../RenderComponent/RenderComponent\";\r\nimport \"./NavButton.scss\";\r\nexport interface NavButtonOptions {\r\n  icon?: string;\r\n  label?: string;\r\n  contextItems?: NavButtonOptions[];\r\n  secondary?: boolean;\r\n  themeChanger?: GlobalThemes;\r\n  route?: string;\r\n}\r\nconst NavButton = ({ options }: { options: NavButtonOptions }) => {\r\n  const { themeManager, theme, setThemeContext } =\r\n    useContext(ThemeManagerContext);\r\n\r\n  const [isHover, setIsHover] = useState(false);\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const navigate = () => {\r\n    if (options.route) {\r\n    } else if (options.themeChanger && themeManager) {\r\n      setThemeContext(options.themeChanger);\r\n    }\r\n  };\r\n  return (\r\n    <div className={theme}>\r\n      <div\r\n        className={\" basicNavButton \"}\r\n        onMouseEnter={() => setIsHover(true)}\r\n        onMouseLeave={() => setIsHover(false)}\r\n        onClick={() => navigate()}\r\n      >\r\n        {isHover && theme === GlobalThemes.Spooky && (\r\n          <div className=\"burst\">\r\n            <div className=\"line\">\r\n              <Icon icon={options.icon} />\r\n            </div>\r\n            <div className=\"line\">\r\n              <Icon icon={options.icon} />\r\n            </div>\r\n            <div className=\"line\">\r\n              <Icon icon={options.icon} />\r\n            </div>\r\n            <div className=\"line\">\r\n              <Icon icon={options.icon} />\r\n            </div>\r\n            <div className=\"line\">\r\n              <Icon icon={options.icon} />\r\n            </div>\r\n            <div className=\"line\">\r\n              <Icon icon={options.icon} />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className={\"navButtonIcon\"}>\r\n          {!options.secondary && <Icon icon={options.icon} fontSize={20} />}\r\n        </div>\r\n        <div className={\"navButtonLabel\"}>{options.label}</div>\r\n        {options.contextItems && (\r\n          <div\r\n            className={\"navButtonDropdownArrow\"}\r\n            onClick={() => {\r\n              setOpen(!open);\r\n            }}\r\n          >\r\n            <Icon icon=\"ArrowDropDown\" color={theme} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {open && options.contextItems && (\r\n        <div className={\"navButtonContextContainer\"}>\r\n          {options.contextItems.map((item, i) => {\r\n            item.secondary = true;\r\n            return <NavButton key={i} options={item} />;\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NavButton;\r\n"]},"metadata":{},"sourceType":"module"}