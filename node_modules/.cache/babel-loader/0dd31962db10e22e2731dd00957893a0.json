{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nfunction getWindowDimensions() {\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport function useWindowDimensions() {\n  _s();\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowDimensions;\n}\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");\n\nexport let GlobalThemes;\n\n(function (GlobalThemes) {\n  GlobalThemes[\"Light\"] = \"Light\";\n  GlobalThemes[\"Dark\"] = \"Dark\";\n  GlobalThemes[\"Safari\"] = \"Safari\";\n  GlobalThemes[\"Spooky\"] = \"Spooky\";\n  GlobalThemes[\"Dystopia\"] = \"Dystopia\";\n  GlobalThemes[\"Enterprise\"] = \"Enterprise\";\n  GlobalThemes[\"Arcade\"] = \"Arcade\";\n})(GlobalThemes || (GlobalThemes = {}));\n\nclass ThemeManager {\n  constructor() {\n    this.isMobile = void 0;\n    this.phoneHeight = void 0;\n    this.phoneWidth = void 0;\n    this.currentTheme = void 0;\n    this.globalComponentThemes = void 0;\n    this.globalStyles = void 0;\n    this.themeName = void 0;\n    this.globalColors = {\n      blueDark: \"#3568d4\",\n      blueNormal: \"#3e7bfa\",\n      blueLight: \"#6698fa\",\n      redDark: \"#81151a\",\n      redNormal: \"#cc1b24\",\n      redLight: \"#ecd6d0\",\n      yellowDark: \"#ffcc00\",\n      yellowNormal: \"#fddd48\",\n      yellowLight: \"#fded72\",\n      greenDark: \"#06c270\",\n      greenNormal: \"#39d98a\",\n      greenLight: \"#57eba1\",\n      greenLighter: \"#b5fbd8\",\n      darkDark: \"#1C1C26\",\n      darkNormal: \"#262637\",\n      darkLight: \"#8f90a6\",\n      borderLight: \"#cccccc\",\n      lightDark: \"#ebebf0\",\n      lightNormal: \"#f2f2f5\",\n      logoDark: \"#05A660\",\n      logoLight: \"#3CE792\",\n      lightLight: \"#fafafc\",\n      purpleDark: \"#613269\",\n      purpleNormal: \"#9d59a8\",\n      purpleLight: \"#de91eb\",\n      background: \"#FFFFFF\",\n      backgroundTransparent: \"rgba(255, 255, 255, 0.7)\",\n      secondaryBackgroundTransparent: \"rgba(222, 222, 255, 0.7)\",\n      fontXSmall: 10,\n      fontSmall: 15,\n      fontMedium: 20,\n      fontLarge: 25,\n      fontXLarge: 30,\n      radiusSmall: 5,\n      radiusMedium: 10,\n      radiusLarge: 15,\n      shadow: \"0px 0px 2px rgba(40, 41, 61, 0.04), 0px 4px 8px rgba(96, 97, 112, 0.16);\"\n    };\n    this.dystopiaComponentTheme = {\n      fontSmall: this.globalColors.fontSmall,\n      fontMedium: this.globalColors.fontMedium,\n      fontLarge: this.globalColors.fontLarge,\n      fontXSmall: this.globalColors.fontXSmall,\n      fontXLarge: this.globalColors.fontXLarge,\n      radiusLarge: this.globalColors.radiusLarge,\n      radiusMedium: this.globalColors.radiusMedium,\n      radiusSmall: this.globalColors.radiusSmall,\n      borderColor: this.globalColors.darkNormal,\n      primaryBackground: this.globalColors.darkNormal,\n      secondaryBackground: this.globalColors.darkDark,\n      primaryTransparentBackground: this.globalColors.backgroundTransparent,\n      secondaryTransparentBackground: this.globalColors.secondaryBackgroundTransparent,\n      primaryColor: this.globalColors.redNormal,\n      secondaryColor: this.globalColors.redDark,\n      teritaryColor: this.globalColors.redLight,\n      titleText: this.globalColors.redLight,\n      primaryText: this.globalColors.lightNormal,\n      secondaryText: this.globalColors.lightDark,\n      placeholderText: this.globalColors.lightLight,\n      error: this.globalColors.redNormal,\n      successButton: this.globalColors.blueNormal,\n      backButton: this.globalColors.blueDarker,\n      optionButton: this.globalColors.greenNormal,\n      switchOn: this.globalColors.greenLight,\n      switchOff: this.globalColors.darkLight,\n      whiteBackground: \"#ffffff\",\n      shadow: this.globalColors.shadow\n    };\n    this.lightComponentTheme = {\n      fontSmall: this.globalColors.fontSmall,\n      fontMedium: this.globalColors.fontMedium,\n      fontLarge: this.globalColors.fontLarge,\n      fontXSmall: this.globalColors.fontXSmall,\n      fontXLarge: this.globalColors.fontXLarge,\n      radiusLarge: this.globalColors.radiusLarge,\n      radiusMedium: this.globalColors.radiusMedium,\n      radiusSmall: this.globalColors.radiusSmall,\n      borderColor: this.globalColors.borderLight,\n      placeholderText: this.globalColors.darkNormal,\n      primaryBackground: this.globalColors.lightLight,\n      secondaryBackground: this.globalColors.lightDark,\n      primaryTransparentBackground: this.globalColors.backgroundTransparent,\n      secondaryTransparentBackground: this.globalColors.darkBackgroundTransparent,\n      primaryColor: this.globalColors.blueNormal,\n      secondaryColor: this.globalColors.blueDark,\n      teritaryColor: this.globalColors.logoLight,\n      titleText: this.globalColors.blueDark,\n      primaryText: this.globalColors.darkNormal,\n      secondaryText: this.globalColors.darkLight,\n      error: this.globalColors.redNormal,\n      successButton: this.globalColors.blueLight,\n      backButton: this.globalColors.blueDarker,\n      optionButton: this.globalColors.greenNormal,\n      switchOn: this.globalColors.greenLight,\n      switchOff: this.globalColors.darkLight,\n      whiteBackground: \"#ffffff\",\n      shadow: this.globalColors.shadow\n    };\n\n    this.checkMobile = () => {\n      if (typeof document != \"undefined\") {\n        return false;\n      } else if (typeof navigator != \"undefined\" && navigator.product == \"ReactNative\") {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.setTheme = theme => {\n      var _this$globalComponent;\n\n      this.themeName = theme;\n      this.currentTheme = (_this$globalComponent = this.globalComponentThemes.get(theme)) !== null && _this$globalComponent !== void 0 ? _this$globalComponent : this.darkComponentTheme;\n\n      if (!this.isMobile) {\n        document.body.classList.remove(\"Light\", \"Dark\");\n        document.body.classList.add(theme);\n      }\n    };\n\n    this.getCssTheme = () => {\n      return `--theme: ` + this.themeName.toString() + `;\n    --theme-primary:` + this.currentTheme.primaryColor + \";\" + `--theme-secondary:` + this.currentTheme.secondaryColor + \";\" + `--theme-teritary:` + this.currentTheme.teritaryColor + \";\" + `--theme-border:` + this.currentTheme.borderColor + \";\" + `--theme-text-title:` + this.currentTheme.titleText + \";\" + `--theme-text-primary:` + this.currentTheme.primaryText + \";\" + `--theme-text-secondary:` + this.currentTheme.secondaryText + \";\" + `--theme-text-placeholder:` + this.currentTheme.placeholderText + \";\" + `--theme-text-error:` + this.currentTheme.error + \";\" + `--theme-primary-background:` + this.currentTheme.primaryBackground + \";\" + `--theme-secondary-background:` + this.currentTheme.secondaryBackground + \";\" + `--theme-primary-background-transparent:` + this.currentTheme.primaryTransparentBackground + \";\" + `--theme-secondary-background-transparent: ` + this.currentTheme.secondaryTransparentBackground + \";\" + `--theme-button-success:` + this.currentTheme.successButton + \";\" + `--theme-button-back:` + this.currentTheme.backButton + \";\" + `--theme-button-option:` + this.currentTheme.optionButton + \";\" + `--theme-white-background:` + this.currentTheme.whiteBackground + \";\" + `--theme-shadow:` + this.currentTheme.shadow + \";\";\n    };\n\n    this.globalComponentThemes = new Map().set(\"Light\", this.lightComponentTheme).set(\"Dark\", this.darkComponentTheme);\n    this.phoneHeight = window.innerHeight;\n    this.phoneWidth = window.innerWidth;\n    this.isMobile = this.checkMobile();\n    this.currentTheme = this.lightComponentTheme; //This is to silence needing an initializer\n\n    this.themeName = GlobalThemes.Light;\n    this.setTheme(GlobalThemes.Light); /// This is where you set the Theme\n  }\n\n}\n\nexport default ThemeManager;","map":{"version":3,"sources":["C:/Users/Justin/my-app/src/ThemeManager.tsx"],"names":["useEffect","useState","getWindowDimensions","innerWidth","width","innerHeight","height","window","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","GlobalThemes","ThemeManager","constructor","isMobile","phoneHeight","phoneWidth","currentTheme","globalComponentThemes","globalStyles","themeName","globalColors","blueDark","blueNormal","blueLight","redDark","redNormal","redLight","yellowDark","yellowNormal","yellowLight","greenDark","greenNormal","greenLight","greenLighter","darkDark","darkNormal","darkLight","borderLight","lightDark","lightNormal","logoDark","logoLight","lightLight","purpleDark","purpleNormal","purpleLight","background","backgroundTransparent","secondaryBackgroundTransparent","fontXSmall","fontSmall","fontMedium","fontLarge","fontXLarge","radiusSmall","radiusMedium","radiusLarge","shadow","dystopiaComponentTheme","borderColor","primaryBackground","secondaryBackground","primaryTransparentBackground","secondaryTransparentBackground","primaryColor","secondaryColor","teritaryColor","titleText","primaryText","secondaryText","placeholderText","error","successButton","backButton","blueDarker","optionButton","switchOn","switchOff","whiteBackground","lightComponentTheme","darkBackgroundTransparent","checkMobile","document","navigator","product","setTheme","theme","get","darkComponentTheme","body","classList","remove","add","getCssTheme","toString","Map","set","Light"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  return windowDimensions;\r\n}\r\nexport interface componentSchema {\r\n  primaryColor: string;\r\n  secondaryColor: string;\r\n  teritaryColor: string;\r\n  borderColor: string;\r\n  titleText: string;\r\n  primaryText: string;\r\n  secondaryText: string;\r\n  placeholderText: string;\r\n  error: string;\r\n  primaryBackground: string;\r\n  secondaryBackground: string;\r\n  primaryTransparentBackground: string;\r\n  secondaryTransparentBackground: string;\r\n  successButton: string;\r\n  backButton: string;\r\n  optionButton: string;\r\n  switchOn: string;\r\n  switchOff: string;\r\n  fontXSmall: number;\r\n  fontSmall: number;\r\n  fontMedium: number;\r\n  fontLarge: number;\r\n  fontXLarge: number;\r\n  radiusSmall: number;\r\n  radiusMedium: number;\r\n  radiusLarge: number;\r\n  whiteBackground: string;\r\n  shadow: string;\r\n}\r\nexport interface colorSchema {\r\n  blueDark: string;\r\n  blueNormal: string;\r\n  blueLight: string;\r\n  redDark: string;\r\n  redNormal: string;\r\n  redLight: string;\r\n  yellowDark: string;\r\n  yellowNormal: string;\r\n  yellowLight: string;\r\n  greenDark: string;\r\n  greenNormal: string;\r\n  greenLight: string;\r\n  greenLighter: string;\r\n  darkDark: string;\r\n  darkNormal: string;\r\n  darkLight: string;\r\n  lightDark: string;\r\n  lightNormal: string;\r\n  lightLight: string;\r\n  purpleDark: string;\r\n  purpleNormal: string;\r\n  purpleLight: string;\r\n  background: string;\r\n  logoLight: string;\r\n  logoDark: string;\r\n  backgroundTransparent: string;\r\n  secondaryBackgroundTransparent: string;\r\n  fontXSmall: number;\r\n  fontSmall: number;\r\n  fontMedium: number;\r\n  fontLarge: number;\r\n  fontXLarge: number;\r\n  radiusSmall: number;\r\n  radiusMedium: number;\r\n  radiusLarge: number;\r\n  shadow: string;\r\n  borderLight: string;\r\n}\r\nexport enum GlobalThemes {\r\n  Light = \"Light\",\r\n  Dark = \"Dark\",\r\n  Safari = \"Safari\",\r\n  Spooky = \"Spooky\",\r\n  Dystopia = \"Dystopia\",\r\n  Enterprise = \"Enterprise\",\r\n  Arcade = \"Arcade\",\r\n}\r\nclass ThemeManager {\r\n  isMobile: boolean;\r\n  phoneHeight: number;\r\n  phoneWidth: number;\r\n  currentTheme: componentSchema;\r\n  globalComponentThemes: Map<string, componentSchema>;\r\n  globalStyles: any;\r\n  themeName: GlobalThemes;\r\n  globalColors: colorSchema = {\r\n    blueDark: \"#3568d4\",\r\n    blueNormal: \"#3e7bfa\",\r\n    blueLight: \"#6698fa\",\r\n    redDark: \"#81151a\",\r\n    redNormal: \"#cc1b24\",\r\n    redLight: \"#ecd6d0\",\r\n    yellowDark: \"#ffcc00\",\r\n    yellowNormal: \"#fddd48\",\r\n    yellowLight: \"#fded72\",\r\n    greenDark: \"#06c270\",\r\n    greenNormal: \"#39d98a\",\r\n    greenLight: \"#57eba1\",\r\n    greenLighter: \"#b5fbd8\",\r\n    darkDark: \"#1C1C26\",\r\n    darkNormal: \"#262637\",\r\n    darkLight: \"#8f90a6\",\r\n    borderLight: \"#cccccc\",\r\n    lightDark: \"#ebebf0\",\r\n    lightNormal: \"#f2f2f5\",\r\n    logoDark: \"#05A660\",\r\n    logoLight: \"#3CE792\",\r\n    lightLight: \"#fafafc\",\r\n    purpleDark: \"#613269\",\r\n    purpleNormal: \"#9d59a8\",\r\n    purpleLight: \"#de91eb\",\r\n    background: \"#FFFFFF\",\r\n    backgroundTransparent: \"rgba(255, 255, 255, 0.7)\",\r\n    secondaryBackgroundTransparent: \"rgba(222, 222, 255, 0.7)\",\r\n    fontXSmall: 10,\r\n    fontSmall: 15,\r\n    fontMedium: 20,\r\n    fontLarge: 25,\r\n    fontXLarge: 30,\r\n    radiusSmall: 5,\r\n    radiusMedium: 10,\r\n    radiusLarge: 15,\r\n    shadow:\r\n      \"0px 0px 2px rgba(40, 41, 61, 0.04), 0px 4px 8px rgba(96, 97, 112, 0.16);\",\r\n  };\r\n  dystopiaComponentTheme: componentSchema = {\r\n    fontSmall: this.globalColors.fontSmall,\r\n    fontMedium: this.globalColors.fontMedium,\r\n    fontLarge: this.globalColors.fontLarge,\r\n    fontXSmall: this.globalColors.fontXSmall,\r\n    fontXLarge: this.globalColors.fontXLarge,\r\n    radiusLarge: this.globalColors.radiusLarge,\r\n    radiusMedium: this.globalColors.radiusMedium,\r\n    radiusSmall: this.globalColors.radiusSmall,\r\n\r\n    borderColor: this.globalColors.darkNormal,\r\n    primaryBackground: this.globalColors.darkNormal,\r\n    secondaryBackground: this.globalColors.darkDark,\r\n    primaryTransparentBackground: this.globalColors.backgroundTransparent,\r\n    secondaryTransparentBackground:\r\n      this.globalColors.secondaryBackgroundTransparent,\r\n    primaryColor: this.globalColors.redNormal,\r\n    secondaryColor: this.globalColors.redDark,\r\n    teritaryColor: this.globalColors.redLight,\r\n    titleText: this.globalColors.redLight,\r\n    primaryText: this.globalColors.lightNormal,\r\n    secondaryText: this.globalColors.lightDark,\r\n    placeholderText: this.globalColors.lightLight,\r\n\r\n    error: this.globalColors.redNormal,\r\n    successButton: this.globalColors.blueNormal,\r\n    backButton: this.globalColors.blueDarker,\r\n    optionButton: this.globalColors.greenNormal,\r\n    switchOn: this.globalColors.greenLight,\r\n    switchOff: this.globalColors.darkLight,\r\n    whiteBackground: \"#ffffff\",\r\n    shadow: this.globalColors.shadow,\r\n  };\r\n  lightComponentTheme: componentSchema = {\r\n    fontSmall: this.globalColors.fontSmall,\r\n    fontMedium: this.globalColors.fontMedium,\r\n    fontLarge: this.globalColors.fontLarge,\r\n    fontXSmall: this.globalColors.fontXSmall,\r\n    fontXLarge: this.globalColors.fontXLarge,\r\n    radiusLarge: this.globalColors.radiusLarge,\r\n    radiusMedium: this.globalColors.radiusMedium,\r\n    radiusSmall: this.globalColors.radiusSmall,\r\n\r\n    borderColor: this.globalColors.borderLight,\r\n    placeholderText: this.globalColors.darkNormal,\r\n    primaryBackground: this.globalColors.lightLight,\r\n    secondaryBackground: this.globalColors.lightDark,\r\n    primaryTransparentBackground: this.globalColors.backgroundTransparent,\r\n    secondaryTransparentBackground: this.globalColors.darkBackgroundTransparent,\r\n    primaryColor: this.globalColors.blueNormal,\r\n    secondaryColor: this.globalColors.blueDark,\r\n    teritaryColor: this.globalColors.logoLight,\r\n    titleText: this.globalColors.blueDark,\r\n    primaryText: this.globalColors.darkNormal,\r\n    secondaryText: this.globalColors.darkLight,\r\n    error: this.globalColors.redNormal,\r\n    successButton: this.globalColors.blueLight,\r\n    backButton: this.globalColors.blueDarker,\r\n    optionButton: this.globalColors.greenNormal,\r\n    switchOn: this.globalColors.greenLight,\r\n    switchOff: this.globalColors.darkLight,\r\n    whiteBackground: \"#ffffff\",\r\n    shadow: this.globalColors.shadow,\r\n  };\r\n  constructor() {\r\n    this.globalComponentThemes = new Map<string, componentSchema>()\r\n      .set(\"Light\", this.lightComponentTheme)\r\n      .set(\"Dark\", this.darkComponentTheme);\r\n    this.phoneHeight = window.innerHeight;\r\n    this.phoneWidth = window.innerWidth;\r\n    this.isMobile = this.checkMobile();\r\n    this.currentTheme = this.lightComponentTheme; //This is to silence needing an initializer\r\n    this.themeName = GlobalThemes.Light;\r\n    this.setTheme(GlobalThemes.Light); /// This is where you set the Theme\r\n  }\r\n  checkMobile = () => {\r\n    if (typeof document != \"undefined\") {\r\n      return false;\r\n    } else if (\r\n      typeof navigator != \"undefined\" &&\r\n      navigator.product == \"ReactNative\"\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  setTheme = (theme: GlobalThemes) => {\r\n    this.themeName = theme;\r\n    this.currentTheme =\r\n      this.globalComponentThemes.get(theme) ?? this.darkComponentTheme;\r\n    if (!this.isMobile) {\r\n      document.body.classList.remove(\"Light\", \"Dark\");\r\n      document.body.classList.add(theme);\r\n    }\r\n  };\r\n  getCssTheme = () => {\r\n    return (\r\n      `--theme: ` +\r\n      this.themeName.toString() +\r\n      `;\r\n    --theme-primary:` +\r\n      this.currentTheme.primaryColor +\r\n      \";\" +\r\n      `--theme-secondary:` +\r\n      this.currentTheme.secondaryColor +\r\n      \";\" +\r\n      `--theme-teritary:` +\r\n      this.currentTheme.teritaryColor +\r\n      \";\" +\r\n      `--theme-border:` +\r\n      this.currentTheme.borderColor +\r\n      \";\" +\r\n      `--theme-text-title:` +\r\n      this.currentTheme.titleText +\r\n      \";\" +\r\n      `--theme-text-primary:` +\r\n      this.currentTheme.primaryText +\r\n      \";\" +\r\n      `--theme-text-secondary:` +\r\n      this.currentTheme.secondaryText +\r\n      \";\" +\r\n      `--theme-text-placeholder:` +\r\n      this.currentTheme.placeholderText +\r\n      \";\" +\r\n      `--theme-text-error:` +\r\n      this.currentTheme.error +\r\n      \";\" +\r\n      `--theme-primary-background:` +\r\n      this.currentTheme.primaryBackground +\r\n      \";\" +\r\n      `--theme-secondary-background:` +\r\n      this.currentTheme.secondaryBackground +\r\n      \";\" +\r\n      `--theme-primary-background-transparent:` +\r\n      this.currentTheme.primaryTransparentBackground +\r\n      \";\" +\r\n      `--theme-secondary-background-transparent: ` +\r\n      this.currentTheme.secondaryTransparentBackground +\r\n      \";\" +\r\n      `--theme-button-success:` +\r\n      this.currentTheme.successButton +\r\n      \";\" +\r\n      `--theme-button-back:` +\r\n      this.currentTheme.backButton +\r\n      \";\" +\r\n      `--theme-button-option:` +\r\n      this.currentTheme.optionButton +\r\n      \";\" +\r\n      `--theme-white-background:` +\r\n      this.currentTheme.whiteBackground +\r\n      \";\" +\r\n      `--theme-shadow:` +\r\n      this.currentTheme.shadow +\r\n      \";\"\r\n    );\r\n  };\r\n}\r\nexport default ThemeManager;\r\n"]},"metadata":{},"sourceType":"module"}