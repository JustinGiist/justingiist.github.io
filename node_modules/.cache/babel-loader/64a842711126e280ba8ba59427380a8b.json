{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\my-app\\\\src\\\\components\\\\NavBar\\\\NavBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo, useState } from \"react\";\nimport NavButton from \"../NavButton/NavButton\";\nimport { Themes } from \"../RenderComponent/RenderComponent\";\nimport \"./NavBar.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBar = ({\n  isVertical,\n  theme,\n  setTheme\n}) => {\n  _s();\n\n  const spookyNavButtons = [\"Skull\", \"Bat\", \"Pumpkin\"];\n  const safariNavButtons = [\"Sun\", \"Bug\", \"Paw\"];\n  const eightiesNavButtons = [\"Atari\", \"SportsEsports\", \"Tama\"];\n  const dystopiaNavButtons = [\"Atari\", \"SportsEsports\", \"Tama\"];\n  const defaultNavButtons = [\"Home\", \"Themes\", \"Projects\"];\n  const [label, setLabel] = useState(\"Webpage\");\n  const [navButtons, setNavButtons] = useState([{\n    icon: \"Home\",\n    label: \"Home\"\n  }, {\n    icon: \"Themes\",\n    label: \"Themes Page\"\n  }, {\n    icon: \"Projects\",\n    label: \"Projects\"\n  }]);\n\n  const setIcons = icons => {\n    let tempButtons = navButtons;\n    icons.forEach((icon, i) => {\n      tempButtons[i][\"icon\"] = icon;\n    });\n    setNavButtons(tempButtons);\n  };\n\n  const getTheme = useMemo(() => {\n    switch (theme) {\n      case Themes.spooky:\n        setLabel(\"Haunted House Tours\");\n        setIcons(spookyNavButtons);\n        return \"spooky\";\n\n      case Themes.safari:\n        setLabel(\"Safari Learning Center\");\n        setIcons(safariNavButtons);\n        return \"safari\";\n\n      case Themes.eighties:\n        setLabel(\"Eighties Arcade\");\n        setIcons(eightiesNavButtons);\n        return \"eighties\";\n\n      case Themes.dystopia:\n        setLabel(\"Dystopia\");\n        setIcons(dystopiaNavButtons);\n        return \"dystopia\";\n\n      default:\n        setLabel(\"Enterprise\");\n        setIcons(defaultNavButtons);\n        return \"default\";\n    }\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navBarContainer \" + (isVertical ? \"vertical \" : \"horizontal \") + getTheme,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navBarLabel\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), navButtons.map(y => {\n      return /*#__PURE__*/_jsxDEV(NavButton, {\n        theme: theme,\n        options: y\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBar, \"gGB6syNPURfLJm7OoWXXuSjTYS4=\");\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["C:/Users/Justin/my-app/src/components/NavBar/NavBar.tsx"],"names":["useMemo","useState","NavButton","Themes","NavBar","isVertical","theme","setTheme","spookyNavButtons","safariNavButtons","eightiesNavButtons","dystopiaNavButtons","defaultNavButtons","label","setLabel","navButtons","setNavButtons","icon","setIcons","icons","tempButtons","forEach","i","getTheme","spooky","safari","eighties","dystopia","map","y"],"mappings":"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","sourcesContent":["import { useMemo, useState } from \"react\";\r\nimport NavButton, { NavButtonOptions } from \"../NavButton/NavButton\";\r\nimport { Themes } from \"../RenderComponent/RenderComponent\";\r\nimport \"./NavBar.scss\";\r\nconst NavBar = ({\r\n  isVertical,\r\n  theme,\r\n  setTheme,\r\n}: {\r\n  isVertical?: boolean;\r\n  theme: Themes;\r\n  setTheme: any;\r\n}) => {\r\n  const spookyNavButtons: string[] = [\"Skull\", \"Bat\", \"Pumpkin\"];\r\n  const safariNavButtons: string[] = [\"Sun\", \"Bug\", \"Paw\"];\r\n  const eightiesNavButtons: string[] = [\"Atari\", \"SportsEsports\", \"Tama\"];\r\n  const dystopiaNavButtons: string[] = [\"Atari\", \"SportsEsports\", \"Tama\"];\r\n  const defaultNavButtons: string[] = [\"Home\", \"Themes\", \"Projects\"];\r\n  const [label, setLabel] = useState(\"Webpage\");\r\n  const [navButtons, setNavButtons] = useState<NavButtonOptions[]>([\r\n    { icon: \"Home\", label: \"Home\" },\r\n    { icon: \"Themes\", label: \"Themes Page\" },\r\n    { icon: \"Projects\", label: \"Projects\" },\r\n  ]);\r\n  const setIcons = (icons: string[]) => {\r\n    let tempButtons = navButtons;\r\n    icons.forEach((icon, i) => {\r\n      tempButtons[i][\"icon\"] = icon;\r\n    });\r\n    setNavButtons(tempButtons);\r\n  };\r\n  const getTheme = useMemo(() => {\r\n    switch (theme) {\r\n      case Themes.spooky:\r\n        setLabel(\"Haunted House Tours\");\r\n        setIcons(spookyNavButtons);\r\n        return \"spooky\";\r\n      case Themes.safari:\r\n        setLabel(\"Safari Learning Center\");\r\n        setIcons(safariNavButtons);\r\n        return \"safari\";\r\n      case Themes.eighties:\r\n        setLabel(\"Eighties Arcade\");\r\n        setIcons(eightiesNavButtons);\r\n        return \"eighties\";\r\n      case Themes.dystopia:\r\n        setLabel(\"Dystopia\");\r\n        setIcons(dystopiaNavButtons);\r\n        return \"dystopia\";\r\n      default:\r\n        setLabel(\"Enterprise\");\r\n        setIcons(defaultNavButtons);\r\n        return \"default\";\r\n    }\r\n  }, [theme]);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"navBarContainer \" +\r\n        (isVertical ? \"vertical \" : \"horizontal \") +\r\n        getTheme\r\n      }\r\n    >\r\n      <div className=\"navBarLabel\">{label}</div>\r\n      {navButtons.map((y) => {\r\n        return <NavButton theme={theme} options={y} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}