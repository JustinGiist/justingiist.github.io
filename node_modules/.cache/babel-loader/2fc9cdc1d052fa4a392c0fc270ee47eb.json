{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\my-app\\\\src\\\\components\\\\NavBar\\\\NavBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useMemo, useState } from \"react\";\nimport { ThemeManagerContext } from \"../../App\";\nimport { GlobalThemes } from \"../../ThemeManager\";\nimport NavButton from \"../NavButton/NavButton\";\nimport \"./NavBar.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBar = ({\n  isVertical\n}) => {\n  _s();\n\n  const {\n    themeManager,\n    theme,\n    setThemeContext\n  } = useContext(ThemeManagerContext);\n  const spookyNavButtons = [\"Skull\", \"Bat\", \"Pumpkin\"];\n  const safariNavButtons = [\"Sun\", \"Bug\", \"Paw\"];\n  const eightiesNavButtons = [\"Atari\", \"SportsEsports\", \"Tama\"];\n  const dystopiaNavButtons = [\"Atari\", \"SportsEsports\", \"Tama\"];\n  const defaultNavButtons = [\"Home\", \"Themes\", \"Projects\"];\n  const [label, setLabel] = useState(\"Webpage\");\n  const [navButtons, setNavButtons] = useState([{\n    icon: \"Home\",\n    label: \"Home\"\n  }, {\n    icon: \"Themes\",\n    label: \"Themes Page\",\n    contextItems: [{\n      icon: \"Projects\",\n      label: \"Enterprise\",\n      themeChanger: GlobalThemes.Enterprise\n    }, {\n      icon: \"Bat\",\n      label: \"Haunted House\",\n      themeChanger: GlobalThemes.Spooky\n    }, {\n      icon: \"Paw\",\n      label: \"Safari Learning\",\n      themeChanger: GlobalThemes.Safari\n    }, {\n      icon: \"SportsEsports\",\n      label: \"80s Arcade\",\n      themeChanger: GlobalThemes.Arcade\n    }, {\n      icon: \"Skull\",\n      label: \"Dystopia\",\n      themeChanger: GlobalThemes.Dystopia\n    }]\n  }, {\n    icon: \"Projects\",\n    label: \"Projects\"\n  }]);\n\n  const setIcons = icons => {\n    let tempButtons = navButtons;\n    icons.forEach((icon, i) => {\n      tempButtons[i][\"icon\"] = icon;\n    });\n    setNavButtons(tempButtons);\n  };\n\n  const getTheme = useMemo(() => {\n    switch (theme) {\n      case GlobalThemes.Spooky:\n        setLabel(\"Haunted House Tours\");\n        setIcons(spookyNavButtons);\n        break;\n\n      case GlobalThemes.Safari:\n        setLabel(\"Safari Learning Center\");\n        setIcons(safariNavButtons);\n        break;\n\n      case GlobalThemes.Arcade:\n        setLabel(\"80s Arcade\");\n        setIcons(eightiesNavButtons);\n        break;\n\n      case GlobalThemes.Dystopia:\n        setLabel(\"Dystopia\");\n        setIcons(dystopiaNavButtons);\n        break;\n\n      default:\n        setLabel(\"Enterprise\");\n        setIcons(defaultNavButtons);\n        break;\n    }\n\n    return theme;\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navBarContainer \" + (isVertical ? \"vertical \" : \"horizontal \") + getTheme,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navBarLabel\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), navButtons.map(y => {\n      return /*#__PURE__*/_jsxDEV(NavButton, {\n        options: y\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBar, \"wp1HGM+QWJqoKvv9eecz16b8UrU=\");\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["C:/Users/Justin/my-app/src/components/NavBar/NavBar.tsx"],"names":["useContext","useMemo","useState","ThemeManagerContext","GlobalThemes","NavButton","NavBar","isVertical","themeManager","theme","setThemeContext","spookyNavButtons","safariNavButtons","eightiesNavButtons","dystopiaNavButtons","defaultNavButtons","label","setLabel","navButtons","setNavButtons","icon","contextItems","themeChanger","Enterprise","Spooky","Safari","Arcade","Dystopia","setIcons","icons","tempButtons","forEach","i","getTheme","map","y"],"mappings":"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","sourcesContent":["import { useContext, useMemo, useState } from \"react\";\r\nimport { ThemeManagerContext } from \"../../App\";\r\nimport { GlobalThemes } from \"../../ThemeManager\";\r\nimport NavButton, { NavButtonOptions } from \"../NavButton/NavButton\";\r\nimport \"./NavBar.scss\";\r\nconst NavBar = ({ isVertical }: { isVertical?: boolean }) => {\r\n  const { themeManager, theme, setThemeContext } =\r\n    useContext(ThemeManagerContext);\r\n  const spookyNavButtons: string[] = [\"Skull\", \"Bat\", \"Pumpkin\"];\r\n  const safariNavButtons: string[] = [\"Sun\", \"Bug\", \"Paw\"];\r\n  const eightiesNavButtons: string[] = [\"Atari\", \"SportsEsports\", \"Tama\"];\r\n  const dystopiaNavButtons: string[] = [\"Atari\", \"SportsEsports\", \"Tama\"];\r\n  const defaultNavButtons: string[] = [\"Home\", \"Themes\", \"Projects\"];\r\n  const [label, setLabel] = useState(\"Webpage\");\r\n  const [navButtons, setNavButtons] = useState<NavButtonOptions[]>([\r\n    { icon: \"Home\", label: \"Home\" },\r\n    {\r\n      icon: \"Themes\",\r\n      label: \"Themes Page\",\r\n      contextItems: [\r\n        {\r\n          icon: \"Projects\",\r\n          label: \"Enterprise\",\r\n          themeChanger: GlobalThemes.Enterprise,\r\n        },\r\n        {\r\n          icon: \"Bat\",\r\n          label: \"Haunted House\",\r\n          themeChanger: GlobalThemes.Spooky,\r\n        },\r\n        {\r\n          icon: \"Paw\",\r\n          label: \"Safari Learning\",\r\n          themeChanger: GlobalThemes.Safari,\r\n        },\r\n        {\r\n          icon: \"SportsEsports\",\r\n          label: \"80s Arcade\",\r\n          themeChanger: GlobalThemes.Arcade,\r\n        },\r\n        {\r\n          icon: \"Skull\",\r\n          label: \"Dystopia\",\r\n          themeChanger: GlobalThemes.Dystopia,\r\n        },\r\n      ],\r\n    },\r\n    { icon: \"Projects\", label: \"Projects\" },\r\n  ]);\r\n  const setIcons = (icons: string[]) => {\r\n    let tempButtons = navButtons;\r\n    icons.forEach((icon, i) => {\r\n      tempButtons[i][\"icon\"] = icon;\r\n    });\r\n    setNavButtons(tempButtons);\r\n  };\r\n  const getTheme = useMemo(() => {\r\n    switch (theme) {\r\n      case GlobalThemes.Spooky:\r\n        setLabel(\"Haunted House Tours\");\r\n        setIcons(spookyNavButtons);\r\n        break;\r\n      case GlobalThemes.Safari:\r\n        setLabel(\"Safari Learning Center\");\r\n        setIcons(safariNavButtons);\r\n        break;\r\n      case GlobalThemes.Arcade:\r\n        setLabel(\"80s Arcade\");\r\n        setIcons(eightiesNavButtons);\r\n        break;\r\n      case GlobalThemes.Dystopia:\r\n        setLabel(\"Dystopia\");\r\n        setIcons(dystopiaNavButtons);\r\n        break;\r\n      default:\r\n        setLabel(\"Enterprise\");\r\n        setIcons(defaultNavButtons);\r\n        break;\r\n    }\r\n    return theme;\r\n  }, [theme]);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"navBarContainer \" +\r\n        (isVertical ? \"vertical \" : \"horizontal \") +\r\n        getTheme\r\n      }\r\n    >\r\n      <div className=\"navBarLabel\">{label}</div>\r\n      {navButtons.map((y) => {\r\n        return <NavButton options={y} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}