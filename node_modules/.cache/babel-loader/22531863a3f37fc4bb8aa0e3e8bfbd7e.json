{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\Documents\\\\GitHub\\\\Portfolio_Website\\\\src\\\\pages\\\\ThemeSwitcher\\\\ResumePage\\\\ResumePage.tsx\";\nimport \"./ResumePage.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResumePage = () => {\n  const languagesList = [{\n    label: \"Languages\",\n    isBulletContext: true,\n    context: [\"HTML5\", \"SCSS\", \"JavaScript\", \"TypeScript\", \"C#\", \"SQL\", \"KefirJS\", \"Python\", \"Java\", \"XAML\", \".Net Core\", \"C++\"]\n  }, {\n    label: \"Technologies\",\n    isBulletContext: true,\n    context: [\"React\", \"React-Native\", \"Angular\", \"Vue.js\", \"Node.js\", \"ASP.NET MVC\", \"Redis\", \"Docker\", \"WPF\", \"Material-Ui\", \"SSMS\", \"AWS\", \"Microsoft Suite\", \"Xamarin\", \"Xamarin-Forms\", \"MySQL\", \"Ableton Live\"]\n  }];\n  const jobList = [{\n    label: \"StatusQuote Inc - Developer\",\n    date: \"January 2020 - Present\",\n    context: [\"Constructed a React Native and React Solution that could run both simultaneously. Then split the Logic Codebase from the Rendering Codebase of each, allowing the Logic codebase to work for all three platforms! This created a highly modular and efficent Codebase for each app.\", \"Developed the UI/UX Experience for an Enterprise-Level Investment app built in React Native and React. Used many common controls such as Material, Kendo and many Chart controls for Dashboards.\", \"Exchanged communications with many top level clients, such as the Head of a Global Medical Company, to accurately create enterprise level in-house financial applications and organizational software.\", \"Created programs that organizes financial data into Government Regulated Excel and PDF documents to be submitted easily. Simplifying a meticulous week-long process, to only a click of a button.\", \"Worked on a multitude of projects ranging from React, Angular, .Net MVC, React Native, and many older in-house systems. I adapted quickly to new languages, new techniques and new enviornments to be successful.\"]\n  }, {\n    label: \"GhoulCode\",\n    date: \"2019 - Present\",\n    context: [\"Enchanced the UI/UX Experience of the webpage. Overhauled the flow of the entire user experience.\"]\n  }, {\n    label: \"ABC Fine Wine & Spirits - Team Manager\",\n    date: \"2017 - 2019\",\n    context: [\"Managed and assigned daily tasks to all team members. Accepted Truck deliveries, Money deposits, and took inventory.\"]\n  }, {\n    label: \"Falcon of the Nile Water Solutions - Account Manager\",\n    date: \"2008 - 2017\",\n    context: [\"Managed many commerical Bodies of Water with Clients such as Disney, Universal, Hilton and many more.\", \"Trained many employees to abide by Government Water Regulations.\"]\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wholeBackground\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentBackground\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"titleText \\r headline one\",\n            children: \"Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"displayContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"primaryText headline two slideOne\",\n              children: \"Skills\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), languagesList.map((job, i) => {\n              return /*#__PURE__*/_jsxDEV(DisplayElement, {\n                options: job\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"displayContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"primaryText headline two slideOne\",\n              children: \"Work History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), jobList.map((job, i) => {\n              return /*#__PURE__*/_jsxDEV(DisplayElement, {\n                options: job\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = ResumePage;\nexport default ResumePage;\nexport const DisplayElement = ({\n  options\n}) => {\n  var _options$date;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    className: options.link ? \"link\" : \"\",\n    onClick: () => {\n      if (options.link) {\n        window.open(options.link, \"_blank\");\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobElementContainer \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"secondaryText headline three slideTwo\",\n        children: options.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 16\n        },\n        className: \"primaryText headline four slideTwo\",\n        children: (_options$date = options.date) !== null && _options$date !== void 0 ? _options$date : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), options.context && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: options.context.length > 6 ? \"gridContext\" : \"fullContext\",\n        children: options.context && options.context.map((job, i) => {\n          var _options$context;\n\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"slideThree\",\n            style: {\n              animationDelay: (options.context && (options === null || options === void 0 ? void 0 : (_options$context = options.context) === null || _options$context === void 0 ? void 0 : _options$context.length) > 6 ? 0.75 : 0.5 + 0.1 * (i + 1)).toString() + \"s\",\n              marginBottom: options.isBulletContext ? \"4px\" : \"16px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"teritaryText \",\n              children: job\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 21\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), options.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"jobImage slideTwo\",\n      src: options.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_c2 = DisplayElement;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ResumePage\");\n$RefreshReg$(_c2, \"DisplayElement\");","map":{"version":3,"sources":["C:/Users/Justin/Documents/GitHub/Portfolio_Website/src/pages/ThemeSwitcher/ResumePage/ResumePage.tsx"],"names":["ResumePage","languagesList","label","isBulletContext","context","jobList","date","map","job","i","DisplayElement","options","display","link","window","open","fontSize","length","animationDelay","toString","marginBottom","image"],"mappings":"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","sourcesContent":["import \"./ResumePage.scss\";\r\n\r\nexport interface iDisplay {\r\n  label: string;\r\n  date?: string;\r\n  image?: string;\r\n  link?: string;\r\n  context?: string[];\r\n  isBulletContext?: boolean;\r\n}\r\nconst ResumePage = () => {\r\n  const languagesList: iDisplay[] = [\r\n    {\r\n      label: \"Languages\",\r\n      isBulletContext: true,\r\n      context: [\r\n        \"HTML5\",\r\n        \"SCSS\",\r\n        \"JavaScript\",\r\n        \"TypeScript\",\r\n        \"C#\",\r\n        \"SQL\",\r\n        \"KefirJS\",\r\n        \"Python\",\r\n        \"Java\",\r\n        \"XAML\",\r\n        \".Net Core\",\r\n        \"C++\",\r\n      ],\r\n    },\r\n    {\r\n      label: \"Technologies\",\r\n      isBulletContext: true,\r\n      context: [\r\n        \"React\",\r\n        \"React-Native\",\r\n        \"Angular\",\r\n        \"Vue.js\",\r\n        \"Node.js\",\r\n        \"ASP.NET MVC\",\r\n        \"Redis\",\r\n        \"Docker\",\r\n        \"WPF\",\r\n        \"Material-Ui\",\r\n        \"SSMS\",\r\n        \"AWS\",\r\n        \"Microsoft Suite\",\r\n        \"Xamarin\",\r\n        \"Xamarin-Forms\",\r\n        \"MySQL\",\r\n        \"Ableton Live\",\r\n      ],\r\n    },\r\n  ];\r\n  const jobList: iDisplay[] = [\r\n    {\r\n      label: \"StatusQuote Inc - Developer\",\r\n      date: \"January 2020 - Present\",\r\n      context: [\r\n        \"Constructed a React Native and React Solution that could run both simultaneously. Then split the Logic Codebase from the Rendering Codebase of each, allowing the Logic codebase to work for all three platforms! This created a highly modular and efficent Codebase for each app.\",\r\n        \"Developed the UI/UX Experience for an Enterprise-Level Investment app built in React Native and React. Used many common controls such as Material, Kendo and many Chart controls for Dashboards.\",\r\n        \"Exchanged communications with many top level clients, such as the Head of a Global Medical Company, to accurately create enterprise level in-house financial applications and organizational software.\",\r\n        \"Created programs that organizes financial data into Government Regulated Excel and PDF documents to be submitted easily. Simplifying a meticulous week-long process, to only a click of a button.\",\r\n        \"Worked on a multitude of projects ranging from React, Angular, .Net MVC, React Native, and many older in-house systems. I adapted quickly to new languages, new techniques and new enviornments to be successful.\",\r\n      ],\r\n    },\r\n    {\r\n      label: \"GhoulCode\",\r\n      date: \"2019 - Present\",\r\n      context: [\r\n        \"Enchanced the UI/UX Experience of the webpage. Overhauled the flow of the entire user experience.\",\r\n      ],\r\n    },\r\n    {\r\n      label: \"ABC Fine Wine & Spirits - Team Manager\",\r\n      date: \"2017 - 2019\",\r\n      context: [\r\n        \"Managed and assigned daily tasks to all team members. Accepted Truck deliveries, Money deposits, and took inventory.\",\r\n      ],\r\n    },\r\n    {\r\n      label: \"Falcon of the Nile Water Solutions - Account Manager\",\r\n      date: \"2008 - 2017\",\r\n      context: [\r\n        \"Managed many commerical Bodies of Water with Clients such as Disney, Universal, Hilton and many more.\",\r\n        \"Trained many employees to abide by Government Water Regulations.\",\r\n      ],\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <div className=\"wholeBackground\">\r\n        <div className=\"contentBackground\">\r\n          <div className=\"content\">\r\n            <div\r\n              className=\"titleText \r\n            headline one\"\r\n            >\r\n              Resume\r\n            </div>\r\n            <div className=\"displayContainer\">\r\n              <div className=\"primaryText headline two slideOne\">Skills</div>\r\n              {/*<div className=\"line\" />*/}\r\n              {languagesList.map((job, i) => {\r\n                return <DisplayElement options={job} />;\r\n              })}\r\n            </div>\r\n            <div className=\"displayContainer\">\r\n              <div className=\"primaryText headline two slideOne\">\r\n                Work History\r\n              </div>\r\n              {/*<div className=\"line\" />*/}\r\n              {jobList.map((job, i) => {\r\n                return <DisplayElement options={job} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ResumePage;\r\nexport const DisplayElement = ({ options }: { options: iDisplay }) => {\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\" }}\r\n      className={options.link ? \"link\" : \"\"}\r\n      onClick={() => {\r\n        if (options.link) {\r\n          window.open(options.link, \"_blank\");\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"jobElementContainer \">\r\n        <div className={\"secondaryText headline three slideTwo\"}>\r\n          {options.label}\r\n        </div>\r\n        <div\r\n          style={{ fontSize: 16 }}\r\n          className=\"primaryText headline four slideTwo\"\r\n        >\r\n          {options.date ?? \"\"}\r\n        </div>\r\n        {options.context && (\r\n          <ul\r\n            className={\r\n              options.context.length > 6 ? \"gridContext\" : \"fullContext\"\r\n            }\r\n          >\r\n            {options.context &&\r\n              options.context.map((job, i) => {\r\n                return (\r\n                  <li\r\n                    className=\"slideThree\"\r\n                    style={{\r\n                      animationDelay:\r\n                        (options.context && options?.context?.length > 6\r\n                          ? 0.75\r\n                          : 0.5 + 0.1 * (i + 1)\r\n                        ).toString() + \"s\",\r\n                      marginBottom: options.isBulletContext ? \"4px\" : \"16px\",\r\n                    }}\r\n                    key={i}\r\n                  >\r\n                    <div className={\"teritaryText \"}>{job}</div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      {options.image && (\r\n        <img className=\"jobImage slideTwo\" src={options.image} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}