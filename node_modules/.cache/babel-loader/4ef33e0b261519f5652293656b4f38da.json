{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\my-app\\\\src\\\\components\\\\RenderComponent\\\\RenderComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport ThemeSwitcher from \"../../pages/ThemeSwitcher/Themeswitcher\";\nimport ThemeManager, { GlobalThemes } from \"../../ThemeManager\";\nimport NavBar from \"../NavBar/NavBar\";\nimport \"./RenderComponent.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RenderComponent = () => {\n  _s();\n\n  const [themeManager, setThemeManager] = useState(new ThemeManager());\n  const ThemeManagerContext = /*#__PURE__*/React.createContext(themeManager);\n  return /*#__PURE__*/_jsxDEV(ThemeManagerContext.Provider, {\n    value: themeManager,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"renderContainer \" + GlobalThemes[theme],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftContainer\",\n        children: /*#__PURE__*/_jsxDEV(NavBar, {\n          theme: theme,\n          setTheme: setTheme,\n          isVertical: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightContainer\",\n        children: /*#__PURE__*/_jsxDEV(ThemeSwitcher, {\n          theme: theme,\n          setTheme: setTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RenderComponent, \"MasRdP+tB1xbNAto0T8tZLsvmuk=\");\n\n_c = RenderComponent;\nexport default RenderComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderComponent\");","map":{"version":3,"sources":["C:/Users/Justin/my-app/src/components/RenderComponent/RenderComponent.tsx"],"names":["React","useState","ThemeSwitcher","ThemeManager","GlobalThemes","NavBar","RenderComponent","themeManager","setThemeManager","ThemeManagerContext","createContext","theme","setTheme"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAqBC,QAArB,QAAqC,OAArC;AAEA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,YAAP,IAAuBC,YAAvB,QAA2C,oBAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,wBAAP;;;AACA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAIE,YAAJ,EAAD,CAAhD;AACA,QAAMM,mBAAmB,gBAAGT,KAAK,CAACU,aAAN,CAAoBH,YAApB,CAA5B;AACA,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEA,YAArC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE,qBAAqBH,YAAY,CAACO,KAAD,CAAjD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEA,KAAf;AAAsB,UAAA,QAAQ,EAAEC,QAAhC;AAA0C,UAAA,UAAU,EAAE;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAED,KAAtB;AAA6B,UAAA,QAAQ,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;GAAMN,e;;KAAAA,e;AAgBN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\r\nimport { useContext, useState } from \"react\";\r\nimport HomePage from \"../../pages/HomePage/HomePage\";\r\nimport ThemeSwitcher from \"../../pages/ThemeSwitcher/Themeswitcher\";\r\nimport ThemeManager, { GlobalThemes } from \"../../ThemeManager\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport \"./RenderComponent.scss\";\r\nconst RenderComponent = () => {\r\n  const [themeManager, setThemeManager] = useState(new ThemeManager());\r\n  const ThemeManagerContext = React.createContext(themeManager);\r\n  return (\r\n    <ThemeManagerContext.Provider value={themeManager}>\r\n      <div className={\"renderContainer \" + GlobalThemes[theme]}>\r\n        <div className=\"leftContainer\">\r\n          <NavBar theme={theme} setTheme={setTheme} isVertical={true} />\r\n        </div>\r\n        <div className=\"rightContainer\">\r\n          <ThemeSwitcher theme={theme} setTheme={setTheme} />\r\n        </div>\r\n      </div>\r\n    </ThemeManagerContext.Provider>\r\n  );\r\n};\r\nexport default RenderComponent;\r\n"]},"metadata":{},"sourceType":"module"}