{"ast":null,"code":"import _slicedToArray from\"C:/Users/Justin/Documents/GitHub/justingiist.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext,useMemo,useState}from\"react\";import{ThemeManagerContext}from\"../../App\";import{GlobalThemes}from\"../../ThemeManager\";import NavButton from\"../NavButton/NavButton\";import\"./NavBar.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NavBar=function NavBar(_ref){var isTopBar=_ref.isTopBar;var _useContext=useContext(ThemeManagerContext),themeManager=_useContext.themeManager,theme=_useContext.theme,setThemeContext=_useContext.setThemeContext;var spookyNavButtons=[\"Skull\",\"Bat\"];var safariNavButtons=[\"Sun\",\"Bug\"];var eightiesNavButtons=[\"Atari\",\"Invader\"];var dystopiaNavButtons=[\"Atari\",\"SportsEsports\"];var defaultNavButtons=[\"Home\",\"Themes\"];var _useState=useState(\"Webpage\"),_useState2=_slicedToArray(_useState,2),label=_useState2[0],setLabel=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),openContext=_useState4[0],setOpenContext=_useState4[1];var _useState5=useState([{route:GlobalThemes.Resume},{icon:\"Themes\",label:\"Themes Page\",contextItems:[{icon:\"Projects\",route:GlobalThemes.Enterprise},{icon:\"Bat\",route:GlobalThemes.Spooky},{icon:\"Sales\",route:GlobalThemes.Sales},{icon:\"Test\",route:GlobalThemes.Test}/*\r\n        {\r\n          icon: \"Paw\",\r\n          label: \"Safari Learning\",\r\n          themeChanger: GlobalThemes.Safari,\r\n          route: \"/safari\",\r\n        },\r\n        {\r\n          icon: \"SportsEsports\",\r\n          label: \"80s Arcade\",\r\n          themeChanger: GlobalThemes.Arcade,\r\n          route: \"/arcade\",\r\n        },\r\n        {\r\n          icon: \"Skull\",\r\n          label: \"Dystopia\",\r\n          themeChanger: GlobalThemes.Dystopia,\r\n          route: \"/dystopia\",\r\n        },\r\n        */]}]),_useState6=_slicedToArray(_useState5,2),navButtons=_useState6[0],setNavButtons=_useState6[1];var setIcons=function setIcons(icons){var tempButtons=navButtons;icons.forEach(function(icon,i){tempButtons[i][\"icon\"]=icon;});setNavButtons(tempButtons);};var getTheme=useMemo(function(){switch(theme){case GlobalThemes.Spooky:setLabel(\"Haunted House Tours\");setIcons(spookyNavButtons);break;case GlobalThemes.Safari:setLabel(\"Safari Learning Center\");setIcons(safariNavButtons);break;case GlobalThemes.Arcade:setLabel(\"80s Arcade\");setIcons(eightiesNavButtons);break;case GlobalThemes.Dystopia:setLabel(\"Dystopia\");setIcons(dystopiaNavButtons);break;case GlobalThemes.Resume:case GlobalThemes.Enterprise:default:setLabel(theme);setIcons(defaultNavButtons);break;}return theme;},[theme]);return/*#__PURE__*/_jsxs(\"div\",{className:\"navBar horizontal \",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"headline six navBarLabel textTitle\",style:{display:\"flex\"},children:[\"Portfolio - \",/*#__PURE__*/_jsx(\"div\",{style:{marginLeft:\"8px\",marginBottom:\"2px\"},className:\"textSecondary headline six\",children:theme})]}),/*#__PURE__*/_jsx(\"div\",{className:\"navBarContainer \"+getTheme,children:navButtons.map(function(y){return/*#__PURE__*/_jsx(NavButton,{options:y,openContext:openContext,setOpenContext:setOpenContext});})})]});};export default NavBar;","map":{"version":3,"sources":["C:/Users/Justin/Documents/GitHub/justingiist.github.io/src/components/NavBar/NavBar.tsx"],"names":["useContext","useMemo","useState","ThemeManagerContext","GlobalThemes","NavButton","NavBar","isTopBar","themeManager","theme","setThemeContext","spookyNavButtons","safariNavButtons","eightiesNavButtons","dystopiaNavButtons","defaultNavButtons","label","setLabel","openContext","setOpenContext","route","Resume","icon","contextItems","Enterprise","Spooky","Sales","Test","navButtons","setNavButtons","setIcons","icons","tempButtons","forEach","i","getTheme","Safari","Arcade","Dystopia","display","marginLeft","marginBottom","map","y"],"mappings":"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","sourcesContent":["import { useContext, useMemo, useState } from \"react\";\r\nimport { ThemeManagerContext } from \"../../App\";\r\nimport { GlobalThemes } from \"../../ThemeManager\";\r\nimport NavButton, { NavButtonOptions } from \"../NavButton/NavButton\";\r\nimport \"./NavBar.scss\";\r\nconst NavBar = ({ isTopBar }: { isTopBar?: boolean }) => {\r\n  const { themeManager, theme, setThemeContext } =\r\n    useContext(ThemeManagerContext);\r\n  const spookyNavButtons: string[] = [\"Skull\", \"Bat\"];\r\n  const safariNavButtons: string[] = [\"Sun\", \"Bug\"];\r\n  const eightiesNavButtons: string[] = [\"Atari\", \"Invader\"];\r\n  const dystopiaNavButtons: string[] = [\"Atari\", \"SportsEsports\"];\r\n  const defaultNavButtons: string[] = [\"Home\", \"Themes\"];\r\n  const [label, setLabel] = useState(\"Webpage\");\r\n  const [openContext, setOpenContext] = useState<boolean>(false);\r\n  const [navButtons, setNavButtons] = useState<NavButtonOptions[]>([\r\n    {\r\n      route: GlobalThemes.Resume,\r\n    },\r\n    {\r\n      icon: \"Themes\",\r\n      label: \"Themes Page\",\r\n      contextItems: [\r\n        {\r\n          icon: \"Projects\",\r\n          route: GlobalThemes.Enterprise,\r\n        },\r\n        {\r\n          icon: \"Bat\",\r\n          route: GlobalThemes.Spooky,\r\n        },\r\n\r\n        {\r\n          icon: \"Sales\",\r\n          route: GlobalThemes.Sales,\r\n        },\r\n        {\r\n          icon: \"Test\",\r\n          route: GlobalThemes.Test,\r\n        },\r\n        /*\r\n        {\r\n          icon: \"Paw\",\r\n          label: \"Safari Learning\",\r\n          themeChanger: GlobalThemes.Safari,\r\n          route: \"/safari\",\r\n        },\r\n        {\r\n          icon: \"SportsEsports\",\r\n          label: \"80s Arcade\",\r\n          themeChanger: GlobalThemes.Arcade,\r\n          route: \"/arcade\",\r\n        },\r\n        {\r\n          icon: \"Skull\",\r\n          label: \"Dystopia\",\r\n          themeChanger: GlobalThemes.Dystopia,\r\n          route: \"/dystopia\",\r\n        },\r\n        */\r\n      ],\r\n    },\r\n  ]);\r\n  const setIcons = (icons: string[]) => {\r\n    let tempButtons = navButtons;\r\n    icons.forEach((icon, i) => {\r\n      tempButtons[i][\"icon\"] = icon;\r\n    });\r\n    setNavButtons(tempButtons);\r\n  };\r\n  const getTheme = useMemo(() => {\r\n    switch (theme) {\r\n      case GlobalThemes.Spooky:\r\n        setLabel(\"Haunted House Tours\");\r\n        setIcons(spookyNavButtons);\r\n        break;\r\n      case GlobalThemes.Safari:\r\n        setLabel(\"Safari Learning Center\");\r\n        setIcons(safariNavButtons);\r\n        break;\r\n      case GlobalThemes.Arcade:\r\n        setLabel(\"80s Arcade\");\r\n        setIcons(eightiesNavButtons);\r\n        break;\r\n      case GlobalThemes.Dystopia:\r\n        setLabel(\"Dystopia\");\r\n        setIcons(dystopiaNavButtons);\r\n        break;\r\n      case GlobalThemes.Resume:\r\n      case GlobalThemes.Enterprise:\r\n      default:\r\n        setLabel(theme);\r\n        setIcons(defaultNavButtons);\r\n        break;\r\n    }\r\n    return theme;\r\n  }, [theme]);\r\n\r\n  return (\r\n    <div className={\"navBar horizontal \"}>\r\n      <div\r\n        className=\"headline six navBarLabel textTitle\"\r\n        style={{ display: \"flex\" }}\r\n      >\r\n        {\"Portfolio - \"}\r\n        <div\r\n          style={{ marginLeft: \"8px\", marginBottom: \"2px\" }}\r\n          className=\"textSecondary headline six\"\r\n        >\r\n          {theme}\r\n        </div>\r\n      </div>\r\n      <div className={\"navBarContainer \" + getTheme}>\r\n        {navButtons.map((y) => {\r\n          return (\r\n            <NavButton\r\n              options={y}\r\n              openContext={openContext}\r\n              setOpenContext={setOpenContext}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}